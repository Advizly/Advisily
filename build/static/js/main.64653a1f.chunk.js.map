{"version":3,"sources":["constant/websiteName.js","account/routes.js","advising/routes.js","common/Home.jsx","common/ContactUs.jsx","assets/pictures/youssef.jpg","assets/pictures/sherif.jpg","components/RoundedPicture.jsx","components/card/CardBody.jsx","components/card/Card.jsx","components/grid/Row.jsx","components/grid/ColSmall.jsx","components/grid/ColMedium.jsx","common/AboutUs.jsx","components/CopyRight.jsx","common/Footer.jsx","components/nav/Nav.jsx","components/nav/NavItem.jsx","components/nav/NavList.jsx","assets/pictures/auc-logo.png","components/Logo.jsx","components/Brand.jsx","services/httpService.js","services/advisingService.js","services/userService.js","services/authService.js","hooks/useAuth.js","profile/Profile.jsx","profile/Logout.jsx","profile/routes.js","common/Header.jsx","common/NotFound.jsx","common/routes.js","advising/AdvisingHome.jsx","utils/coursesUtils.js","hooks/useApi.js","advising/AdvisingResults.jsx","components/form/FormWrapper.jsx","components/form/FormError.jsx","components/form/Form.jsx","components/form/FieldError.jsx","components/form/FormInput.jsx","components/form/FormSelect.jsx","components/form/SubmitButton.jsx","components/form/FormCheckbox.jsx","components/form/FormRadio.jsx","components/form/FormGroup.jsx","components/form/FormPolarRadioGroup.jsx","components/form/FormSelectGroup.jsx","subforms/coursesSubForm/fieldNames.js","subforms/coursesSubForm/coursesModal.jsx","services/coursesService.js","services/catalogsService.js","subforms/coursesSubForm/coursesSubForm.jsx","utils/stringUtils.js","services/pacesService.js","subforms/preferncesSubForm/fieldNames.js","constant/semesters.js","subforms/preferncesSubForm/PreferencesInfo.jsx","services/majorsService.js","services/minorsService.js","hooks/useMajors.js","utils/formattingUtils.js","hooks/useCatalogs.js","subforms/majorSubForm/fieldNames.js","services/standingsServices.js","subforms/majorSubForm/MajorInfo.jsx","hooks/useFormStep.js","hooks/useUserCourses.js","hooks/useUserMajorInfo.js","utils/advisingSubmissionUtils.js","subforms/majorSubForm/validationSchema.js","subforms/preferncesSubForm/validationSchema.js","subforms/coursesSubForm/validationSchema.js","advising/form/validationSchema.js","subforms/majorSubForm/defaultValues.js","subforms/preferncesSubForm/defaultValues.js","subforms/coursesSubForm/defaultValues.js","advising/form/defaultValues.js","advising/form/AdvisingForm.jsx","advising/index.jsx","account/resetPassword/fieldNames.js","account/resetPassword/defaultValues.js","account/resetPassword/validationSchema.js","account/resetPassword/ResetPassword.jsx","account/forgotPassword/ForgotPassword.jsx","account/loginForm/fieldNames.js","account/loginForm/defaultValues.js","account/loginForm/validationSchema.js","account/loginForm/LoginForm.jsx","subforms/userSubForm/fieldNames.js","subforms/userSubForm/UserSubForm.jsx","subforms/userSubForm/validationSchema.js","account/signUpForm/validationSchema.js","subforms/userSubForm/defaultValues.js","account/signUpForm/defaultValues.js","account/signUpForm/SignupForm.jsx","account/verifyEmail/fieldNames.js","account/verifyEmail/defaultValues.js","account/verifyEmail/validationSchema.js","account/verifyEmail/VerifyEmail.jsx","account/index.js","components/ProtectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADVISILY","ACCOUNT_ROUTE","LOGIN_ROUTE","SIGN_UP_ROUTE","RESET_PASSWORD_ROUTE","VERIFY_EMAIL_ROUTE","FORGOT_PASSWORD_ROUTE","ADVISING_HOME_ROUTE","ADVISING_FORM_ROUTE","ADVISING_RESULTS_ROUTE","Home","redirectTo","user","className","to","id","ContactUs","props","href","RoundedPicture","radius","alt","imageStyles","width","height","style","CardBody","title","subtitle","children","Card","Row","ColSmall","ColMedium","numOfCols","AboutUs","src","sherifPic","youssefPic","CopyRight","Footer","Nav","NavItem","label","extraClasses","NavList","others","Logo","logo","Brand","axios","interceptors","response","use","err","status","console","log","alert","Promise","reject","httpService","get","post","delete","put","setJwt","jwt","defaults","headers","common","apiEndpoint","apiBaseUrl","getAdvisingSessions","a","http","advisingSessions","data","getAdvisingSession","userId","params","addAdvisingSession","sessionInfo","updateAdvisingSessions","generatePlan","advisingSessionId","getAdvisingResultCourses","courses","getAdvisingResults","results","saveAdvisingSession","localStorage","setItem","getUserAdvisingSessionId","advisingService","retrieveAdvisingSession","getItem","apiEndPoint","getUser","token","getUsers","users","validateResetToken","resetPassword","password","forgotPassword","email","resendVerification","getStudentMajors","majors","getStudentMinors","minors","getStudentCourses","studentCourses","addStudentCourse","courseId","deleteStudentCourse","config","res","addStudentMajor","majorId","catalogId","deleteStudentMajor","addStudentMinor","minorId","deleteStudentMinor","userService","register","userInfo","update","updatedData","tokenKey","getJwt","loginWithJwt","getCurrentUser","login","refreshUser","newUser","Error","isVerified","jwtDecode","ex","auth","logout","removeItem","useAuth","refresh","useState","setUser","useEffect","then","Profile","firstName","lastName","Logout","window","location","LOGOUT_ROUTE","Header","NotFound","NOT_FOUND_ROUTE","AdvisingHome","formatCourseData","course","courseCode","courseTitle","formatedTitle","prefix","useApi","apiFunc","handleResponse","loading","setLoading","error","setError","failedToLoad","setFailedToLoad","setData","request","result","undefined","AdvisingResults","userIndex","setUserIndex","setUsers","getUsersApi","setAdvisingSessionId","resultCoursesApi","advisingSessionIdApi","userCoursesApi","renderCoursesList","map","Math","random","onClick","length","standing","semesters","semesterNumber","sortedCourses","sort","c1","c2","sortCourses","totalCredits","c","credits","reduce","replace","FormWrapper","FormError","errorMessage","useFormikContext","isValid","submitCount","Form","initialValues","validationSchema","onSubmit","rest","FieldError","name","getFieldMeta","touched","FormInput","visible","useField","field","htmlFor","aria-invalid","FormSelect","changeButton","editable","setEditable","disabled","type","SubmitButton","isSubmitting","FormCheckbox","inputClassName","divClassName","checked","value","FormRadio","FormGroup","FormPolarRadioGroup","trueLabel","falseLabel","FormSelectGroup","defaultOption","items","idSelector","nameSelector","valueSelector","item","COURSES_IDS","GENERAL_ELECTIVE_CREDITS","EXEMPTED_CREDITS","CoursesModal","show","onClose","prefixes","handleClose","setSelectedPrefix","selectedPrefix","coursesPrefixMap","prefixMap","forEach","push","mapCoursestoPrefixes","Modal","size","onHide","scrollable","dialogClassName","closeButton","Title","Body","JSON","stringify","p1","p2","Button","variant","getAllCourses","getPrefixes","catCourseUrl","getCatalogs","catalogs","getCatalogCourses","catCourses","CoursesSubForm","values","setFieldValue","prefixesApi","getPrefixesApi","catalogApi","handleCatalogCouresesResponse","coursesApi","catalogCourses","handleCourseCheck","target","selectedIds","filter","v","prerequisiteFullfilled","selectedCourseIds","parseInt","requisites","includes","some","reqSet","every","r","requisiteTypeId","showModal","setShowModal","renderCourseRow","row","onChange","confirm","catalogCourse","courseType","categorized","categoriesMap","courseTypeId","CourseTypeIds","mathElec","mathOrMajorElec","electives","categoryIndex","categoriseCatalogCourses","category","coursesPerRow","groupedCourses","i","groupCourses","stringToBool","str","toLowerCase","trim","getPaces","paces","OVERLOADING","TAKING_SUMMER","TAKING_WINTER","OVERLOADING_CREDITS","SUMMER_CREDITS","WINTER_CREDITS","PACE_ID","SEMESTERS_TO_PLAN","PreferencesInfo","takingWinter","takingSummer","overloading","handleOnChange","fieldToResetName","resetValue","setPaces","min","max","getMajors","getMinors","useMajors","setMajors","setMinors","m","majorTitle","formatMajors","minorTitle","formatMinors","useCatalogs","setCatalogs","year","formatCatalogs","MAJOR_ID","CATALOG_ID","MINOR_IDS","SECOND_MAJOR_ID","SECOND_CATALOG_ID","IS_DOUBLE_MAJORING","IS_MINORING","STANDING_ID","SEMESTER_NUMBER","getStandings","standings","MajorInfo","setStandings","catch","isMinoring","isDoubleMajoring","firstMajorCatalogs","secondMajorId","mounted","useFormStep","startStep","step","setStep","next","back","useUserCourses","coursesIds","setStudentCourseIds","generalElecCredits","setGeneralElecCredits","getGeneralElecCredits","advisingSession","getCoursesIds","useUserMajorInfo","firstMajor","setFirstMajor","secondCatalogId","secondMajor","setSecondMajor","minorIds","getStudentMajorsInfo","getStudentMinorsIds","updateUserMajor","newMajorId","oldCatalogId","oldMajorId","updateUserMinors","selectedMinorIds","oldMinorIds","newMinorIds","indexOf","deleteMinorIds","updateStudentCourses","initialCoursesIds","newIds","deletedIds","REQUIRED_MESSAGE","Yup","required","notRequired","when","is","notOneOf","integer","concat","majorValidationSchema","preferencesValidationSchema","coursesCalidationSchema","majorDefaultValues","preferencesDefaultValues","coursesDefaultValues","advisingDefautlValues","AdvisingForm","userMajorInfo","userCoursesInfo","standingId","defaultValues","handleSubmit","setSubmitting","oldSecondMajorId","oldSecondCatalogId","history","getFormTitle","enableReinitialize","getFormChild","AdvisingRouter","path","exact","component","PASSWORD","REPEAT_PASSWORD","resetPasswordDefaultValues","PASSWORD_TOO_SHORT","resetPasswordSchema","matches","oneOf","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","queryToken","queryString","parse","search","pathname","getBody","ForgotPassword","setStatus","message","EMAIL","loginDefaultValues","loginSchema","LoginForm","setErrors","aria-required","FIRST_NAME","LAST_NAME","USER_ID","UserSubForm","NAME_FORMAT","NAME_TOO_LONG","INVALID_NAME_FORMAT","userValidationSchema","userDefaultValues","signUpDefaultValues","SignUpForm","state","verifyEmailDefaultValues","verifyEmailSchema","TITLE","VerifyEmail","showForm","setShowForm","getMessage","placeholder","AccountRouter","ProtectedRoute","Component","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64653a1f.chunk.js","sourcesContent":["export const ADVISILY = \"Advisily\";\n","export const ACCOUNT_ROUTE = \"/account\";\n\nexport const LOGIN_ROUTE = `${ACCOUNT_ROUTE}/login`;\nexport const SIGN_UP_ROUTE = `${ACCOUNT_ROUTE}/sign-up`;\nexport const RESET_PASSWORD_ROUTE = `${ACCOUNT_ROUTE}/reset-password`;\nexport const VERIFY_EMAIL_ROUTE = `${ACCOUNT_ROUTE}/verify-email`;\nexport const FORGOT_PASSWORD_ROUTE = `${ACCOUNT_ROUTE}/forgot-password`;\n","export const ADVISING_HOME_ROUTE = \"/advising\";\nexport const ADVISING_FORM_ROUTE = `${ADVISING_HOME_ROUTE}/form`;\nexport const ADVISING_RESULTS_ROUTE = `${ADVISING_HOME_ROUTE}/results`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ADVISILY } from \"../constant/websiteName\";\nimport { SIGN_UP_ROUTE } from \"../account/routes\";\nimport { ADVISING_HOME_ROUTE } from \"../advising/routes\";\n\nfunction Home({ user }) {\n  const redirectTo = user ? ADVISING_HOME_ROUTE : SIGN_UP_ROUTE;\n  return (\n    <div className=\"text-center home-container\">\n      <h1> Your new academic advisor is here!</h1>\n      <p className=\"home-text font-italic my-4\">\n        {ADVISILY} is an automated advisor to help you choose your courses.\n      </p>\n      <div className=\"home-buttons d-flex justify-content-center\">\n        {/* <Link to=\"/login\">\n          <button id=\"home-login-btn\" className=\"btn  mx-2\">\n            Login\n          </button>\n        </Link> */}\n        <Link to={redirectTo}>\n          <button id=\"home-signup-btn\" className=\"btn nav-btn \">\n            Get Started!\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction ContactUs(props) {\n  return (\n    <div className=\" text-center p-5\">\n      <h1>Contact Us</h1>\n      <p>\n        For inquiries or issues, contact us at{\" \"}\n        <a href=\"youssefagiza@aucegypt.edu\">youssefagiza@aucegypt.edu </a>\n      </p>\n      <p>\n        For bugs and technical issues, please open an issue request on our{\" \"}\n        <a href=\"https://github.com/Youssef-Agiza/AutomatedAdvisingSystem\">\n          github repository.\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default ContactUs;\n","export default __webpack_public_path__ + \"static/media/youssef.42266403.jpg\";","export default __webpack_public_path__ + \"static/media/sherif.bd1c984d.jpg\";","import React from \"react\";\n\nfunction RoundedPicture({ radius, alt, ...props }) {\n  const imageStyles = radius ? { width: radius, height: radius } : {};\n  return (\n    <div className=\"card-image-rounded\">\n      <img {...props} style={imageStyles} alt={alt} />;\n    </div>\n  );\n}\n\nexport default RoundedPicture;\n","import React from \"react\";\n\nfunction CardBody({ title, subtitle, children }) {\n  return (\n    <div className=\"card-body\">\n      <h4 className=\"card-title\"> {title}</h4>\n      <h6 className=\"card-subtitle mb-2 text-muted\">{subtitle}</h6>\n      <p className=\"card-text\">{children}</p>\n    </div>\n  );\n}\n\nexport default CardBody;\n","import React from \"react\";\n\nfunction Card({ children, ...props }) {\n  return (\n    <div className=\"card \" {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Row({ children, className, ...props }) {\n  if (!className) className = \"\";\n  return (\n    <div className={\"row \" + className} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction ColSmall({ numOfCols, children, className, ...props }) {\n  numOfCols =\n    !numOfCols || numOfCols > 12 || numOfCols < 0 ? \"\" : \"-\" + numOfCols;\n\n  className = className + \" col-sm\" + numOfCols;\n  return (\n    <div className={className} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default ColSmall;\n","import React from \"react\";\n\nfunction ColMedium({ numOfCols, children, className = \"\", ...props }) {\n  numOfCols =\n    !numOfCols || numOfCols > 12 || numOfCols < 0 ? \"\" : \"-\" + numOfCols;\n\n  className = className + \" col-md\" + numOfCols;\n\n  return (\n    <div className={className} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default ColMedium;\n","import React from \"react\";\n\nimport youssefPic from \"../assets/pictures/youssef.jpg\";\nimport sherifPic from \"../assets/pictures/sherif.jpg\";\n\nimport RoundedPicture from \"../components/RoundedPicture\";\nimport CardBody from \"../components/card/CardBody\";\nimport Card from \"../components/card/Card\";\nimport { Row, ColMedium } from \"../components/grid\";\nfunction AboutUs(props) {\n  return (\n    <div className=\"text-center\">\n      <div>\n        <h1>About</h1>\n      </div>\n      <Row className=\"d-flex justify-content-center\">\n        <ColMedium numOfCols=\"6\" className=\"d-flex justify-content-center\">\n          <Card>\n            <RoundedPicture src={sherifPic} alt=\"Sherif Aly\" />\n            <CardBody\n              title=\"Sherif Aly\"\n              subtitle=\"Professor and Chair (American University in Cairo)\"\n            >\n              Professor Sherif Aly is a professor and Chair of the Department of\n              Computer Science, with significant industrial and governmental\n              consultation experience.\n            </CardBody>\n          </Card>\n        </ColMedium>\n        <ColMedium numOfCols=\"6\" className=\"d-flex justify-content-center\">\n          <Card>\n            <RoundedPicture src={youssefPic} alt=\"Youssef Agiza\" />\n            <CardBody\n              title=\"Youssef Agiza\"\n              subtitle=\"Undergraduate Student (American University in Cairo)\"\n            >\n              Youssef Agiza is an undergraduate student at the American\n              University in Cairo majoring in computer science and mathematics.\n            </CardBody>\n          </Card>\n        </ColMedium>\n      </Row>\n    </div>\n  );\n}\n\nexport default AboutUs;\n","import React from \"react\";\n\nfunction CopyRight(props) {\n  return (\n    <div className=\"copy-right\">\n      <p>\n        2021 &copy;\n        <a className=\"navbar-brand\" href=\"https://www.aucegypt.edu/home\">\n          The American University in Cairo.\n        </a>\n        All rights reserved.\n      </p>\n    </div>\n  );\n}\n\nexport default CopyRight;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Row, ColMedium } from \"../components/grid\";\nimport CopyRight from \"../components/CopyRight\";\nfunction Footer(props) {\n  return (\n    <footer className=\"d-flex justify-content-between app-footer\">\n      <CopyRight />\n      <Row className=\"footer-links \">\n        <ColMedium numOfCols=\"auto\">\n          <NavLink to=\"/about-us\">About Us</NavLink>\n        </ColMedium>\n        <ColMedium numOfCols=\"auto\">\n          <NavLink to=\"/contact-us\">Contact Us</NavLink>\n        </ColMedium>\n      </Row>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Nav({ children }) {\n  return (\n    <nav className=\"navbar app-header navbar-expand-lg navbar-dark \">\n      {children}\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavItem({ label, extraClasses = \"\", to = \"\", ...props }) {\n  return (\n    <li className={\"navbar-item mx-2 \" + extraClasses} {...props}>\n      <NavLink to={to} className={\"nav-link \"}>\n        {label}\n      </NavLink>\n    </li>\n  );\n}\n\nexport default NavItem;\n","import React from \"react\";\n\nfunction NavList({ children, extraClasses = \"\", ...others }) {\n  return (\n    <ul className={\"navbar-nav nav-list \" + extraClasses} {...others}>\n      {children}\n    </ul>\n  );\n}\n\nexport default NavList;\n","export default __webpack_public_path__ + \"static/media/auc-logo.fb665a08.png\";","import React from \"react\";\nimport logo from \"../assets/pictures/auc-logo.png\";\n\nfunction Logo() {\n  return (\n    <div className=\"container bg-light rounded logo \">\n      <img\n        src={logo}\n        width={100}\n        height={60}\n        alt=\"The American University in Cairo logo\"\n      />\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\nimport { ADVISILY } from \"../constant/websiteName\";\n\nfunction Brand(props) {\n  return (\n    <div className=\"navbar-item brand-title\">\n      <h1 id=\"brand\">{ADVISILY}</h1>\n    </div>\n  );\n}\n\nexport default Brand;\n","import axios from \"axios\";\n\nconst setJwt = (jwt) => {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n};\naxios.interceptors.response.use(null, (err) => {\n  const expectedError =\n    err.response && err.response.status >= 400 && err.response.status < 500;\n  if (!expectedError) {\n    console.log(\"Logging unexpected expected error: \", err);\n    alert(\"An unexpected error occurred.\");\n    throw err;\n  }\n  return Promise.reject(err);\n});\n\nconst httpService = {\n  get: axios.get,\n  post: axios.post,\n  delete: axios.delete,\n  put: axios.put,\n  setJwt,\n};\nexport default httpService;\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\n\nconst apiEndpoint = apiBaseUrl + \"/advising\";\n\nexport const getAdvisingSessions = async () => {\n  const { data: advisingSessions } = await http.get(apiEndpoint);\n  return advisingSessions;\n};\n\nexport const getAdvisingSession = async (userId) => {\n  const { data: advisingSessions } = await http.get(apiEndpoint, {\n    params: { userId },\n  });\n  return advisingSessions;\n};\n\nexport const addAdvisingSession = async (sessionInfo) => {\n  const { data } = await http.post(apiEndpoint, sessionInfo);\n  return data;\n};\n\nexport const updateAdvisingSessions = async (sessionInfo) => {\n  const { data } = await http.put(apiEndpoint, sessionInfo);\n  return data;\n};\n\nexport const generatePlan = async (advisingSessionId) => {\n  await http.post(`${apiEndpoint}/generate-plan`, {\n    advisingSessionId,\n  });\n};\nexport const getAdvisingResultCourses = async (advisingSessionId) => {\n  const { data: courses } = await http.get(\n    `${apiEndpoint}/${advisingSessionId}/results/courses`\n  );\n  return courses;\n};\n\nexport const getAdvisingResults = async (advisingSessionId) => {\n  const { data: results } = await http.get(\n    `${apiEndpoint}/${advisingSessionId}/results`\n  );\n  return results;\n};\nexport const saveAdvisingSession = (advisingSessionId) => {\n  localStorage.setItem(\"advisingSessionId\", advisingSessionId);\n};\nexport const retrieveAdvisingSession = () =>\n  localStorage.getItem(\"advisingSessionId\");\n\nexport const getUserAdvisingSessionId = async (userId) => {\n  const { data } = await http.get(`${apiEndpoint}/getUserAdvisingId/${userId}`);\n  return data.advisingSessionId;\n};\nconst advisingService = {\n  getAdvisingSessions,\n  getAdvisingSession,\n  addAdvisingSession,\n  updateAdvisingSessions,\n  generatePlan,\n  getAdvisingResults,\n  getAdvisingResultCourses,\n  saveAdvisingSession,\n  retrieveAdvisingSession,\n};\nexport default advisingService;\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\nconst apiEndPoint = apiBaseUrl + \"/users\";\n\n/*User  is expected to have the following:\n    userId, firstName,lastName, auc email, password, repeatPassword\n*/\nexport const register = (userInfo) => {\n  return http.post(`${apiEndPoint}/register`, userInfo);\n};\nexport const getUser = async (userId) => {\n  const { data, headers } = await http.get(`${apiEndPoint}/user`, {\n    params: {\n      userId,\n    },\n  });\n  if (!data) return null;\n\n  return { user: data, token: headers[\"x-auth-token\"] };\n};\n\nexport const getUsers = async () => {\n  const { data: users } = await http.get(`${apiEndPoint}`);\n\n  return users;\n};\n\nexport const validateResetToken = async (token) => {\n  return await http.post(`${apiEndPoint}/validate-reset-token`, { token });\n};\nexport const resetPassword = async (token, password) => {\n  return await http.post(`${apiEndPoint}/reset-password`, {\n    token,\n    password,\n  });\n};\nexport const forgotPassword = async (email) => {\n  return await http.post(`${apiEndPoint}/forgot-password`, { email });\n};\nexport const resendVerification = async (email) => {\n  return await http.post(`${apiEndPoint}/resend-verification`, { email });\n};\n\nexport const getStudentMajors = async (userId) => {\n  const { data: majors } = await http.get(`${apiEndPoint}/user-majors`, {\n    params: { userId },\n  });\n  return majors;\n};\nexport const getStudentMinors = async (userId) => {\n  const { data: minors } = await http.get(`${apiEndPoint}/user-minors`, {\n    params: { userId },\n  });\n  return minors;\n};\n\nexport const getStudentCourses = async (userId) => {\n  const { data: studentCourses } = await http.get(\n    `${apiEndPoint}/user-courses`,\n    { params: { userId } }\n  );\n\n  return studentCourses;\n};\n\nexport const addStudentCourse = async (userId, courseId) => {\n  await http.post(`${apiEndPoint}/user-courses`, {\n    userId,\n    courseId,\n  });\n};\nexport const deleteStudentCourse = async (userId, courseId) => {\n  const config = {\n    data: { userId, courseId },\n  };\n  const res = await http.delete(`${apiEndPoint}/user-courses`, config);\n  return res;\n};\n\nexport const addStudentMajor = async (userId, majorId, catalogId) => {\n  const res = await http.post(`${apiEndPoint}/user-majors`, {\n    userId,\n    majorId,\n    catalogId,\n  });\n  return res;\n};\n\nexport const deleteStudentMajor = async (userId, majorId) => {\n  const res = await http.delete(`${apiEndPoint}/user-majors`, {\n    data: {\n      userId,\n      majorId,\n    },\n  });\n  return res;\n};\nexport const addStudentMinor = async (userId, minorId) => {\n  const config = {\n    userId,\n    minorId,\n  };\n  const res = await http.post(`${apiEndPoint}/user-minors`, config);\n  return res;\n};\n\nexport const deleteStudentMinor = async (userId, minorId) => {\n  const config = {\n    data: {\n      userId,\n      minorId,\n    },\n  };\n  const res = await http.delete(`${apiEndPoint}/user-minors`, config);\n  return res;\n};\n\nexport const update = async (userId, updatedData) => {\n  const res = await http.put(`${apiEndPoint}/${userId}`, updatedData);\n  return res;\n};\n\nconst userService = {\n  register,\n  update,\n  getUser,\n  getUsers,\n  getStudentMajors,\n  getStudentMinors,\n  getStudentCourses,\n  addStudentCourse,\n  deleteStudentCourse,\n  addStudentMajor,\n  deleteStudentMajor,\n  addStudentMinor,\n  deleteStudentMinor,\n};\nexport default userService;\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\nimport { saveAdvisingSession } from \"./advisingService\";\nimport { getUser } from \"./userService\";\nconst apiEndPoint = apiBaseUrl + \"/users/login\";\nconst tokenKey = \"token\";\n\nexport const getJwt = () => {\n  return localStorage.getItem(tokenKey);\n};\n\nhttp.setJwt(getJwt());\n\nexport const loginWithJwt = (jwt) => {\n  localStorage.setItem(tokenKey, jwt);\n  const { advisingSessionId } = getCurrentUser();\n  saveAdvisingSession(advisingSessionId);\n  http.setJwt(getJwt());\n};\nexport const login = async ({ email, password }) => {\n  const { data: jwt } = await http.post(apiEndPoint, {\n    email,\n    password,\n  });\n  localStorage.setItem(tokenKey, jwt);\n};\nexport const logout = () => {\n  localStorage.removeItem(tokenKey);\n};\n\nexport const refreshUser = async (user) => {\n  try {\n    const res = await getUser(user.userId);\n    const { user: newUser, token } = res;\n    if (!newUser) throw new Error(\"Error refreshing user\");\n    if (!newUser.isVerified) return user;\n    loginWithJwt(token);\n\n    return jwtDecode(token);\n  } catch (ex) {\n    console.log(\"From refreshUser\", ex, user);\n  }\n};\n\nexport const getCurrentUser = () => {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    let user = jwtDecode(jwt);\n\n    // console.log(\"Before refresh\");\n    // if (user && !user.isVerified) user = await refreshUser(user);\n    // console.log(\"after refresh\");\n\n    // console.log(\"user from get current user\", user);\n    return user;\n  } catch (ex) {\n    return null;\n  }\n};\n\nconst auth = {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n  refreshUser,\n};\nexport default auth;\n","import { useState, useEffect } from \"react\";\nimport auth from \"../services/authService\";\n\nfunction useAuth(refresh) {\n  const [user, setUser] = useState(auth.getCurrentUser());\n  useEffect(() => {\n    if (refresh) auth.refreshUser(user).then((newUser) => setUser(newUser));\n  }, [refresh]);\n\n  return user;\n}\n\nexport default useAuth;\n","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\n\nfunction Profile(props) {\n  const user = useAuth();\n\n  if (!user) return null;\n\n  return (\n    <>\n      <h1 className=\"\">Profile</h1>\n      <p>\n        <strong>Name: </strong> {user.firstName + \" \" + user.lastName}\n      </p>\n      <p>\n        <strong>Email: </strong> {user.email}\n      </p>\n      <p>\n        <strong>Student ID: </strong> {user.userId}\n      </p>\n    </>\n  );\n}\n\nexport default Profile;\n","import { useEffect } from \"react\";\nimport auth from \"../services/authService\";\n\nfunction Logout(props) {\n  useEffect(() => {\n    auth.logout();\n    window.location = \"/\";\n  }, []);\n  return null;\n}\n\nexport default Logout;\n","export const PROFILE_ROUTE = \"/me\";\nexport const LOGOUT_ROUTE = \"/logout\";\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Nav, NavItem, NavList } from \"../components/nav\";\nimport Logo from \"../components/Logo\";\nimport Brand from \"../components/Brand\";\nimport { ColMedium } from \"../components/grid\";\n\nimport { LOGIN_ROUTE, SIGN_UP_ROUTE } from \"../account/routes\";\nimport { LOGOUT_ROUTE } from \"../profile\";\n\nfunction Header({ user }) {\n  return (\n    <Nav>\n      <ColMedium numOfCols=\"4\" className=\"d-flex\">\n        <NavLink className=\"navbar-brand \" to=\"/\">\n          <Logo />\n        </NavLink>\n\n        <NavList>\n          <NavItem label=\"Home\" to=\"/\" />\n          {user && <NavItem label=\"Advise\" to=\"/advising\" />}\n        </NavList>\n      </ColMedium>\n      <ColMedium numOfCols=\"4\">\n        <Brand />\n      </ColMedium>\n      <ColMedium numOfCols=\"auto\">\n        <NavList extraClasses=\"nav-right\">\n          {!user && (\n            <>\n              <NavItem to={LOGIN_ROUTE} label=\"Login\" />\n              <NavItem\n                to={SIGN_UP_ROUTE}\n                label=\"Sign Up\"\n                extraClasses=\"btn\"\n                id=\"nav-signup-btn\"\n              />\n            </>\n          )}\n          {user && (\n            <>\n              <NavItem to=\"/me\" label={user.firstName} />\n              <NavItem to={LOGOUT_ROUTE} label=\"Logout\" extraClasses=\"btn\" />\n            </>\n          )}\n        </NavList>\n      </ColMedium>\n    </Nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound(props) {\n  return (\n    <>\n      <h1 className=\"text-center my-4\">Sorry, Page Not Found!</h1>\n    </>\n  );\n}\n\nexport default NotFound;\n","export const HOME_ROUTE = \"/\";\nexport const ABOUT_US_ROUTE = \"/about-us\";\nexport const CONTACT_US_ROUTE = \"/contact-us\";\nexport const NOT_FOUND_ROUTE = \"/not-found\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ADVISILY } from \"../constant/websiteName\";\nfunction AdvisingHome(props) {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"frame\">\n        <h1 className=\"text-center mb-3\">Advising</h1>\n        <h3>Why {ADVISILY}?</h3>\n        <ul>\n          <li>\n            <strong>No more waiting!</strong>\n            <p>\n              with an automated advisor you don't need to schedule an\n              appointment, wait for your turn, and\n            </p>\n          </li>\n          <li>\n            <strong>Quick</strong>\n            <p>You are only a couple of button presses away from your plan</p>\n          </li>\n          <li>\n            <strong>Convenience</strong>\n            <p>You get to choose your preferences and we create your plan a</p>\n          </li>\n          <li>\n            <strong>As many sessions as you want</strong>\n            <p>\n              Advising sessions are not once per semester. You can come again at\n              any time, edit your preferences, and get a new plan.\n            </p>\n          </li>\n        </ul>\n\n        <h3>How things work?</h3>\n        <p>\n          <em>Your role </em>&mdash; You only need to answer some questions\n          about major-related info and your preferences and leave the rest to\n          us!\n        </p>\n        <p>\n          <em>Our role </em>&mdash; We generate a plan for you courses according\n          to your preferences.\n        </p>\n        <h3>What are you waiting for?</h3>\n        <div className=\"my-5 text-center\">\n          <Link to=\"/advising/form\" className=\"m-4\">\n            <button className=\"btn btn-primary btn-lg\">\n              Let's get started!\n            </button>\n          </Link>\n          <Link to=\"/advising/results\">\n            <button className=\"btn btn-lg\"> Previous result</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdvisingHome;\n","import { CourseTypeIds } from \"../config.json\";\n\nexport const formatCourseData = (course) => {\n  const { courseId, courseCode, courseTitle, prefix } = course;\n  const titleCode = courseCode < 0 ? \"XXX\" : courseCode;\n  const formatedTitle = prefix + \" \" + titleCode + \" - \" + courseTitle;\n\n  return { courseId, formatedTitle };\n};\n\nexport const sortCourses = (courses) => {\n  return courses.sort((c1, c2) => {\n    if (c1.prefix < c2.prefix) return -1;\n    if (c1.prefix > c2.prefix) return 1;\n\n    if (c1.courseCode < c2.courseCode) return -1;\n    if (c1.courseCode > c2.courseCode) return 1;\n\n    return c1.courseTitle < c2.courseTitle ? -1 : 1;\n  });\n};\n\nexport const groupCoursesBySemesterNumber = (courses) => {\n  const groupedCourses = [];\n\n  courses.forEach((course) => {\n    const { semesterNumber } = course;\n    if (!groupedCourses[semesterNumber])\n      groupedCourses[semesterNumber] = {\n        courses: [course],\n        semesterNumber,\n        totalCredits: course.credits,\n      };\n    else {\n      groupedCourses[semesterNumber].courses.push(course);\n      groupedCourses[semesterNumber].totalCredits += course.credits;\n    }\n  });\n  return groupedCourses;\n};\n\n//return nested array of objects\n//used to render courses in tabular format\nexport const groupCourses = (courses, coursesPerRow = 2) => {\n  const groupedCourses = [];\n  let row = [];\n  for (let i = 1; i <= courses.length; i++) {\n    row.push(courses[i - 1]);\n\n    if (i % coursesPerRow === 0 || i === courses.length) {\n      groupedCourses.push(row);\n      row = [];\n    }\n  }\n  return groupedCourses;\n};\n\nexport const categoriseCatalogCourses = (catalogCourses) => {\n  const categorized = [],\n    categoriesMap = {};\n  catalogCourses.forEach((course) => {\n    let { courseTypeId, courseType } = course;\n\n    if (\n      courseTypeId === CourseTypeIds.mathElec ||\n      courseTypeId === CourseTypeIds.mathOrMajorElec\n    ) {\n      courseTypeId = CourseTypeIds.electives;\n      courseType = \"Major Electives\";\n    }\n\n    if (categoriesMap[courseTypeId] === undefined) {\n      categoriesMap[courseTypeId] = categorized.length;\n      categorized.push({ courseType, courses: [course] });\n    } else {\n      const categoryIndex = categoriesMap[courseTypeId];\n      categorized[categoryIndex][\"courses\"].push(course);\n    }\n  });\n  return categorized;\n};\n\nexport const mapCoursestoPrefixes = (courses) => {\n  let prefixMap = {};\n\n  courses.forEach((course) => {\n    const { prefix } = course;\n    if (prefix === \"XXXX\") return; //skip pseudo-courses\n\n    if (prefixMap[prefix] !== undefined) prefixMap[prefix].push(course);\n    else prefixMap[prefix] = [course];\n  });\n\n  return prefixMap;\n};\n","import { useState } from \"react\";\n\nfunction useApi(apiFunc, handleResponse) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [failedToLoad, setFailedToLoad] = useState(false);\n  const [data, setData] = useState([]);\n\n  const request = async (...args) => {\n    setLoading(true);\n    try {\n      let result = await apiFunc(...args);\n      if (handleResponse !== undefined) result = handleResponse(result);\n      setData(result);\n    } catch (err) {\n      setError(err);\n      setFailedToLoad(false);\n      console.error(\"Error in useApi: \", err, apiFunc);\n    }\n    setLoading(false);\n  };\n\n  return {\n    data,\n    loading,\n    error,\n    failedToLoad,\n    request,\n  };\n}\n\nexport default useApi;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAdvisingResultCourses,\n  retrieveAdvisingSession,\n  getUserAdvisingSessionId,\n  getAdvisingResults,\n} from \"../services/advisingService\";\nimport { getCurrentUser } from \"../services/authService\";\nimport {\n  formatCourseData,\n  groupCourses,\n  groupCoursesBySemesterNumber,\n  sortCourses,\n} from \"../utils/coursesUtils\";\n\nimport { Row, ColMedium } from \"../components/grid\";\nimport useApi from \"../hooks/useApi\";\nimport { getStudentCourses, getUsers } from \"../services/userService\";\n\nfunction AdvisingResults(props) {\n  const [userIndex, setUserIndex] = useState(0);\n  const incrementIndex = () => {\n    setUserIndex(userIndex + 1 < users.length ? userIndex + 1 : userIndex);\n  };\n  const decrementIndex = () => {\n    setUserIndex(userIndex - 1 >= 0 ? userIndex - 1 : userIndex);\n  };\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const getUsersApi = useApi(getUsers, (users) => {\n    setUsers(users);\n    setUser(users[userIndex]);\n  });\n  useEffect(() => {\n    getUsersApi.request();\n  }, []);\n  useEffect(() => {\n    setUser(users[userIndex]);\n  }, [userIndex]);\n\n  // const user=getCurrentUser()\n  const [advisingSessionId, setAdvisingSessionId] = useState(null);\n  const resultCoursesApi = useApi(getAdvisingResults);\n\n  const advisingSessionIdApi = useApi(getUserAdvisingSessionId, (res) =>\n    setAdvisingSessionId(res)\n  );\n\n  const userCoursesApi = useApi(getStudentCourses, (courses) => {\n    return renderCoursesList(courses);\n  });\n\n  useEffect(() => {\n    if (advisingSessionId && user) resultCoursesApi.request(advisingSessionId);\n  }, [advisingSessionId]);\n  useEffect(() => {\n    console.log(\"USER EFFECT\");\n    if (user && user.userId) {\n      userCoursesApi.request(user.userId);\n\n      advisingSessionIdApi.request(user.userId);\n    }\n  }, [user]);\n\n  const renderCoursesList = (courses) => {\n    return courses.map((course) => {\n      let { courseId, formatedTitle } = formatCourseData(course);\n      if (courseId === 1 || courseId === 2)\n        courseId = `${courseId}` + Math.random() * 100 * Math.random();\n\n      return <li key={courseId}>{formatedTitle}</li>;\n    });\n  };\n  console.log(\"USER:\", user);\n\n  const renderResults = (results) => {\n    console.log(\"RESULT: ,\", results);\n    if (!results || !results.semesters) return null;\n\n    const result = results.semesters.map(({ semesterNumber, courses }) => {\n      const sortedCourses = sortCourses(courses);\n      const totalCredits = sortedCourses\n        .map((c) => (c.credits !== null ? c.credits : 3))\n        .reduce((c1, c2) => c1 + c2);\n      return (\n        <>\n          <h5>Semester Number {semesterNumber}</h5>\n          {renderCoursesList(sortedCourses)}\n          <br />\n          <p>\n            <strong>Total Credits: </strong>\n            {totalCredits}\n          </p>\n          <hr />\n        </>\n      );\n    });\n    return result;\n\n    // const rows = groupCourses(result, 2);\n    // return rows.map((columns) => {\n    //   return (\n    //     <Row>\n    //       {columns.map((column) => (\n    //         <ColMedium>{column}</ColMedium>\n    //       ))}\n    //     </Row>\n    //   );\n    // });\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"frame \">\n        <h1 className=\"text-center\">Your results are here!</h1>\n        <div className=\"d-flex justify-content-between\">\n          <button className=\"btn \" onClick={decrementIndex}>\n            Previous\n          </button>\n          <button className=\"btn \" onClick={incrementIndex}>\n            Next\n          </button>\n        </div>\n        <br />\n        {user && (\n          <>\n            <h3 className=\"text-center\">User Info</h3>\n            <p>\n              <strong>User Id: </strong>\n              {user.userId}\n            </p>\n            <p>\n              <strong>Name: </strong>\n              {user.firstName + \" \" + user.lastName}\n            </p>\n            <p>\n              <strong>Email: </strong>\n              {user.email}\n            </p>\n            <p>\n              <strong>Standing: </strong>\n              {user.standing}\n            </p>\n            <hr />\n          </>\n        )}\n\n        <h3 className=\"text-center\">User courses</h3>\n        {userCoursesApi.data}\n        <hr />\n        <h3 className=\"text-center\">Advised Courses</h3>\n        {renderResults(resultCoursesApi.data)}\n\n        <div className=\"d-flex justify-content-between\">\n          <button className=\"btn \">Download</button>\n          <Link to=\"/advising/form\" replace>\n            <button className=\"btn btn-primary\">New Advising Session?</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdvisingResults;\nfunction sortAndRemoveNullCredits(courses) {\n  courses.forEach(\n    (course) => (course.credits = course.credits === null ? 3 : course.credits)\n  );\n  courses.sort((c1, c2) => c1.semesterNumber - c2.semesterNumber);\n  return courses;\n}\n","import React from \"react\";\n\nfunction FormWrapper({ title, children }) {\n  return (\n    <div className=\"d-flex justify-content-center \">\n      <div className=\"frame \">\n        <h1 className=\"text-center mb-4 \">{title}</h1>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default FormWrapper;\n","import { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nfunction FormError({\n  errorMessage = \"One or more required field(s) is invalid\",\n\n  ...props\n}) {\n  const { isValid, submitCount, status } = useFormikContext();\n  if (submitCount < 1 || (isValid && !status)) return null;\n\n  const className = props.className\n    ? \"alert alert-danger \" + props.className\n    : \"alert alert-danger\";\n\n  if (status && status.error) {\n    errorMessage = status.error;\n  }\n\n  return (\n    <div className={className} {...props}>\n      {errorMessage}\n    </div>\n  );\n}\n\nexport default FormError;\n","import React from \"react\";\nimport { Formik, Form as FormikForm } from \"formik\";\nimport FormWrapper from \"./FormWrapper\";\nimport FormError from \"./FormError\";\nfunction Form({\n  initialValues,\n  validationSchema,\n  onSubmit,\n  title,\n  errorMessage,\n  children,\n  ...rest\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      {...rest}\n    >\n      <FormWrapper title={title}>\n        <FormikForm>{children}</FormikForm>\n        <FormError errorMessage={errorMessage} />\n      </FormWrapper>\n    </Formik>\n  );\n}\n\nexport default Form;\n","import { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nfunction FieldError({ name, ...props }) {\n  const { getFieldMeta } = useFormikContext();\n  const { error, touched } = getFieldMeta(name);\n  if (!error || !touched) return null;\n\n  return (\n    <div className=\"clr-danger\" {...props}>\n      {error}\n    </div>\n  );\n}\n\nexport default FieldError;\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport FieldError from \"./FieldError\";\n\nfunction FormInput({ label, visible = true, ...props }) {\n  const [field, { error, touched }] = useField(props);\n  if (!visible) return null;\n  const className =\n    error && touched ? \"form-control is-invalid\" : \"form-control\";\n\n  return (\n    <>\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor={props.name || props.id}>\n          {label}\n        </label>\n        <input\n          className={className}\n          aria-invalid={error}\n          {...field}\n          {...props}\n        />\n      </div>\n      <FieldError name={props.name} />\n    </>\n  );\n}\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { useField } from \"formik\";\nimport FieldError from \"./FieldError\";\n\nfunction FormSelect({ label, changeButton = false, visible = true, ...props }) {\n  const [field, { error, touched }] = useField(props);\n  const [editable, setEditable] = useState(!changeButton);\n\n  if (!visible) return null;\n  const className =\n    error && touched && !props.disabled\n      ? \"form-control is-invalid\"\n      : \"form-control\";\n\n  return (\n    <>\n      <div className=\"form-group\">\n        {label && <label className=\"form-label\">{label}</label>}\n        <div className=\"d-flex\">\n          <select\n            className={className}\n            aria-invalid={error}\n            disabled={!editable}\n            {...field}\n            {...props}\n          />\n          {changeButton && (\n            <button\n              className=\"btn-link\"\n              onClick={() => setEditable(!editable)}\n              type=\"button\"\n            >\n              change?\n            </button>\n          )}\n        </div>\n      </div>\n\n      <FieldError name={props.name} />\n    </>\n  );\n}\n\nexport default FormSelect;\n","import { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nfunction SubmitButton({ label = \"Submit\", ...props }) {\n  const { isSubmitting } = useFormikContext();\n  return (\n    <div className=\"my-3 d-flex flex-column\">\n      <button\n        disabled={isSubmitting}\n        className=\"btn ms-auto\"\n        type=\"submit\"\n        {...props}\n      >\n        {label}\n      </button>\n    </div>\n  );\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport { useField } from \"formik\";\n\nfunction FormCheckbox({ label, ...props }) {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  const inputClassName = meta.error\n    ? \"form-check-input is-invalid\"\n    : \" form-check-input\";\n  const divClassName = field.checked ? \"form-check-disabled \" : \"\";\n  return (\n    <div className={\"form-check \" + divClassName}>\n      <label htmlFor={props.value} className=\"form-check-label\">\n        {label}\n      </label>\n      <input\n        type=\"checkbox\"\n        id={props.value}\n        className={inputClassName}\n        {...field}\n        {...props}\n      ></input>\n    </div>\n  );\n}\n\nexport default FormCheckbox;\n","import React from \"react\";\nimport { useField } from \"formik\";\n\nfunction FormRadio({ label, ...props }) {\n  const [field, { error, touched }] = useField({ ...props, type: \"radio\" });\n  const inputClassName =\n    error && touched ? \"form-check-input is-invalid\" : \" form-check-input\";\n  return (\n    <div className=\"form-check\">\n      <label htmlFor={props.name} className=\"form-check-label\">\n        <input\n          type=\"radio\"\n          className={inputClassName}\n          checked={field.value}\n          {...field}\n          {...props}\n        />\n        {label}\n      </label>\n    </div>\n  );\n}\n\nexport default FormRadio;\n","import React from \"react\";\nimport FieldError from \"./FieldError\";\n\nfunction FormGroup({ label, ...props }) {\n  return (\n    <>\n      <div className=\"form-group\">\n        {label && <label className=\"form-label\">{label}</label>}\n        {props.children}\n      </div>\n      {<FieldError name={props.name} />}\n    </>\n  );\n}\n\nexport default FormGroup;\n","import React from \"react\";\nimport { FormGroup, FormRadio } from \".\";\n\nfunction FormPolarRadioGroup({\n  name,\n  label,\n  trueLabel = \"yes\",\n  falseLabel = \"no\",\n  ...props\n}) {\n  return (\n    <FormGroup name={name} label={label}>\n      <FormRadio label={trueLabel} name={name} value={\"true\"} {...props} />\n      <FormRadio label={falseLabel} name={name} value={\"false\"} {...props} />\n    </FormGroup>\n  );\n}\n\nexport default FormPolarRadioGroup;\n","import React from \"react\";\nimport { FormSelect } from \"./\";\n\nfunction FormSelectGroup({\n  defaultOption,\n  items,\n  idSelector = \"id\",\n  nameSelector = \"name\",\n  valueSelector = \"id\",\n  ...props\n}) {\n  return (\n    <>\n      <FormSelect {...props}>\n        {defaultOption && (\n          <option value=\"\" disabled>\n            {defaultOption}\n          </option>\n        )}\n        {items.map((item) => (\n          <option key={item[idSelector]} value={item[valueSelector]}>\n            {item[nameSelector]}\n          </option>\n        ))}\n      </FormSelect>\n    </>\n  );\n}\n\nexport default FormSelectGroup;\n","export const COURSES_IDS = \"coursesIds\";\nexport const GENERAL_ELECTIVE_CREDITS = \"generalElecCredits\";\nexport const EXEMPTED_CREDITS = \"exemptedCredits\";\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nimport {\n  formatCourseData,\n  mapCoursestoPrefixes,\n} from \"../../utils/coursesUtils\";\nimport { FormCheckbox } from \"../../components/form\";\nimport { COURSES_IDS } from \"./fieldNames\";\nfunction CoursesModal({ show, onClose, courses, prefixes }) {\n  const handleClose = () => {\n    setSelectedPrefix(\"\");\n    onClose();\n  };\n  const [selectedPrefix, setSelectedPrefix] = useState(null);\n  const coursesPrefixMap = mapCoursestoPrefixes(courses);\n\n  const renderCourses = () => {\n    if (selectedPrefix)\n      return coursesPrefixMap[selectedPrefix].map((course) => {\n        const { courseId, formatedTitle } = formatCourseData(course);\n        return (\n          <>\n            <FormCheckbox\n              label={formatedTitle}\n              name={COURSES_IDS}\n              value={JSON.stringify(courseId)}\n            />\n\n            <hr />\n          </>\n        );\n      });\n\n    return prefixes\n      .sort((p1, p2) => {\n        if (p1 < p2) return -1;\n        if (p2 < p1) return 1;\n\n        return 0;\n      })\n\n      .map((prefix) => {\n        if (prefix === \"XXXX\") return null;\n\n        return (\n          <>\n            <button key={prefix} onClick={() => setSelectedPrefix(prefix)}>\n              {prefix}\n            </button>\n            <hr />\n            <br />\n          </>\n        );\n      });\n  };\n\n  const getTitle = () => (selectedPrefix ? \"Courses\" : \"Prefix\");\n\n  return (\n    <>\n      <Modal\n        size=\"xl\"\n        show={show}\n        onHide={handleClose}\n        scrollable\n        dialogClassName=\"modal-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{getTitle()}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{renderCourses()}</Modal.Body>\n        <Modal.Footer>\n          {selectedPrefix && (\n            <Button\n              variant=\"secondary\"\n              className=\"me-auto\"\n              onClick={() => setSelectedPrefix(\"\")}\n            >\n              back\n            </Button>\n          )}\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default CoursesModal;\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\n\nconst apiEndPoint = apiBaseUrl + \"/academics/courses\";\n\nexport const getAllCourses = async () => {\n  const { data: courses } = await http.get(apiEndPoint);\n  return courses;\n};\n\nexport const getCourse = async (courseId) => {\n  const { data: course } = await http.get(`${apiEndPoint}/${courseId}`);\n  return course;\n};\nexport const getPrefixes = async (courseId) => {\n  const { data: prefixes } = await http.get(`${apiEndPoint}/prefixes`);\n  return prefixes;\n};\n\nconst coursesService = { getAllCourses, getCourse };\n\nexport default coursesService;\n","import { apiBaseUrl, CourseTypeIds } from \"../config.json\";\n\nimport http from \"./httpService\";\n\nconst apiEndPoint = apiBaseUrl + \"/catalogs\";\nconst catCourseUrl = `${apiEndPoint}/courses`;\nconst planCoursesUrl = `${apiEndPoint}/plans/courses`;\n\nexport const getCatalogs = async (majorId) => {\n  if (!majorId) return [];\n  const { data: catalogs } = await http.get(apiEndPoint, {\n    params: { majorId },\n  });\n  return catalogs;\n};\n\nexport const getCatalogCourses = async (catalogId) => {\n  console.log(\"calling getCatCourses\", catalogId);\n  const { data: catCourses } = await http.get(catCourseUrl, {\n    params: { catalogId },\n  });\n  return catCourses;\n};\n\nexport const getCoreCourses = async (catalogId) => {\n  const { data: courses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.core },\n  });\n  return courses;\n};\n\nexport const getConcCourses = async (catalogId) => {\n  const { data: courses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.concentertaion },\n  });\n  return courses;\n};\n\nexport const getElectiveCourses = async (catalogId) => {\n  const { data: courses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.electives },\n  });\n  return courses;\n};\n\nexport const getCollateralCourses = async (catalogId) => {\n  const { data: catCourses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.collateral },\n  });\n  return catCourses;\n};\n\nexport const getEngCoreCourses = async (catalogId) => {\n  const { data: catCourses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.engCore },\n  });\n  return catCourses;\n};\n\nexport const getPlanCourses = async (catalogId) => {\n  const { data: planCourses } = await http.get(planCoursesUrl, {\n    params: { catalogId },\n  });\n  return planCourses;\n};\n\nconst catalogsService = {\n  getCatalogs,\n  getCatalogCourses,\n  getCoreCourses,\n  getConcCourses,\n  getElectiveCourses,\n  getCollateralCourses,\n  getEngCoreCourses,\n  getPlanCourses,\n};\nexport default catalogsService;\n","import React, { useState, useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\n// eslint-disable-next-line\nimport { FormCheckbox, FormGroup, FormInput } from \"../../components/form\";\nimport { Row, ColMedium } from \"../../components/grid\";\nimport {\n  categoriseCatalogCourses,\n  formatCourseData,\n  groupCourses,\n} from \"../../utils/coursesUtils\";\n\n// eslint-disable-next-line\nimport { COURSES_IDS, EXEMPTED_CREDITS } from \"./fieldNames\";\nimport CoursesModal from \"./coursesModal\";\n\nimport useApi from \"../../hooks/useApi\";\n\nimport {\n  getPrefixes as getPrefixesApi,\n  getAllCourses,\n} from \"../../services/coursesService\";\nimport { getCatalogCourses } from \"../../services/catalogsService\";\n\nfunction CoursesSubForm() {\n  const { values, setFieldValue } = useFormikContext();\n\n  const prefixesApi = useApi(getPrefixesApi);\n  const catalogApi = useApi(getCatalogCourses, handleCatalogCouresesResponse);\n  const coursesApi = useApi(getAllCourses);\n\n  useEffect(() => {\n    prefixesApi.request();\n    coursesApi.request();\n  }, []);\n  useEffect(() => {\n    if (values.catalogId) catalogApi.request(values.catalogId);\n  }, [values.catalogId]);\n\n  const handleCourseCheck = ({ target }) => {\n    const { name, checked, value } = target;\n    const selectedIds = values[name].map((id) => id);\n\n    if (checked) setFieldValue(name, [...selectedIds, value]);\n    //if (window.confirm(\"Are you sure you want to uncheck this course?\"))\n    else\n      setFieldValue(\n        name,\n        selectedIds.filter((v) => v !== value)\n      );\n  };\n\n  const handleUncheckAll = () => {\n    if (window.confirm(\"Are you sure you want to uncheck all the courses?\"))\n      setFieldValue(COURSES_IDS, []);\n  };\n\n  const prerequisiteFullfilled = (course) => {\n    const selectedCourseIds = values[COURSES_IDS].map((id) => parseInt(id));\n\n    const { requisites } = course;\n\n    if (!requisites.length) return true;\n    if (!selectedCourseIds.includes(course.courseId)) return true;\n\n    return requisites.some((reqSet) => {\n      return reqSet.every((r) => {\n        if (r.requisiteTypeId === 1)\n          return selectedCourseIds.includes(r.courseId);\n        if (r.requisiteTypeId === 2 || r.requisiteTypeId === 3)\n          return selectedCourseIds.includes(r.courseId);\n\n        return true;\n      });\n    });\n  };\n\n  const [showModal, setShowModal] = useState(false);\n\n  const renderCourseRow = (row) => {\n    return row.map((course) => {\n      const { courseId, formatedTitle } = formatCourseData(course);\n      return (\n        <ColMedium key={courseId}>\n          <FormCheckbox\n            label={formatedTitle}\n            name={COURSES_IDS}\n            value={JSON.stringify(courseId)}\n            onChange={handleCourseCheck}\n          />\n\n          {!prerequisiteFullfilled(course) && (\n            <div className=\"alert alert-warning\">\n              <strong>Warning:</strong> Did you fulfill the\n              prerequisites/corequisite for this course?\n            </div>\n          )}\n        </ColMedium>\n      );\n    });\n  };\n\n  const renderCoursesTabular = (courses) => {\n    return courses.map((row) => (\n      <Row key={\"key\" + row[0].courseId}>{renderCourseRow(row)}</Row>\n    ));\n  };\n\n  const renderCatalogCourses = (catalogCourses) => {\n    return catalogCourses.map((catalogCourse) => {\n      return (\n        <>\n          <h5>{catalogCourse.courseType}</h5>\n          {renderCoursesTabular(catalogCourse.courses)}\n          <hr />\n        </>\n      );\n    });\n  };\n\n  if (!values.catalogId)\n    return (\n      <p className=\"text-center\">\n        Please select you declaration catalog catalog first.\n      </p>\n    );\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={handleUncheckAll}\n        className=\" btn btn-sm float-end my-2\"\n      >\n        Uncheck all?\n      </button>\n      <br />\n      <FormGroup\n        name={COURSES_IDS}\n        label=\"Please select all the courses you will have finished by the end of the current semester:\"\n      >\n        <p className=\"clr-danger\">\n          (exempted and transferred courses, as well)\n        </p>\n        <br />\n        {renderCatalogCourses(catalogApi.data)}\n\n        <h5>General Electives</h5>\n\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={() => setShowModal(true)}\n        >\n          Add general electives\n        </button>\n        <CoursesModal\n          show={showModal}\n          onClose={() => setShowModal(false)}\n          prefixes={prefixesApi.data}\n          courses={coursesApi.data}\n        />\n        <br />\n        <hr />\n        <FormInput\n          name={EXEMPTED_CREDITS}\n          label=\"How many credits(if any) are you exmpted from?\"\n          type=\"number\"\n        />\n        <hr />\n      </FormGroup>\n    </>\n  );\n}\n\nexport default CoursesSubForm;\nfunction handleCatalogCouresesResponse(courses) {\n  const categorized = categoriseCatalogCourses(courses);\n  categorized.forEach((category) => {\n    category.courses.sort((c1, c2) => {\n      if (c1.prefix < c2.prefix) return -1;\n      if (c2.prefix > c1.prefix) return 1;\n      return c1.courseCode - c2.courseCode;\n    });\n    category.courses = groupCourses(category.courses, 3);\n  });\n  categorized.sort((c1, c2) =>\n    c1.courseType < c2.courseType ? -1 : c1.courseType > c2.courseType\n  );\n  return categorized;\n}\n","const stringToBool = (str) => {\n  if (typeof str === \"boolean\") return str;\n  if (typeof str !== \"string\") return null;\n  if (str.toLowerCase().trim() === \"true\") return true;\n  if (str.toLowerCase().trim() === \"false\") return false;\n  return null;\n};\n\nexport { stringToBool };\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\nconst apiEndPoint = apiBaseUrl + \"/advising/paces\";\n\nexport const getPaces = async () => {\n  const { data: paces } = await http.get(apiEndPoint);\n  return paces;\n};\n\nconst paceService = { getPaces };\nexport default paceService;\n","export const OVERLOADING = \"overloading\";\nexport const TAKING_SUMMER = \"takingSummer\";\nexport const TAKING_WINTER = \"takingWinter\";\nexport const OVERLOADING_CREDITS = \"overloadingCredits\";\nexport const SUMMER_CREDITS = \"summerCredits\";\nexport const WINTER_CREDITS = \"winterCredits\";\nexport const PACE_ID = \"paceId\";\nexport const SEMESTERS_TO_PLAN = \"semestersToPlan\";\n","const semesters = [\n  { id: \"1\", name: 1 },\n  { id: \"2\", name: 2 },\n  { id: \"3\", name: 3 },\n  { id: \"4\", name: 4 },\n  { id: \"5\", name: 5 },\n  { id: \"6\", name: 6 },\n  { id: \"7\", name: 7 },\n  { id: \"8\", name: 8 },\n  { id: \"9\", name: 9 },\n  { id: \"10\", name: 10 },\n];\n\nexport default semesters;\n","import React, { useState, useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport {\n  FormInput,\n  FormPolarRadioGroup,\n  FormSelectGroup,\n} from \"../../components/form\";\nimport { stringToBool } from \"../../utils/stringUtils\";\nimport { getPaces } from \"../../services/pacesService\";\nimport {\n  OVERLOADING,\n  OVERLOADING_CREDITS,\n  // eslint-disable-next-line\n  PACE_ID,\n  SEMESTERS_TO_PLAN,\n  // eslint-disable-next-line\n  SUMMER_CREDITS,\n  // eslint-disable-next-line\n  TAKING_SUMMER,\n  TAKING_WINTER,\n  WINTER_CREDITS,\n} from \"./fieldNames\";\n\nimport semesters from \"../../constant/semesters\";\n\nfunction PreferencesInfo() {\n  const { values, setFieldValue } = useFormikContext();\n  // eslint-disable-next-line\n  const { takingSummer, takingWinter, overloading } = values;\n\n  const handleOnChange = (target, fieldToResetName, resetValue = 0) => {\n    setFieldValue(target.name, target.value);\n    if (stringToBool(target.value) === false)\n      setFieldValue(fieldToResetName, resetValue);\n  };\n  // eslint-disable-next-line\n  const [paces, setPaces] = useState([]);\n  useEffect(() => {\n    getPaces().then((res) => setPaces(res));\n  }, []);\n\n  return (\n    <>\n      <FormPolarRadioGroup\n        name={OVERLOADING}\n        label=\"Are you willing to overload in the next semester?\"\n        onChange={({ target }) => {\n          handleOnChange(target, \"overloadingCredits\");\n        }}\n      />\n      <FormInput\n        type=\"number\"\n        name={OVERLOADING_CREDITS}\n        label=\"How many crdeits are you taking next semester IN TOTAL:\"\n        min={1}\n        visible={stringToBool(overloading)}\n      />\n      <hr />\n      {/* <FormPolarRadioGroup\n        name={TAKING_SUMMER}\n        label=\"Are you planning to take course(s) next Summer?\"\n        onChange={({ target }) => {\n          handleOnChange(target, \"summerCredits\");\n        }}\n      />\n      <FormInput\n        type=\"number\"\n        name={SUMMER_CREDITS}\n        label=\"How many crdeits?\"\n        min={0}\n        max={7}\n        visible={stringToBool(takingSummer)}\n      />\n      <hr /> */}\n      <FormPolarRadioGroup\n        name={TAKING_WINTER}\n        label=\"Are you planning to take course(s) next Winter?\"\n        onChange={({ target }) => {\n          handleOnChange(target, \"winterCredits\");\n        }}\n      />\n      <FormInput\n        type=\"number\"\n        name={WINTER_CREDITS}\n        label=\"How many crdeits:\"\n        min={0}\n        max={4}\n        visible={stringToBool(takingWinter)}\n      />\n\n      <hr />\n      {/* <FormSelectGroup\n        label={\"What pace would you like to follow?\"}\n        name={PACE_ID}\n        items={paces}\n        valueSelector=\"paceId\"\n        idSelector=\"paceId\"\n        nameSelector=\"paceTitle\"\n      />\n      <hr /> */}\n      <FormSelectGroup\n        label={\"Up to how many semesters would you like to be planned?\"}\n        name={SEMESTERS_TO_PLAN}\n        items={semesters}\n      />\n    </>\n  );\n}\n\nexport default PreferencesInfo;\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\n\nconst apiEndPoint = apiBaseUrl + \"/academics/majors\";\nexport const getMajors = async (majorId) => {\n  const { data: majors } = await http.get(apiEndPoint, { params: { majorId } });\n  return majors;\n};\n\nexport const getMajor = async (majorId) => {\n  const { data: major } = await http.get(`${apiEndPoint}/${majorId}`);\n  return major;\n};\n\nconst majorsService = { getMajors, getMajor };\nexport default majorsService;\n","import { apiBaseUrl } from \"../config\";\nimport http from \"axios\";\n\nconst apiEndPoint = apiBaseUrl + \"/academics/minors\";\nexport const getMinors = async () => {\n  const { data: minors } = await http.get(apiEndPoint);\n  return minors;\n};\nexport const getMinor = async (minorId) => {\n  const { data: minor } = await http.get(`${apiEndPoint}/${minorId}`);\n  return minor;\n};\nconst minorsService = { getMinors, getMinor };\nexport default minorsService;\n","import { useEffect, useState } from \"react\";\n\nimport { getMajors } from \"../services/majorsService\";\nimport { getMinors } from \"../services/minorsService\";\nimport { formatMajors, formatMinors } from \"../utils/formattingUtils\";\nconst useMajors = () => {\n  const [majors, setMajors] = useState([]);\n  const [minors, setMinors] = useState([]);\n\n  useEffect(() => {\n    getMajors().then((majors) => {\n      setMajors(formatMajors(majors));\n    });\n\n    getMinors().then((minors) => setMinors(formatMinors(minors)));\n  }, []);\n\n  return { majors, minors };\n};\n\nexport default useMajors;\n","export const formatCatalogs = (catalogs) => {\n  return catalogs.map((c) => {\n    return { id: c.catalogId, name: c.year };\n  });\n};\n\nexport const formatMajors = (majors) =>\n  majors.map((m) => {\n    return { id: m.majorId, name: m.majorTitle };\n  });\n\nexport const formatMinors = (minors) =>\n  minors.map((m) => {\n    return { id: m.minorId, name: m.minorTitle };\n  });\n","import { useEffect, useState } from \"react\";\n\nimport { getCatalogs } from \"../services/catalogsService\";\nimport { formatCatalogs } from \"../utils/formattingUtils\";\n\nfunction useCatalogs(majorId) {\n  const [catalogs, setCatalogs] = useState([]);\n  useEffect(() => {\n    getCatalogs(majorId).then((catalogs) => {\n      setCatalogs(formatCatalogs(catalogs));\n    });\n  }, [majorId]);\n  return { catalogs };\n}\n\nexport default useCatalogs;\n","export const MAJOR_ID = \"majorId\";\nexport const CATALOG_ID = \"catalogId\";\nexport const MINOR_IDS = \"minorIds\";\nexport const SECOND_MAJOR_ID = \"secondMajorId\";\nexport const SECOND_CATALOG_ID = \"secondCatalogId\";\nexport const IS_DOUBLE_MAJORING = \"isDoubleMajoring\";\nexport const IS_MINORING = \"isMinoring\";\nexport const STANDING_ID = \"standingId\";\nexport const SEMESTER_NUMBER = \"semesterNumber\";\n","import { apiBaseUrl } from \"../config\";\nimport http from \"./httpService\";\nconst apiEndPoint = apiBaseUrl + \"/academics/standings\";\n\nexport const getStandings = async () => {\n  const { data: standings } = await http.get(apiEndPoint);\n  return standings;\n};\n\nconst standingService = { getPaces: getStandings };\nexport default standingService;\n","import React, { useEffect, useState } from \"react\";\nimport { useFormikContext } from \"formik\";\n\n// eslint-disable-next-line\nimport { FormPolarRadioGroup, FormSelectGroup } from \"../../components/form\";\nimport { stringToBool } from \"../../utils/stringUtils\";\nimport useMajors from \"../../hooks/useMajors\";\nimport useCatalogs from \"../../hooks/useCatalogs\";\nimport {\n  MAJOR_ID,\n  CATALOG_ID,\n  SECOND_MAJOR_ID,\n  SECOND_CATALOG_ID,\n  MINOR_IDS,\n  // eslint-disable-next-line\n  IS_DOUBLE_MAJORING,\n  // eslint-disable-next-line\n  IS_MINORING,\n  SEMESTER_NUMBER,\n  STANDING_ID,\n} from \"./fieldNames\";\nimport { getStandings } from \"../../services/standingsServices\";\nimport semesters from \"../../constant/semesters\";\n\nfunction MajorInfo() {\n  const [standings, setStandings] = useState([]);\n  useEffect(() => {\n    getStandings()\n      .then((res) => setStandings(res))\n      .catch((err) => console.log(\"Error: \", err));\n  }, []);\n\n  const { values, setFieldValue } = useFormikContext();\n  const { isMinoring, isDoubleMajoring } = values;\n  // eslint-disable-next-line\n  const { majors, minors } = useMajors();\n  const { catalogs: firstMajorCatalogs } = useCatalogs(values.majorId);\n  // eslint-disable-next-line\n  const { catalogs: secondMajorCatalogs } = useCatalogs(values.secondMajorId);\n  useEffect(() => {\n    let mounted = true; //prevents memory leak\n\n    if (!stringToBool(isMinoring) && mounted) setFieldValue(MINOR_IDS, []);\n\n    if (!stringToBool(isDoubleMajoring) && mounted) {\n      setFieldValue(SECOND_MAJOR_ID, \"\");\n      setFieldValue(SECOND_CATALOG_ID, \"\");\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [isDoubleMajoring, isMinoring, setFieldValue]);\n  return (\n    <>\n      <FormSelectGroup\n        label={\"What is your current standing?\"}\n        items={standings}\n        name={STANDING_ID}\n        defaultOption=\"--select standing--\"\n        idSelector=\"standingId\"\n        nameSelector=\"standing\"\n        valueSelector=\"standingId\"\n      />\n\n      <FormSelectGroup\n        label={\"Which semester number is this one?\"}\n        defaultOption={\"--select a semester--\"}\n        items={semesters}\n        name={SEMESTER_NUMBER}\n      />\n      <p className=\"my-1\">\n        (The number of semesters you have taken starting from English 0210 or\n        RHET 1010)\n      </p>\n      <br />\n\n      <FormSelectGroup\n        label=\"What is your major?\"\n        items={majors}\n        name={MAJOR_ID}\n        defaultOption={\"--select a major--\"}\n        onChange={({ target }) => {\n          setFieldValue(CATALOG_ID, \"\");\n          setFieldValue(MAJOR_ID, target.value);\n        }}\n      />\n\n      <br />\n\n      <FormSelectGroup\n        label={\"Which catalog are you follwoing? (declaration catalog)\"}\n        name={CATALOG_ID}\n        items={firstMajorCatalogs}\n        defaultOption={\"--select a catalog--\"}\n        visible={values.majorId}\n      />\n      {/* <br />\n\n      <FormPolarRadioGroup\n        name={IS_MINORING}\n        label=\"Are you taking minor(s)?\"\n      />\n\n      <FormSelectGroup\n        name={MINOR_IDS}\n        label=\"Select minor(s):\"\n        visible={stringToBool(isMinoring)}\n        multiple\n        items={minors}\n      />\n\n      {stringToBool(isMinoring) && (\n        <p className=\"my-1\">\n          <strong>Tip: </strong>hold ctrl while clicking to select multiple\n          minors\n        </p>\n      )}\n      <FormPolarRadioGroup\n        name={IS_DOUBLE_MAJORING}\n        label=\"Are you double majoring?\"\n      />\n\n      <FormSelectGroup\n        label=\"Second Major:\"\n        name={SECOND_MAJOR_ID}\n        visible={stringToBool(isDoubleMajoring)}\n        defaultOption={\"---select a major---\"}\n        items={majors}\n      />\n\n      <FormSelectGroup\n        label=\"Second Major Catalog:\"\n        name={SECOND_CATALOG_ID}\n        visible={stringToBool(isDoubleMajoring)}\n        defaultOption={\"---select a catalog---\"}\n        items={secondMajorCatalogs}\n      />\n      <hr /> */}\n    </>\n  );\n}\n\nexport default MajorInfo;\n","import { useState } from \"react\";\n\n/*\nstate to implement multi-step form */\nconst useFormStep = (startStep = 1) => {\n  const [step, setStep] = useState(startStep);\n  const next = () => {\n    setStep(step + 1);\n  };\n  const back = () => {\n    setStep(step - 1);\n  };\n  return { step, next, back };\n};\n\nexport default useFormStep;\n","import { useState, useEffect } from \"react\";\nimport { getAdvisingSession } from \"../services/advisingService\";\nimport { getCurrentUser } from \"../services/authService\";\nimport { getStudentCourses } from \"../services/userService\";\n\nfunction useUserCourses(props) {\n  const [coursesIds, setStudentCourseIds] = useState([]);\n  const [generalElecCredits, setGeneralElecCredits] = useState(0);\n\n  const getGeneralElecCredits = async (userId) => {\n    const advisingSession = await getAdvisingSession(userId);\n    if (!advisingSession.length) return;\n\n    setGeneralElecCredits(advisingSession[0].generalElecCredits);\n  };\n\n  const getCoursesIds = async (userId) => {\n    const studentCourses = await getStudentCourses(userId);\n    const coursesIds = studentCourses.map((c) => JSON.stringify(c.courseId));\n    setStudentCourseIds(coursesIds);\n  };\n\n  useEffect(() => {\n    const user = getCurrentUser();\n    if (user) {\n      getCoursesIds(user.userId);\n      getGeneralElecCredits(user.userId);\n    }\n  }, []);\n\n  return { coursesIds, generalElecCredits };\n}\n\nexport default useUserCourses;\n","import { useState, useEffect } from \"react\";\nimport { getStudentMajors, getStudentMinors } from \"../services/userService\";\nimport useAuth from \"./useAuth\";\n\nconst useUserMajorInfo = () => {\n  const [firstMajor, setFirstMajor] = useState({\n    majorId: \"\",\n    catalogId: \"\",\n  });\n  const [secondMajor, setSecondMajor] = useState({\n    secondMajorId: \"\",\n    secondCatalogId: \"\",\n    isDoubleMajoring: \"false\",\n  });\n  const [minors, setMinors] = useState({ minorIds: [], isMinoring: \"false\" });\n\n  const getStudentMajorsInfo = async (userId) => {\n    const majors = await getStudentMajors(userId);\n    if (majors && majors.length)\n      setFirstMajor({\n        majorId: majors[0].majorId,\n        catalogId: majors[0].catalogId,\n      });\n    if (majors && majors.length > 1)\n      setSecondMajor({\n        secondMajorId: majors[1].majorId,\n        secondCatalogId: majors[1].catalogId,\n        isDoubleMajoring: \"true\",\n      });\n  };\n  const getStudentMinorsIds = async (userId) => {\n    const minors = await getStudentMinors(userId);\n    const minorIds = minors.map((m) => m.minorId);\n    const isMinoring = minorIds.length ? \"true\" : \"false\";\n    setMinors({ minorIds, isMinoring });\n  };\n\n  const user = useAuth();\n  useEffect(() => {\n    if (user) {\n      getStudentMajorsInfo(user.userId);\n      getStudentMinorsIds(user.userId);\n    }\n  }, [user]);\n\n  return {\n    ...firstMajor,\n    ...secondMajor,\n    ...minors,\n  };\n};\n\nexport default useUserMajorInfo;\n","import { userService, advisingService } from \"../services\";\n\n//if no old major or old major is different from currently chosen major\n// add new major.\n//delete old major only if two majors(old and new) are different\n\nexport const updateUserMajor = (\n  userId,\n  newMajorId,\n  catalogId,\n  oldCatalogId,\n  oldMajorId = null\n) => {\n  console.log(\"HERE\", userId, newMajorId, oldMajorId);\n  if (!oldMajorId && newMajorId)\n    userService.addStudentMajor(userId, newMajorId, catalogId);\n  else if (\n    oldMajorId &&\n    (newMajorId !== oldMajorId || oldCatalogId !== catalogId)\n  ) {\n    userService.deleteStudentMajor(userId, oldMajorId);\n    userService.addStudentMajor(userId, newMajorId, catalogId);\n  }\n};\n\nexport const updateUserMinors = (\n  userId,\n  selectedMinorIds,\n  oldMinorIds = []\n) => {\n  const newMinorIds = selectedMinorIds.filter(\n    (id) => oldMinorIds.indexOf(id) === -1\n  );\n  const deleteMinorIds = oldMinorIds.filter(\n    (id) => selectedMinorIds.indexOf(id) === -1\n  );\n  newMinorIds.forEach((id) => userService.addStudentMinor(userId, id));\n  deleteMinorIds.forEach((id) => userService.deleteStudentMinor(userId, id));\n};\n\nexport const updateStudentCourses = (\n  userId,\n  selectedIds,\n  initialCoursesIds = []\n) => {\n  const newIds = selectedIds.filter(\n    (id) => initialCoursesIds.indexOf(id) === -1\n  );\n  const deletedIds = initialCoursesIds.filter(\n    (id) => selectedIds.indexOf(id) === -1\n  );\n  newIds.forEach((id) => userService.addStudentCourse(userId, id));\n  deletedIds.forEach((id) => userService.deleteStudentCourse(userId, id));\n};\n\nexport const updateAdvisingInfo = async (userId, values) => {\n  const advisingSession = await advisingService.getAdvisingSession(userId);\n\n  if (!advisingSession.length)\n    advisingService.addAdvisingSession({ ...values, userId });\n  else {\n    const { advisingSessionId } = advisingSession[0];\n    const updateAdvisingData = { advisingSessionId, ...values, userId };\n    advisingService.updateAdvisingSessions(updateAdvisingData);\n  }\n};\n\nconst userMajorUtils = {\n  updateUserMajor,\n  updateUserMinors,\n  updateStudentCourses,\n  updateAdvisingInfo,\n};\nexport default userMajorUtils;\n","import * as Yup from \"yup\";\nimport {\n  MAJOR_ID,\n  CATALOG_ID,\n  SECOND_MAJOR_ID,\n  SECOND_CATALOG_ID,\n  MINOR_IDS,\n  IS_DOUBLE_MAJORING,\n  IS_MINORING,\n  STANDING_ID,\n  SEMESTER_NUMBER,\n} from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\nconst SAME_MAJOR_SELECTED = \"You can't select the same major\";\n\nexport default Yup.object({\n  [MAJOR_ID]: Yup.string().required(REQUIRED_MESSAGE),\n\n  [CATALOG_ID]: Yup.string().required(REQUIRED_MESSAGE),\n  [IS_MINORING]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [MINOR_IDS]: Yup.array().required(),\n  [IS_DOUBLE_MAJORING]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [SECOND_MAJOR_ID]: Yup.string()\n    .notRequired()\n    .when(IS_DOUBLE_MAJORING, {\n      is: true,\n      then: Yup.string()\n        .required(REQUIRED_MESSAGE)\n        .notOneOf([Yup.ref(MAJOR_ID), null], SAME_MAJOR_SELECTED),\n    }),\n  [SECOND_CATALOG_ID]: Yup.string()\n    .notRequired()\n    .when(IS_DOUBLE_MAJORING, {\n      is: true,\n      then: Yup.string().required(REQUIRED_MESSAGE),\n    }),\n  [STANDING_ID]: Yup.string().required(REQUIRED_MESSAGE),\n  [SEMESTER_NUMBER]: Yup.string().required(REQUIRED_MESSAGE),\n});\n","import * as Yup from \"yup\";\nimport {\n  OVERLOADING,\n  OVERLOADING_CREDITS,\n  PACE_ID,\n  SEMESTERS_TO_PLAN,\n  SUMMER_CREDITS,\n  TAKING_SUMMER,\n  TAKING_WINTER,\n  WINTER_CREDITS,\n} from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\nconst OVERLOADING_CREDITS_LABEL = \"Overloading credits\";\nconst SUMMER_CREDITS_LABEL = \"Credits in summer\";\nconst WINTER_CREDITS_LABEL = \"Credits in winter\";\n\nexport default Yup.object({\n  [OVERLOADING]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [OVERLOADING_CREDITS]: Yup.number().when(OVERLOADING, {\n    is: true,\n    then: Yup.number()\n      .min(1)\n      .required(REQUIRED_MESSAGE)\n      .label(OVERLOADING_CREDITS_LABEL),\n  }),\n  [TAKING_SUMMER]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [WINTER_CREDITS]: Yup.number().when(TAKING_WINTER, {\n    is: true,\n    then: Yup.number()\n      .required(REQUIRED_MESSAGE)\n      .min(1)\n      .max(4)\n      .label(WINTER_CREDITS_LABEL),\n  }),\n  [TAKING_WINTER]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [SUMMER_CREDITS]: Yup.number()\n    .min(0)\n    .max(7)\n    .when(TAKING_SUMMER, {\n      is: true,\n      then: Yup.number()\n        .required(REQUIRED_MESSAGE)\n        .min(1)\n        .max(7)\n        .label(SUMMER_CREDITS_LABEL),\n    }),\n  [PACE_ID]: Yup.string().required(REQUIRED_MESSAGE),\n  [SEMESTERS_TO_PLAN]: Yup.number().required(REQUIRED_MESSAGE).min(1),\n});\n","import * as Yup from \"yup\";\nimport {\n  COURSES_IDS,\n  GENERAL_ELECTIVE_CREDITS,\n  EXEMPTED_CREDITS,\n} from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\nconst GENERAL_ELECTIVE_LABEL = \"Number of general electives\";\n// const EXMPTED_CREDITS_LABEL=\n\nexport default Yup.object({\n  [COURSES_IDS]: Yup.array().required(REQUIRED_MESSAGE),\n\n  [GENERAL_ELECTIVE_CREDITS]: Yup.number()\n    .integer()\n    .min(0)\n    .required(REQUIRED_MESSAGE)\n    .label(GENERAL_ELECTIVE_LABEL),\n\n  [EXEMPTED_CREDITS]: Yup.number().integer().min(0).label(\"This field\"),\n});\n","import * as Yup from \"yup\";\n\nimport majorValidationSchema from \"../../subforms/majorSubForm/validationSchema\";\nimport preferencesValidationSchema from \"../../subforms/preferncesSubForm/validationSchema\";\nimport coursesCalidationSchema from \"../../subforms/coursesSubForm/validationSchema\";\n\nexport default Yup.object({})\n  .concat(majorValidationSchema)\n  .concat(preferencesValidationSchema)\n  .concat(coursesCalidationSchema);\n","import {\n  MAJOR_ID,\n  CATALOG_ID,\n  SECOND_MAJOR_ID,\n  SECOND_CATALOG_ID,\n  MINOR_IDS,\n  IS_DOUBLE_MAJORING,\n  IS_MINORING,\n  STANDING_ID,\n  SEMESTER_NUMBER,\n} from \"./fieldNames\";\n\nconst majorDefaultValues = {\n  [MAJOR_ID]: \"\",\n  [CATALOG_ID]: \"\",\n  [IS_DOUBLE_MAJORING]: \"\",\n  [SECOND_MAJOR_ID]: \"\",\n  [SECOND_CATALOG_ID]: \"\",\n  [IS_MINORING]: \"\",\n  [MINOR_IDS]: [],\n  [STANDING_ID]: \"\",\n  [SEMESTER_NUMBER]: \"\",\n};\n\nexport default majorDefaultValues;\n","import {\n  OVERLOADING,\n  OVERLOADING_CREDITS,\n  PACE_ID,\n  SEMESTERS_TO_PLAN,\n  SUMMER_CREDITS,\n  TAKING_SUMMER,\n  TAKING_WINTER,\n  WINTER_CREDITS,\n} from \"./fieldNames\";\n\nconst preferencesDefaultValues = {\n  [OVERLOADING]: \"false\",\n  [TAKING_SUMMER]: \"false\",\n  [TAKING_WINTER]: \"false\",\n  [OVERLOADING_CREDITS]: 0,\n  [SUMMER_CREDITS]: 0,\n  [WINTER_CREDITS]: 0,\n  [PACE_ID]: \"1\",\n  [SEMESTERS_TO_PLAN]: \"1\",\n};\n\nexport default preferencesDefaultValues;\n","import {\n  COURSES_IDS,\n  GENERAL_ELECTIVE_CREDITS,\n  EXEMPTED_CREDITS,\n} from \"./fieldNames\";\n\nconst coursesDefaultValues = {\n  [COURSES_IDS]: [],\n  [GENERAL_ELECTIVE_CREDITS]: 0,\n  [EXEMPTED_CREDITS]: 0,\n};\n\nexport default coursesDefaultValues;\n","import majorDefaultValues from \"../../subforms/majorSubForm/defaultValues\";\nimport preferencesDefaultValues from \"../../subforms/preferncesSubForm/defaultValues\";\nimport coursesDefaultValues from \"../../subforms/coursesSubForm/defaultValues\";\nconst advisingDefautlValues = {\n  ...majorDefaultValues,\n  ...preferencesDefaultValues,\n  ...coursesDefaultValues,\n};\nexport default advisingDefautlValues;\n\nconsole.log(majorDefaultValues);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Form, SubmitButton } from \"../../components/form\";\nimport CoursesSubForm from \"../../subforms/coursesSubForm/coursesSubForm\";\nimport PreferencesInfo from \"../../subforms/preferncesSubForm/PreferencesInfo\";\nimport MajorInfo from \"../../subforms/majorSubForm/MajorInfo\";\n\n//hooks\nimport {\n  useUserMajorInfo,\n  useFormStep,\n  useUserCourses,\n  useAuth,\n} from \"../../hooks\";\n\n//services\nimport { advisingService, userService } from \"../../services\";\n\n//utils\nimport {\n  updateUserMajor,\n  updateUserMinors,\n  updateStudentCourses,\n} from \"../../utils/advisingSubmissionUtils\";\n\nimport validationSchema from \"./validationSchema\";\nimport defaultValues from \"./defaultValues\";\n\nfunction AdvisingForm(props) {\n  const { step, back, next } = useFormStep(3);\n  const userMajorInfo = useUserMajorInfo();\n\n  const userCoursesInfo = useUserCourses();\n  const { userId, standingId } = useAuth(true);\n\n  const initialValues = {\n    ...defaultValues,\n    ...userMajorInfo,\n    ...userCoursesInfo,\n    standingId: standingId === null ? \"\" : standingId,\n    semesterNumber: 1,\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    console.log(\"Submitting: \", values);\n\n    if (window.confirm(\"Are you sure you want to submit?\")) {\n      try {\n        const {\n          minorIds: oldMinorIds,\n          majorId: oldMajorId,\n          secondMajorId: oldSecondMajorId,\n          catalogId: oldCatalogId,\n          secondCatalogId: oldSecondCatalogId,\n        } = userMajorInfo;\n        const { standingId } = values;\n\n        userService.update(userId, { standingId });\n        updateStudentCourses(\n          userId,\n          values.coursesIds,\n          userCoursesInfo.coursesIds\n        );\n        updateUserMajor(\n          userId,\n          values.majorId,\n          values.catalogId,\n          oldCatalogId,\n          oldMajorId\n        );\n        updateUserMajor(\n          userId,\n          values.secondMajorId,\n          values.secondCatalogId,\n          oldSecondCatalogId,\n          oldSecondMajorId\n        );\n\n        updateUserMinors(userId, values.minorIds, oldMinorIds);\n        // updateAdvisingInfo(userId, values);\n        const { advisingSessionId } = await advisingService.addAdvisingSession({\n          ...values,\n          userId,\n        });\n        await advisingService.generatePlan(advisingSessionId);\n        advisingService.saveAdvisingSession(advisingSessionId);\n      } catch (e) {\n        console.log(\"ERROR in submission: \", e);\n      }\n\n      props.history.replace(\"/advising/results\");\n    }\n\n    setSubmitting(false);\n  };\n\n  const getFormChild = () => {\n    switch (step) {\n      case 1:\n        return <MajorInfo />;\n      case 2:\n        return <PreferencesInfo />;\n      case 3:\n        return <CoursesSubForm />;\n\n      default:\n        return null;\n    }\n  };\n  const getFormTitle = () => {\n    switch (step) {\n      case 1:\n        return \"Major Info\";\n      case 2:\n        return \"Preferences\";\n      case 3:\n        return \"Finished Courses\";\n      default:\n        return \"Advising\";\n    }\n  };\n  return (\n    <Form\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      title={getFormTitle()}\n      onSubmit={handleSubmit}\n      enableReinitialize={true}\n    >\n      {getFormChild()}\n\n      <div className=\"d-flex justify-content-between \">\n        {step > 1 && (\n          <button className=\"btn my-3\" onClick={back} type=\"button\">\n            Back\n          </button>\n        )}\n        {step < 3 && (\n          <button className=\"btn my-3 ms-auto\" onClick={next} type=\"button\">\n            Next\n          </button>\n        )}\n        {step === 3 && <SubmitButton label=\"Generate Plan\" />}\n      </div>\n    </Form>\n  );\n}\n\nexport default AdvisingForm;\n","import { Route, Switch } from \"react-router-dom\";\n\nimport AdvisingHome from \"./AdvisingHome\";\nimport AdvisingResults from \"./AdvisingResults\";\nimport AdvisingForm from \"./form/AdvisingForm\";\n\nimport {\n  ADVISING_FORM_ROUTE,\n  ADVISING_HOME_ROUTE,\n  ADVISING_RESULTS_ROUTE,\n} from \"./routes\";\n\nconst AdvisingRouter = () => (\n  <Switch>\n    <Route path={ADVISING_HOME_ROUTE} exact component={AdvisingHome} />\n    <Route path={ADVISING_RESULTS_ROUTE} component={AdvisingResults} />\n    <Route path={ADVISING_FORM_ROUTE} component={AdvisingForm} />\n  </Switch>\n);\n\nexport { ADVISING_FORM_ROUTE, ADVISING_HOME_ROUTE, ADVISING_RESULTS_ROUTE };\n\nexport default AdvisingRouter;\n","export const PASSWORD = \"password\";\nexport const REPEAT_PASSWORD = \"repeatPassword\";\n","import { PASSWORD, REPEAT_PASSWORD } from \"./fieldNames\";\n\nconst resetPasswordDefaultValues = {\n  [PASSWORD]: \"\",\n  [REPEAT_PASSWORD]: \"\",\n};\n\nexport default resetPasswordDefaultValues;\n","import * as Yup from \"yup\";\nimport { PASSWORD, REPEAT_PASSWORD } from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst MIN_PASSWORD_LENGTH = 8;\nconst PASSWORD_TOO_SHORT = `The password must be at least ${MIN_PASSWORD_LENGTH} characters long`;\nconst PASSWORD_CONTAIN_NO_LETTER = \"The password must have at least one letter\";\nconst PASSWORD_CONTAIN_NO_NUMBER = \"Password must have at least one number\";\nconst PASSWORD_CONTAINS_SPACE = \"Password can't contain spaces\";\nconst PASSWORD_NO_MATCH = \"Passwords don't match\";\n\nconst resetPasswordSchema = Yup.object({\n  [PASSWORD]: Yup.string()\n    .min(MIN_PASSWORD_LENGTH, PASSWORD_TOO_SHORT)\n    .matches(/^\\S*$/, PASSWORD_CONTAINS_SPACE)\n    .matches(/[a-zA-Z]/, PASSWORD_CONTAIN_NO_LETTER)\n    .matches(/\\d/, PASSWORD_CONTAIN_NO_NUMBER)\n    .required(REQUIRED_MESSAGE),\n  [REPEAT_PASSWORD]: Yup.string()\n    .required(REQUIRED_MESSAGE)\n    .oneOf([Yup.ref(PASSWORD), null], PASSWORD_NO_MATCH),\n});\nexport default resetPasswordSchema;\n","import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\nimport { resetPassword, validateResetToken } from \"../../services/userService\";\n\nimport resetPasswordDefaultValues from \"./defaultValues\";\nimport resetPasswordSchema from \"./validationSchema\";\nimport { PASSWORD, REPEAT_PASSWORD } from \"./fieldNames\";\n\nfunction ResetPassword(props) {\n  const TokenStatus = {\n    invalid: \"Invalid\",\n    valid: \"Valid\",\n    validating: \"Validating\",\n  };\n\n  const [token, setToken] = useState();\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.validating);\n\n  const { location, history } = props;\n  useEffect(() => {\n    const { token: queryToken } = queryString.parse(location.search);\n    console.log(\"Query :\", queryToken);\n    history.replace(location.pathname);\n    validateResetToken(queryToken)\n      .then(() => {\n        setToken(queryToken);\n        setTokenStatus(TokenStatus.valid);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setTokenStatus(TokenStatus.invalid);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = async ({ password }) => {\n    try {\n      const res = await resetPassword(token, password);\n      console.log(res.data);\n      alert(\"Password reset successfuly. You can login with the new password.\");\n      window.location(\"/login\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getForm = () => (\n    <Form\n      initialValues={resetPasswordDefaultValues}\n      title=\"Reset Password\"\n      validationSchema={resetPasswordSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormInput name={PASSWORD} type=\"password\" label=\"New password\" />\n      <FormInput\n        name={REPEAT_PASSWORD}\n        type=\"password\"\n        label=\"Repeat password\"\n      />\n      <SubmitButton />\n    </Form>\n  );\n\n  const getBody = () => {\n    switch (tokenStatus) {\n      case TokenStatus.valid:\n        return getForm();\n      case TokenStatus.invalid:\n        return <Redirect to={{ pathname: \"/\" }} />;\n      default:\n        return <div>Validating your request...</div>;\n    }\n  };\n\n  return getBody();\n}\n\nexport default ResetPassword;\n","import React from \"react\";\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\nimport * as Yup from \"yup\";\nimport { forgotPassword } from \"../../services/userService\";\n\nfunction ForgotPassword(props) {\n  const initalValues = {\n    email: \"\",\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n\n  const handleSubmit = async ({ email }, { setStatus }) => {\n    try {\n      const res = await forgotPassword(email);\n      console.log(res.data.message);\n      alert(res.data.message);\n    } catch (ex) {\n      const { response } = ex;\n      if (response && response.data && response.data.error)\n        setStatus({ error: response.data.error });\n      else setStatus({ error: \"Unexpected error happened!\" });\n    }\n  };\n\n  return (\n    <Form\n      initialValues={initalValues}\n      validationSchema={validationSchema}\n      title=\"Reset Password\"\n      onSubmit={handleSubmit}\n    >\n      <FormInput type=\"email\" name=\"email\" label=\"AUC Email\" />\n      <SubmitButton />\n    </Form>\n  );\n}\n\nexport default ForgotPassword;\n","export const EMAIL = \"email\";\nexport const PASSWORD = \"password\";\n","import { PASSWORD, EMAIL } from \"./fieldNames\";\n\nconst loginDefaultValues = {\n  [EMAIL]: \"\",\n  [PASSWORD]: \"\",\n};\n\nexport default loginDefaultValues;\n","import * as Yup from \"yup\";\nimport { PASSWORD, EMAIL } from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst INVALID_EMAIL_FORMAT = \"Invalid email format\";\nconst EMAIL_FORMAT = /^.+@aucegypt.edu$/;\nconst AUC_EMAIL_ONLY = \"You can use AUC email only\";\n\nconst loginSchema = Yup.object({\n  [EMAIL]: Yup.string()\n    .email(INVALID_EMAIL_FORMAT)\n    .required(REQUIRED_MESSAGE)\n    .matches(EMAIL_FORMAT, AUC_EMAIL_ONLY),\n  [PASSWORD]: Yup.string().required(REQUIRED_MESSAGE),\n});\nexport default loginSchema;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\n// import GoogleLoginButton from \"../../components/GoogleLoginButton\";\nimport auth from \"../../services/authService\";\n\nimport {\n  FORGOT_PASSWORD_ROUTE,\n  SIGN_UP_ROUTE,\n  VERIFY_EMAIL_ROUTE,\n} from \"../routes\";\n\nimport defaultValues from \"./defaultValues\";\nimport validationSchema from \"./validationSchema\";\nimport { PASSWORD, EMAIL } from \"./fieldNames\";\nfunction LoginForm(props) {\n  const onSubmit = async (values, { setErrors, setStatus, ...rest }) => {\n    console.log(\"Values: \", values);\n    try {\n      await auth.login(values);\n      window.location = \"/advising\";\n    } catch (ex) {\n      const { response } = ex;\n      const { status } = response;\n      if (response && (status === 400 || status === 401)) {\n        console.log(response.data);\n      }\n      console.log(response);\n      setStatus({ error: response.data.error });\n    }\n  };\n  return (\n    <div className=\"m-auto\">\n      <Form\n        title=\"Login\"\n        initialValues={defaultValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <FormInput\n          label=\"AUC email\"\n          name={EMAIL}\n          type=\"email\"\n          aria-required=\"true\"\n        />\n\n        <FormInput\n          label=\"Password\"\n          name={PASSWORD}\n          type=\"password\"\n          aria-required=\"true\"\n        />\n        <div className=\"d-flex justify-content-between \">\n          <Link to={FORGOT_PASSWORD_ROUTE}>Forgot password?</Link>\n          <p>\n            New user?\n            <Link to={SIGN_UP_ROUTE}> Sign up</Link>\n          </p>\n        </div>\n        <div>\n          <p>\n            <Link to={VERIFY_EMAIL_ROUTE}> Resend email verification?</Link>\n          </p>\n        </div>\n        <SubmitButton label=\"Login\" />\n      </Form>\n      {/* <div className=\"d-flex justify-content-center\">\n        <strong className=\"text-center\">\n          Or login in using\n          <GoogleLoginButton />\n        </strong>\n      </div> */}\n    </div>\n  );\n}\n\nexport default LoginForm;\n","export const FIRST_NAME = \"firstName\";\nexport const LAST_NAME = \"lastName\";\nexport const EMAIL = \"email\";\nexport const USER_ID = \"userId\";\nexport const PASSWORD = \"password\";\nexport const REPEAT_PASSWORD = \"repeatPassword\";\n","import React from \"react\";\nimport { FormInput } from \"../../components/form\";\nimport {\n  FIRST_NAME,\n  LAST_NAME,\n  EMAIL,\n  USER_ID,\n  PASSWORD,\n  REPEAT_PASSWORD,\n} from \"./fieldNames\";\n\nconst UserSubForm = () => {\n  return (\n    <>\n      <div className=\"d-flex\">\n        <div>\n          <FormInput\n            label=\"First Name\"\n            name={FIRST_NAME}\n            aria-required=\"true\"\n          />\n        </div>\n        <div className=\"mx-3\">\n          <FormInput label=\"Last Name\" name={LAST_NAME} aria-required=\"true\" />\n        </div>\n      </div>\n      <FormInput\n        label=\"AUC Email\"\n        name={EMAIL}\n        type=\"email\"\n        aria-required=\"true\"\n      />\n      <FormInput\n        label=\"AUC ID\"\n        name={USER_ID}\n        type=\"number\"\n        aria-required=\"true\"\n      />\n      <FormInput\n        label=\"Password\"\n        name={PASSWORD}\n        type=\"password\"\n        aria-required=\"true\"\n      />\n      <FormInput\n        label=\"Confirm Password\"\n        name={REPEAT_PASSWORD}\n        type=\"password\"\n      />\n    </>\n  );\n};\n\nexport default UserSubForm;\n","import * as Yup from \"yup\";\nimport {\n  FIRST_NAME,\n  LAST_NAME,\n  EMAIL,\n  USER_ID,\n  PASSWORD,\n  REPEAT_PASSWORD,\n} from \"./fieldNames\";\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst MAX_NAME_LENGTH = 15;\nconst NAME_FORMAT = /^[A-Za-z1-9]+$/;\nconst NAME_TOO_LONG = `The name can't exceed ${MAX_NAME_LENGTH} characters long.`;\nconst INVALID_NAME_FORMAT =\n  \"Invalid name format. Name can contain letters and numbers only.\";\n\nconst MIN_ID_VALUE = 100000000;\nconst MAX_ID_VALUE = 999999999;\nconst ID_VALUE_TOO_SMALL =\n  \"Studnet ID must be positive and consist of 9 digits\";\nconst ID_VALUE_TOO_LARGE = \"Studnet ID must consist of no more than 9 digits\";\n\nconst INVALID_EMAIL_FORMAT = \"Invalid email format\";\nconst EMAIL_FORMAT = /^.+@aucegypt.edu$/;\nconst AUC_EMAIL_ONLY = \"You can use AUC email only\";\n\nconst MIN_PASSWORD_LENGTH = 8;\nconst PASSWORD_TOO_SHORT = `The password must be at least ${MIN_PASSWORD_LENGTH} characters long`;\nconst PASSWORD_CONTAIN_NO_LETTER = \"The password must have at least one letter\";\nconst PASSWORD_CONTAIN_NO_NUMBER = \"Password must have at least one number\";\nconst PASSWORD_CONTAINS_SPACE = \"Password can't contain spaces\";\nconst PASSWORD_NO_MATCH = \"Passwords don't match\";\n\nexport default Yup.object({\n  [FIRST_NAME]: Yup.string()\n    .matches(NAME_FORMAT, INVALID_NAME_FORMAT)\n    .max(MAX_NAME_LENGTH, NAME_TOO_LONG)\n    .required(REQUIRED_MESSAGE),\n  [LAST_NAME]: Yup.string()\n    .matches(NAME_FORMAT, INVALID_NAME_FORMAT)\n    .max(MAX_NAME_LENGTH, NAME_TOO_LONG)\n    .required(REQUIRED_MESSAGE),\n  [EMAIL]: Yup.string()\n    .email(INVALID_EMAIL_FORMAT)\n    .required(REQUIRED_MESSAGE)\n    .matches(EMAIL_FORMAT, AUC_EMAIL_ONLY),\n\n  [USER_ID]: Yup.number()\n    .integer()\n    .min(MIN_ID_VALUE, ID_VALUE_TOO_SMALL)\n    .max(MAX_ID_VALUE, ID_VALUE_TOO_LARGE)\n    .required(REQUIRED_MESSAGE),\n\n  [PASSWORD]: Yup.string()\n    .min(MIN_PASSWORD_LENGTH, PASSWORD_TOO_SHORT)\n    .matches(/^\\S*$/, PASSWORD_CONTAINS_SPACE)\n    .matches(/[a-zA-Z]/, PASSWORD_CONTAIN_NO_LETTER)\n    .matches(/\\d/, PASSWORD_CONTAIN_NO_NUMBER)\n    .required(REQUIRED_MESSAGE),\n  [REPEAT_PASSWORD]: Yup.string()\n    .required(REQUIRED_MESSAGE)\n    .oneOf([Yup.ref(PASSWORD), null], PASSWORD_NO_MATCH),\n});\n","import * as Yup from \"yup\";\nimport userValidationSchema from \"../../subforms/userSubForm/validationSchema\";\n\nexport default Yup.object({}).concat(userValidationSchema);\n","import {\n  FIRST_NAME,\n  LAST_NAME,\n  EMAIL,\n  USER_ID,\n  PASSWORD,\n  REPEAT_PASSWORD,\n} from \"./fieldNames\";\n\nconst userDefaultValues = {\n  [FIRST_NAME]: \"\",\n  [LAST_NAME]: \"\",\n  [EMAIL]: \"\",\n  [USER_ID]: \"\",\n  [PASSWORD]: \"\",\n  [REPEAT_PASSWORD]: \"\",\n};\n\nexport default userDefaultValues;\n","import userDefaultValues from \"../../subforms/userSubForm/defaultValues\";\n\nconst signUpDefaultValues = {\n  ...userDefaultValues,\n};\nexport default signUpDefaultValues;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Form, SubmitButton } from \"../../components/form\";\n// import GoogleLoginButton from \"../../components/GoogleLoginButton\";\n\nimport UserSubForm from \"../../subforms/userSubForm/UserSubForm\";\n\n//services\nimport { userService } from \"../../services\";\n\n//routes\nimport { LOGIN_ROUTE, VERIFY_EMAIL_ROUTE } from \"../routes\";\n\n//form\nimport validationSchema from \"./validationSchema\";\nimport defaultValues from \"./defaultValues\";\n\nconst SignUpForm = (props) => {\n  const onSubmit = async (values, { setStatus }) => {\n    try {\n      console.log(`Subimtting Values:`, values);\n      await userService.register(values);\n      alert(\n        \"Account registered successfuly. Please verify your email to login.\"\n      );\n      props.history.push({\n        pathname: VERIFY_EMAIL_ROUTE,\n        state: {\n          email: values.email,\n        },\n      });\n    } catch (ex) {\n      const { response } = ex;\n      if (response) {\n        const { status, data } = response;\n\n        if (status && status >= 400 && status < 500) {\n          setStatus({ error: data.error });\n        }\n\n        console.log(response.data);\n      }\n      console.log(response);\n    }\n  };\n\n  return (\n    <>\n      <Form\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        initialValues={defaultValues}\n        title={\"Sign Up\"}\n      >\n        <UserSubForm />\n        <SubmitButton label=\"Sign Up\" />\n\n        {/* Already a user */}\n        <div className=\"d-flex align-items-center\">\n          <p className=\"ms-auto \">\n            Already a user? <Link to={LOGIN_ROUTE}>Login</Link>\n          </p>\n        </div>\n      </Form>\n      {/* <div className=\"d-flex justify-content-center\">\n        <strong className=\"text-center\">\n          Or login in using\n          <GoogleLoginButton />\n        </strong>\n      </div> */}\n    </>\n  );\n};\n\nexport default SignUpForm;\n","export const EMAIL = \"email\";\n","import { EMAIL } from \"./fieldNames\";\n\nconst verifyEmailDefaultValues = {\n  [EMAIL]: \"\",\n};\n\nexport default verifyEmailDefaultValues;\n","import * as Yup from \"yup\";\nimport { EMAIL } from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst INVALID_EMAIL_FORMAT = \"Invalid email format\";\nconst EMAIL_FORMAT = /^.+@aucegypt.edu$/;\nconst AUC_EMAIL_ONLY = \"You can use AUC email only\";\n\nconst verifyEmailSchema = Yup.object({\n  [EMAIL]: Yup.string()\n    .email(INVALID_EMAIL_FORMAT)\n    .required(REQUIRED_MESSAGE)\n    .matches(EMAIL_FORMAT, AUC_EMAIL_ONLY),\n});\nexport default verifyEmailSchema;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\n\nimport { LOGIN_ROUTE } from \"../routes\";\nimport { HOME_ROUTE } from \"../../common/routes\";\n\nimport auth from \"../../services/authService\";\nimport { resendVerification } from \"../../services/userService\";\n\nimport { EMAIL } from \"./fieldNames\";\nimport verifyEmailDefaultValues from \"./defaultValues\";\nimport verifyEmailSchema from \"./validationSchema\";\n\nconst TITLE = \"Email Verification\";\n\nfunction VerifyEmail(props) {\n  const [showForm, setShowForm] = useState(false);\n\n  const user = auth.getCurrentUser();\n  if (user) return <Redirect to={{ pathname: HOME_ROUTE }} />;\n\n  const { state } = props.history.location; //get email from previous route, if given.\n  if (state && state.email) verifyEmailDefaultValues.email = state.email;\n\n  const handleSubmit = async ({ email }, { setStatus }) => {\n    try {\n      const res = await resendVerification(email);\n      console.log(res);\n      alert(\"Email sent successfully\");\n    } catch (error) {\n      const { response } = error;\n      const { data, status } = response;\n      if (response && status && status >= 400 && status < 500)\n        setStatus({ error: data.error });\n    }\n  };\n\n  const getMessage = () => (\n    <>\n      <p>Please check your email inbox to verify your email.</p>\n      <p className=\"my-2\">\n        If you already confirmed your email,{\" \"}\n        <a href={LOGIN_ROUTE}>login here</a>.\n      </p>\n    </>\n  );\n\n  const getForm = () => {\n    if (!showForm) return null;\n    return (\n      <Form\n        title={TITLE}\n        initialValues={verifyEmailDefaultValues}\n        validationSchema={verifyEmailSchema}\n        onSubmit={handleSubmit}\n      >\n        {getMessage()}\n        <FormInput\n          label=\"Email\"\n          name={EMAIL}\n          placeholder=\"email@aucegypt.edu\"\n        />\n        <SubmitButton />\n      </Form>\n    );\n  };\n\n  return (\n    <>\n      {!showForm && (\n        <div className=\"text-center my-4\">\n          <h1 className=\"text-center mb-4 \">{TITLE}</h1>\n          {getMessage()}\n          <p>\n            Recieved nothing?\n            <button\n              type=\"button\"\n              className=\"btn btn-sm mx-2\"\n              onClick={() => setShowForm(true)}\n            >\n              Resend\n            </button>\n          </p>\n        </div>\n      )}\n      {getForm()}\n    </>\n  );\n}\n\nexport default VerifyEmail;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport ResetPassword from \"./resetPassword/ResetPassword\";\nimport ForgotPassword from \"./forgotPassword/ForgotPassword\";\nimport LoginForm from \"./loginForm/LoginForm\";\nimport SignUpForm from \"./signUpForm/SignupForm\";\nimport VerifyEmail from \"./verifyEmail/VerifyEmail\";\n\nimport {\n  ACCOUNT_ROUTE,\n  FORGOT_PASSWORD_ROUTE,\n  LOGIN_ROUTE,\n  RESET_PASSWORD_ROUTE,\n  SIGN_UP_ROUTE,\n  VERIFY_EMAIL_ROUTE,\n} from \"./routes\";\nimport { NOT_FOUND_ROUTE } from \"../common\";\nimport auth from \"../services/authService\";\n\nfunction AccountRouter({ history }) {\n  useEffect(() => {\n    if (auth.getCurrentUser()) history.push(\"/\");\n  }, [history]);\n\n  return (\n    <Switch>\n      <Route path={FORGOT_PASSWORD_ROUTE} component={ForgotPassword} />\n      <Route path={RESET_PASSWORD_ROUTE} component={ResetPassword} />\n      <Route path={VERIFY_EMAIL_ROUTE} component={VerifyEmail} />\n      <Route path={LOGIN_ROUTE} component={LoginForm} />\n      <Route path={SIGN_UP_ROUTE} component={SignUpForm} />\n      <Redirect to={{ pathname: { NOT_FOUND_ROUTE } }} />\n    </Switch>\n  );\n}\nexport {\n  ACCOUNT_ROUTE,\n  FORGOT_PASSWORD_ROUTE,\n  LOGIN_ROUTE,\n  RESET_PASSWORD_ROUTE,\n  SIGN_UP_ROUTE,\n  VERIFY_EMAIL_ROUTE,\n};\nexport default AccountRouter;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\nfunction ProtectedRoute({ component: Component, render, ...rest }) {\n  const user = auth.getCurrentUser();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!user) return <Redirect to={{ pathname: \"/login\" }} />;\n\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import \"./App.css\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { AboutUs, ContactUs, Footer, Header, Home, NotFound } from \"./common\";\nimport {\n  ABOUT_US_ROUTE,\n  CONTACT_US_ROUTE,\n  HOME_ROUTE,\n  NOT_FOUND_ROUTE,\n} from \"./common\";\n\nimport { Profile, Logout, LOGOUT_ROUTE, PROFILE_ROUTE } from \"./profile\";\n\nimport AdvisingRouter, { ADVISING_HOME_ROUTE } from \"./advising\";\nimport AccountRouter, { ACCOUNT_ROUTE } from \"./account\";\n\nimport useAuth from \"./hooks/useAuth\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\nfunction App() {\n  const user = useAuth();\n\n  return (\n    <BrowserRouter>\n      <div className=\"page-container\">\n        <Header user={user} />\n\n        <Switch>\n          <Route\n            path={HOME_ROUTE}\n            exact\n            render={(props) => <Home {...props} user={user} />}\n          />\n          <Route>\n            <main className=\"container content-wrapper\">\n              <Switch>\n                <ProtectedRoute\n                  path={ADVISING_HOME_ROUTE}\n                  component={AdvisingRouter}\n                />\n                <Route path={ACCOUNT_ROUTE} component={AccountRouter} />\n\n                <ProtectedRoute path={PROFILE_ROUTE} component={Profile} />\n                <Route path={LOGOUT_ROUTE} component={Logout} />\n\n                <Route path={CONTACT_US_ROUTE} component={ContactUs} />\n                <Route path={ABOUT_US_ROUTE} component={AboutUs} />\n\n                <Route exact path={NOT_FOUND_ROUTE} component={NotFound} />\n                <Redirect to={{ pathname: { NOT_FOUND_ROUTE } }} />\n              </Switch>\n            </main>\n          </Route>\n          <Route path={NOT_FOUND_ROUTE} component={NotFound} />\n        </Switch>\n\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}