{"version":3,"sources":["constant/websiteName.js","account/routes.js","advising/routes.js","common/Home.jsx","common/ContactUs.jsx","assets/pictures/youssef.jpg","assets/pictures/sherif.jpg","components/RoundedPicture.jsx","components/card/CardBody.jsx","components/card/Card.jsx","components/grid/Row.jsx","components/grid/ColSmall.jsx","components/grid/ColMedium.jsx","common/AboutUs.jsx","components/CopyRight.jsx","common/Footer.jsx","components/nav/Nav.jsx","components/nav/NavItem.jsx","components/nav/NavList.jsx","assets/pictures/auc-logo.png","components/Logo.jsx","components/Brand.jsx","services/httpService.js","services/advisingService.js","services/userService.js","services/authService.js","hooks/useAuth.js","profile/Profile.jsx","profile/Logout.jsx","profile/routes.js","common/Header.jsx","common/NotFound.jsx","common/routes.js","advising/AdvisingHome.jsx","utils/coursesUtils.js","hooks/useApi.js","advising/AdvisingResults.jsx","components/form/FormWrapper.jsx","components/form/FormError.jsx","components/form/Form.jsx","components/form/FieldError.jsx","components/form/FormInput.jsx","components/form/FormSelect.jsx","components/form/SubmitButton.jsx","components/form/FormCheckbox.jsx","components/form/FormRadio.jsx","components/form/FormGroup.jsx","components/form/FormPolarRadioGroup.jsx","components/form/FormSelectGroup.jsx","subforms/coursesSubForm/fieldNames.js","subforms/coursesSubForm/coursesModal.jsx","services/coursesService.js","services/catalogsService.js","subforms/coursesSubForm/coursesSubForm.jsx","utils/stringUtils.js","services/pacesService.js","subforms/preferncesSubForm/fieldNames.js","constant/semesters.js","subforms/preferncesSubForm/PreferencesInfo.jsx","services/majorsService.js","services/minorsService.js","hooks/useMajors.js","utils/formattingUtils.js","hooks/useCatalogs.js","subforms/majorSubForm/fieldNames.js","services/standingsServices.js","subforms/majorSubForm/MajorInfo.jsx","hooks/useFormStep.js","hooks/useUserCourses.js","hooks/useUserMajorInfo.js","utils/advisingSubmissionUtils.js","subforms/majorSubForm/validationSchema.js","subforms/preferncesSubForm/validationSchema.js","subforms/coursesSubForm/validationSchema.js","advising/form/validationSchema.js","subforms/majorSubForm/defaultValues.js","subforms/preferncesSubForm/defaultValues.js","subforms/coursesSubForm/defaultValues.js","advising/form/defaultValues.js","advising/Disclaimer.jsx","advising/form/AdvisingForm.jsx","advising/index.jsx","account/resetPassword/fieldNames.js","account/resetPassword/defaultValues.js","account/resetPassword/validationSchema.js","account/resetPassword/ResetPassword.jsx","account/forgotPassword/ForgotPassword.jsx","account/loginForm/fieldNames.js","account/loginForm/defaultValues.js","account/loginForm/validationSchema.js","account/loginForm/LoginForm.jsx","subforms/userSubForm/fieldNames.js","subforms/userSubForm/UserSubForm.jsx","subforms/userSubForm/validationSchema.js","account/signUpForm/validationSchema.js","subforms/userSubForm/defaultValues.js","account/signUpForm/defaultValues.js","account/signUpForm/SignupForm.jsx","account/verifyEmail/fieldNames.js","account/verifyEmail/defaultValues.js","account/verifyEmail/validationSchema.js","account/verifyEmail/VerifyEmail.jsx","account/index.js","components/ProtectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADVISILY","ACCOUNT_ROUTE","LOGIN_ROUTE","SIGN_UP_ROUTE","RESET_PASSWORD_ROUTE","VERIFY_EMAIL_ROUTE","FORGOT_PASSWORD_ROUTE","ADVISING_HOME_ROUTE","ADVISING_FORM_ROUTE","ADVISING_RESULTS_ROUTE","Home","redirectTo","user","className","to","id","ContactUs","props","href","RoundedPicture","radius","alt","imageStyles","width","height","style","CardBody","title","subtitle","children","Card","Row","ColSmall","ColMedium","numOfCols","AboutUs","src","sherifPic","youssefPic","CopyRight","Footer","Nav","NavItem","label","extraClasses","NavList","others","Logo","logo","Brand","axios","defaults","baseURL","process","interceptors","response","use","err","status","console","log","alert","Promise","reject","httpService","get","post","delete","put","setJwt","jwt","headers","common","apiEndpoint","getAdvisingSessions","a","http","advisingSessions","data","getAdvisingSession","userId","params","addAdvisingSession","sessionInfo","updateAdvisingSessions","generatePlan","advisingSessionId","getAdvisingResultCourses","courses","getAdvisingResults","results","saveAdvisingSession","localStorage","setItem","getUserAdvisingSessionId","verifyResults","advisingService","retrieveAdvisingSession","getItem","apiEndPoint","getUser","token","getUsers","users","validateResetToken","resetPassword","password","forgotPassword","email","resendVerification","getStudentMajors","majors","getStudentMinors","minors","getStudentCourses","studentCourses","addStudentCourse","courseId","deleteStudentCourse","config","res","addStudentMajor","majorId","catalogId","deleteStudentMajor","addStudentMinor","minorId","deleteStudentMinor","userService","register","userInfo","update","updatedData","tokenKey","getJwt","loginWithJwt","getCurrentUser","login","refreshUser","newUser","Error","isVerified","jwtDecode","ex","auth","logout","removeItem","useAuth","refresh","useState","setUser","useEffect","then","Profile","firstName","lastName","Logout","window","location","LOGOUT_ROUTE","Header","NotFound","NOT_FOUND_ROUTE","AdvisingHome","formatCourseData","course","courseCode","courseTitle","formatedTitle","prefix","useApi","apiFunc","handleResponse","loading","setLoading","error","setError","failedToLoad","setFailedToLoad","setData","request","result","undefined","AdvisingResults","userIndex","setUserIndex","incrementIndex","length","decrementIndex","setUsers","getUsersApi","setAdvisingSessionId","disableVerifyBtn","setDisableVerifyBtn","resultCoursesApi","advisingSessionIdApi","userCoursesApi","renderCoursesList","map","Math","random","resultsAvailable","semesters","handleVerify","confirm","reload","onClick","standing","totalCredits","semesterNumber","sortedCourses","sort","c1","c2","sortCourses","c","credits","reduce","resultsAvailableUI","replace","disabled","type","FormWrapper","FormError","errorMessage","useFormikContext","isValid","submitCount","Form","initialValues","validationSchema","onSubmit","rest","FieldError","name","getFieldMeta","touched","FormInput","visible","useField","field","htmlFor","aria-invalid","FormSelect","changeButton","editable","setEditable","SubmitButton","isSubmitting","FormCheckbox","inputClassName","divClassName","checked","value","FormRadio","FormGroup","labelClass","FormPolarRadioGroup","trueLabel","falseLabel","FormSelectGroup","defaultOption","items","idSelector","nameSelector","valueSelector","item","COURSES_IDS","GENERAL_ELECTIVE_CREDITS","EXEMPTED_CREDITS","CoursesModal","show","onClose","prefixes","handleClose","setSelectedPrefix","selectedPrefix","coursesPrefixMap","prefixMap","forEach","push","mapCoursestoPrefixes","Modal","size","onHide","scrollable","dialogClassName","closeButton","Title","Body","JSON","stringify","p1","p2","Button","variant","getAllCourses","getPrefixes","catCourseUrl","getCatalogs","catalogs","getCatalogCourses","catCourses","CoursesSubForm","values","setFieldValue","prefixesApi","getPrefixesApi","catalogApi","handleCatalogCouresesResponse","coursesApi","catalogCourses","handleCourseCheck","target","selectedIds","filter","v","prerequisiteFullfilled","selectedCourseIds","parseInt","requisites","includes","some","reqSet","every","r","requisiteTypeId","showModal","setShowModal","renderCourseRow","row","onChange","catalogCourse","courseType","min","categorized","categoriesMap","courseTypeId","CourseTypeIds","mathElec","mathOrMajorElec","electives","categoryIndex","categoriseCatalogCourses","category","coursesPerRow","groupedCourses","i","groupCourses","stringToBool","str","toLowerCase","trim","getPaces","paces","OVERLOADING","TAKING_SUMMER","TAKING_WINTER","OVERLOADING_CREDITS","SUMMER_CREDITS","WINTER_CREDITS","PACE_ID","SEMESTERS_TO_PLAN","PreferencesInfo","overloading","takingSummer","takingWinter","setPaces","fieldToResetName","resetValue","handleOnChange","getMajors","getMinors","useMajors","setMajors","setMinors","m","majorTitle","formatMajors","minorTitle","formatMinors","useCatalogs","setCatalogs","year","formatCatalogs","MAJOR_ID","CATALOG_ID","MINOR_IDS","SECOND_MAJOR_ID","SECOND_CATALOG_ID","IS_DOUBLE_MAJORING","IS_MINORING","STANDING_ID","SEMESTER_NUMBER","getStandings","standings","MajorInfo","setStandings","catch","isMinoring","isDoubleMajoring","firstMajorCatalogs","secondMajorId","mounted","useFormStep","startStep","step","setStep","next","back","useUserCourses","coursesIds","setStudentCourseIds","generalElecCredits","setGeneralElecCredits","getGeneralElecCredits","advisingSession","getCoursesIds","useUserMajorInfo","firstMajor","setFirstMajor","secondCatalogId","secondMajor","setSecondMajor","minorIds","getStudentMajorsInfo","getStudentMinorsIds","updateUserMajor","newMajorId","oldCatalogId","oldMajorId","updateUserMinors","selectedMinorIds","oldMinorIds","newMinorIds","indexOf","deleteMinorIds","updateStudentCourses","initialCoursesIds","newIds","deletedIds","REQUIRED_MESSAGE","Yup","required","notRequired","when","is","notOneOf","max","integer","concat","majorValidationSchema","preferencesValidationSchema","coursesCalidationSchema","majorDefaultValues","preferencesDefaultValues","coursesDefaultValues","advisingDefautlValues","Disclaimer","AdvisingForm","userMajorInfo","userCoursesInfo","standingId","defaultValues","handleSubmit","setSubmitting","oldSecondMajorId","oldSecondCatalogId","history","getFormTitle","enableReinitialize","getFormChild","AdvisingRouter","path","exact","component","PASSWORD","REPEAT_PASSWORD","resetPasswordDefaultValues","PASSWORD_TOO_SHORT","resetPasswordSchema","matches","oneOf","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","queryToken","queryString","parse","search","pathname","getBody","ForgotPassword","setStatus","message","EMAIL","loginDefaultValues","loginSchema","LoginForm","setErrors","aria-required","FIRST_NAME","LAST_NAME","USER_ID","UserSubForm","NAME_FORMAT","NAME_TOO_LONG","INVALID_NAME_FORMAT","positive","userValidationSchema","userDefaultValues","signUpDefaultValues","SignUpForm","state","verifyEmailDefaultValues","verifyEmailSchema","TITLE","VerifyEmail","showForm","setShowForm","getMessage","placeholder","AccountRouter","ProtectedRoute","Component","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uOAAaA,EAAW,YCAXC,EAAgB,WAEhBC,EAAW,UAAMD,EAAN,UACXE,EAAa,UAAMF,EAAN,YACbG,EAAoB,UAAMH,EAAN,mBACpBI,EAAkB,UAAMJ,EAAN,iBAClBK,EAAqB,UAAML,EAAN,oBCNrBM,EAAsB,YACtBC,EAAmB,UAAMD,EAAN,SACnBE,EAAsB,UAAMF,EAAN,Y,OC6BpBG,MAxBf,YAAyB,IACjBC,EADgB,EAARC,KACYL,EAAsBJ,EAChD,OACE,sBAAKU,UAAU,6BAAf,UACE,qEACA,oBAAGA,UAAU,6BAAb,UACGb,EADH,+DAGA,qBAAKa,UAAU,6CAAf,SAME,cAAC,IAAD,CAAMC,GAAIH,EAAV,SACE,wBAAQI,GAAG,kBAAkBF,UAAU,eAAvC,kCCFKG,MAlBf,SAAmBC,GACjB,OACE,sBAAKJ,UAAU,mBAAf,UACE,4CACA,uEACyC,IACvC,mBAAGK,KAAK,4BAAR,2CAEF,mGACqE,IACnE,mBAAGA,KAAK,2DAAR,uCCZO,MAA0B,oCCA1B,MAA0B,mC,0BCW1BC,MATf,YAAoD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,IAAQJ,EAAS,iBAC3CK,EAAcF,EAAS,CAAEG,MAAOH,EAAQI,OAAQJ,GAAW,GACjE,OACE,sBAAKP,UAAU,qBAAf,UACE,+CAASI,GAAT,IAAgBQ,MAAOH,EAAaD,IAAKA,KAD3C,QCOWK,MAVf,YAAkD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACnC,OACE,sBAAKhB,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,cAA6Bc,KAC7B,oBAAId,UAAU,gCAAd,SAA+Ce,IAC/C,mBAAGf,UAAU,YAAb,SAA0BgB,Q,eCGjBC,MARf,YAAuC,IAAvBD,EAAsB,EAAtBA,SAAaZ,EAAS,iBACpC,OACE,6CAAKJ,UAAU,SAAYI,GAA3B,aACGY,M,2BCMQE,MATf,YAAiD,IAAlCF,EAAiC,EAAjCA,SAAUhB,EAAuB,EAAvBA,UAAcI,EAAS,iBAE9C,OADKJ,IAAWA,EAAY,IAE1B,6CAAKA,UAAW,OAASA,GAAeI,GAAxC,aACGY,MCQQG,I,uCCCAC,MAbf,YAAuE,IAAlDC,EAAiD,EAAjDA,UAAWL,EAAsC,EAAtCA,SAAsC,IAA5BhB,iBAA4B,MAAhB,GAAgB,EAATI,EAAS,iBAMpE,OAFAJ,EAAYA,EAAY,WAHxBqB,GACGA,GAAaA,EAAY,IAAMA,EAAY,EAAI,GAAK,IAAMA,GAK3D,6CAAKrB,UAAWA,GAAeI,GAA/B,aACGY,MCoCQM,MArCf,SAAiBlB,GACf,OACE,sBAAKJ,UAAU,cAAf,UACE,8BACE,yCAEF,eAAC,EAAD,CAAKA,UAAU,gCAAf,UACE,cAAC,EAAD,CAAWqB,UAAU,IAAIrB,UAAU,gCAAnC,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAgBuB,IAAKC,EAAWhB,IAAI,eACpC,cAAC,EAAD,CACEM,MAAM,aACNC,SAAS,qDAFX,6KAUJ,cAAC,EAAD,CAAWM,UAAU,IAAIrB,UAAU,gCAAnC,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAgBuB,IAAKE,EAAYjB,IAAI,kBACrC,cAAC,EAAD,CACEM,MAAM,gBACNC,SAAS,uDAFX,qJChBGW,MAdf,SAAmBtB,GACjB,OACE,qBAAKJ,UAAU,aAAf,SACE,0CAEE,mBAAGA,UAAU,eAAeK,KAAK,gCAAjC,+CAFF,6BCeSsB,MAhBf,SAAgBvB,GACd,OACE,yBAAQJ,UAAU,4CAAlB,UACE,cAAC,EAAD,IACA,eAAC,EAAD,CAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAWqB,UAAU,OAArB,SACE,cAAC,IAAD,CAASpB,GAAG,YAAZ,wBAEF,cAAC,EAAD,CAAWoB,UAAU,OAArB,SACE,cAAC,IAAD,CAASpB,GAAG,cAAZ,iCCHK2B,MARf,YAA4B,IAAbZ,EAAY,EAAZA,SACb,OACE,qBAAKhB,UAAU,kDAAf,SACGgB,K,gCCQQa,MAVf,YAAmE,IAAhDC,EAA+C,EAA/CA,MAA+C,IAAxCC,oBAAwC,MAAzB,GAAyB,MAArB9B,UAAqB,MAAhB,GAAgB,EAATG,EAAS,iBAChE,OACE,4CAAIJ,UAAW,oBAAsB+B,GAAkB3B,GAAvD,aACE,cAAC,IAAD,CAASH,GAAIA,EAAID,UAAW,YAA5B,SACG8B,Q,8BCGME,MARf,YAA8D,IAA3ChB,EAA0C,EAA1CA,SAA0C,IAAhCe,oBAAgC,MAAjB,GAAiB,EAAVE,EAAU,iBAC3D,OACE,4CAAIjC,UAAW,uBAAyB+B,GAAkBE,GAA1D,aACGjB,MCLQ,MAA0B,qCCgB1BkB,MAbf,WACE,OACE,qBAAKlC,UAAU,mCAAf,SACE,qBACEuB,IAAKY,EACLzB,MAAO,IACPC,OAAQ,GACRH,IAAI,6CCCG4B,MARf,SAAehC,GACb,OACE,qBAAKJ,UAAU,0BAAf,SACE,oBAAIE,GAAG,QAAP,SAAgBf,O,+CCDtBkD,IAAMC,SAASC,QAAUC,sCACzBH,IAAMI,aAAaC,SAASC,IAAI,MAAM,SAACC,GAGrC,KADEA,EAAIF,UAAYE,EAAIF,SAASG,QAAU,KAAOD,EAAIF,SAASG,OAAS,KAIpE,MAFAC,QAAQC,IAAI,sCAAuCH,GACnDI,MAAM,iCACAJ,EAER,OAAOK,QAAQC,OAAON,MAGxB,IAOeO,EAPK,CAClBC,IAAKf,IAAMe,IACXC,KAAMhB,IAAMgB,KACZC,OAAQjB,IAAMiB,OACdC,IAAKlB,IAAMkB,IACXC,OApBa,SAACC,GACdpB,IAAMC,SAASoB,QAAQC,OAAO,gBAAkBF,I,QCF5CG,GAAc,YAEPC,GAAmB,uCAAG,8BAAAC,EAAA,sEACQC,EAAKX,IAAIQ,IADjB,uBACnBI,EADmB,EACzBC,KADyB,kBAE1BD,GAF0B,2CAAH,qDAKnBE,GAAkB,uCAAG,WAAOC,GAAP,iBAAAL,EAAA,sEACSC,EAAKX,IAAIQ,GAAa,CAC7DQ,OAAQ,CAAED,YAFoB,uBAClBH,EADkB,EACxBC,KADwB,kBAIzBD,GAJyB,2CAAH,sDAOlBK,GAAkB,uCAAG,WAAOC,GAAP,iBAAAR,EAAA,sEACTC,EAAKV,KAAKO,GAAaU,GADd,uBACxBL,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBM,GAAsB,uCAAG,WAAOD,GAAP,iBAAAR,EAAA,sEACbC,EAAKR,IAAIK,GAAaU,GADT,uBAC5BL,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBO,GAAY,uCAAG,WAAOC,GAAP,SAAAX,EAAA,sEACpBC,EAAKV,KAAL,UAAaO,GAAb,kBAA0C,CAC9Ca,sBAFwB,2CAAH,sDAKZC,GAAwB,uCAAG,WAAOD,GAAP,iBAAAX,EAAA,sEACNC,EAAKX,IAAL,UAC3BQ,GAD2B,YACZa,EADY,qBADM,uBACxBE,EADwB,EAC9BV,KAD8B,kBAI/BU,GAJ+B,2CAAH,sDAOxBC,GAAkB,uCAAG,WAAOH,GAAP,iBAAAX,EAAA,sEACAC,EAAKX,IAAL,UAC3BQ,GAD2B,YACZa,EADY,aADA,uBAClBI,EADkB,EACxBZ,KADwB,kBAIzBY,GAJyB,2CAAH,sDAMlBC,GAAsB,SAACL,GAClCM,aAAaC,QAAQ,oBAAqBP,IAK/BQ,GAAwB,uCAAG,WAAOd,GAAP,iBAAAL,EAAA,sEACfC,EAAKX,IAAL,UAAYQ,GAAZ,8BAA6CO,IAD9B,uBAC9BF,EAD8B,EAC9BA,KAD8B,kBAE/BA,EAAKQ,mBAF0B,2CAAH,sDAKxBS,GAAa,uCAAG,WAAOT,GAAP,iBAAAX,EAAA,sEACJC,EAAKV,KAAL,UAAaO,GAAb,kBAA0C,CAC/Da,sBAFyB,uBACnBR,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAkBXkB,GAZS,CACtBtB,uBACAK,sBACAG,sBACAE,0BACAC,gBACAI,sBACAF,4BACAI,uBACAM,wBAvBqC,kBACrCL,aAAaM,QAAQ,sBAuBrBH,kBCrEII,GAAc,SAQPC,GAAO,uCAAG,WAAOpB,GAAP,mBAAAL,EAAA,sEACWC,EAAKX,IAAL,UAAYkC,GAAZ,SAAgC,CAC9DlB,OAAQ,CACND,YAHiB,mBACbF,EADa,EACbA,KAAMP,EADO,EACPA,QAKTO,EANgB,yCAMH,MANG,gCAQd,CAAElE,KAAMkE,EAAMuB,MAAO9B,EAAQ,kBARf,2CAAH,sDAWP+B,GAAQ,uCAAG,8BAAA3B,EAAA,sEACQC,EAAKX,IAAL,UAAYkC,KADpB,uBACRI,EADQ,EACdzB,KADc,kBAGfyB,GAHe,2CAAH,qDAMRC,GAAkB,uCAAG,WAAOH,GAAP,SAAA1B,EAAA,sEACnBC,EAAKV,KAAL,UAAaiC,GAAb,yBAAiD,CAAEE,UADhC,mFAAH,sDAGlBI,GAAa,uCAAG,WAAOJ,EAAOK,GAAd,SAAA/B,EAAA,sEACdC,EAAKV,KAAL,UAAaiC,GAAb,mBAA2C,CACtDE,QACAK,aAHyB,mFAAH,wDAMbC,GAAc,uCAAG,WAAOC,GAAP,SAAAjC,EAAA,sEACfC,EAAKV,KAAL,UAAaiC,GAAb,oBAA4C,CAAES,UAD/B,mFAAH,sDAGdC,GAAkB,uCAAG,WAAOD,GAAP,SAAAjC,EAAA,sEACnBC,EAAKV,KAAL,UAAaiC,GAAb,wBAAgD,CAAES,UAD/B,mFAAH,sDAIlBE,GAAgB,uCAAG,WAAO9B,GAAP,iBAAAL,EAAA,sEACCC,EAAKX,IAAL,UAAYkC,GAAZ,gBAAuC,CACpElB,OAAQ,CAAED,YAFkB,uBAChB+B,EADgB,EACtBjC,KADsB,kBAIvBiC,GAJuB,2CAAH,sDAMhBC,GAAgB,uCAAG,WAAOhC,GAAP,iBAAAL,EAAA,sEACCC,EAAKX,IAAL,UAAYkC,GAAZ,gBAAuC,CACpElB,OAAQ,CAAED,YAFkB,uBAChBiC,EADgB,EACtBnC,KADsB,kBAIvBmC,GAJuB,2CAAH,sDAOhBC,GAAiB,uCAAG,WAAOlC,GAAP,iBAAAL,EAAA,sEACQC,EAAKX,IAAL,UAClCkC,GADkC,iBAErC,CAAElB,OAAQ,CAAED,YAHiB,uBACjBmC,EADiB,EACvBrC,KADuB,kBAMxBqC,GANwB,2CAAH,sDASjBC,GAAgB,uCAAG,WAAOpC,EAAQqC,GAAf,SAAA1C,EAAA,sEACxBC,EAAKV,KAAL,UAAaiC,GAAb,iBAAyC,CAC7CnB,SACAqC,aAH4B,2CAAH,wDAMhBC,GAAmB,uCAAG,WAAOtC,EAAQqC,GAAf,iBAAA1C,EAAA,6DAC3B4C,EAAS,CACbzC,KAAM,CAAEE,SAAQqC,aAFe,SAIfzC,EAAKT,OAAL,UAAegC,GAAf,iBAA2CoB,GAJ5B,cAI3BC,EAJ2B,yBAK1BA,GAL0B,2CAAH,wDAQnBC,GAAe,uCAAG,WAAOzC,EAAQ0C,EAASC,GAAxB,eAAAhD,EAAA,sEACXC,EAAKV,KAAL,UAAaiC,GAAb,gBAAwC,CACxDnB,SACA0C,UACAC,cAJ2B,cACvBH,EADuB,yBAMtBA,GANsB,2CAAH,0DASfI,GAAkB,uCAAG,WAAO5C,EAAQ0C,GAAf,eAAA/C,EAAA,sEACdC,EAAKT,OAAL,UAAegC,GAAf,gBAA0C,CAC1DrB,KAAM,CACJE,SACA0C,aAJ4B,cAC1BF,EAD0B,yBAOzBA,GAPyB,2CAAH,wDASlBK,GAAe,uCAAG,WAAO7C,EAAQ8C,GAAf,iBAAAnD,EAAA,6DACvB4C,EAAS,CACbvC,SACA8C,WAH2B,SAKXlD,EAAKV,KAAL,UAAaiC,GAAb,gBAAwCoB,GAL7B,cAKvBC,EALuB,yBAMtBA,GANsB,2CAAH,wDASfO,GAAkB,uCAAG,WAAO/C,EAAQ8C,GAAf,iBAAAnD,EAAA,6DAC1B4C,EAAS,CACbzC,KAAM,CACJE,SACA8C,YAJ4B,SAOdlD,EAAKT,OAAL,UAAegC,GAAf,gBAA0CoB,GAP5B,cAO1BC,EAP0B,yBAQzBA,GARyB,2CAAH,wDA+BhBQ,GAfK,CAClBC,SApHsB,SAACC,GACvB,OAAOtD,EAAKV,KAAL,UAAaiC,GAAb,aAAqC+B,IAoH5CC,OAPiB,uCAAG,WAAOnD,EAAQoD,GAAf,eAAAzD,EAAA,sEACFC,EAAKR,IAAL,UAAY+B,GAAZ,YAA2BnB,GAAUoD,GADnC,cACdZ,EADc,yBAEbA,GAFa,2CAAH,wDAQjBpB,WACAE,YACAQ,oBACAE,oBACAE,qBACAE,oBACAE,uBACAG,mBACAG,sBACAC,mBACAE,uBCjIIM,GAAW,QAEJC,GAAS,WACpB,OAAO1C,aAAaM,QAAQmC,KAG9BzD,EAAKP,OAAOiE,MAEL,IAAMC,GAAe,SAACjE,GAC3BsB,aAAaC,QAAQwC,GAAU/D,GAC/B,IAAQgB,EAAsBkD,KAAtBlD,kBACRK,GAAoBL,GACpBV,EAAKP,OAAOiE,OAEDG,GAAK,uCAAG,mCAAA9D,EAAA,6DAASiC,EAAT,EAASA,MAAOF,EAAhB,EAAgBA,SAAhB,SACS9B,EAAKV,KAhBf,eAgBiC,CACjD0C,QACAF,aAHiB,gBACLpC,EADK,EACXQ,KAIRc,aAAaC,QAAQwC,GAAU/D,GALZ,2CAAH,sDAWLoE,GAAW,uCAAG,WAAO9H,GAAP,mBAAA+D,EAAA,+EAELyB,GAAQxF,EAAKoE,QAFR,UAEjBwC,EAFiB,OAGTmB,EAAmBnB,EAAzB5G,KAAeyF,EAAUmB,EAAVnB,MAClBsC,EAJkB,sBAIH,IAAIC,MAAM,yBAJP,UAKlBD,EAAQE,WALU,yCAKSjI,GALT,cAMvB2H,GAAalC,GANU,kBAQhByC,YAAUzC,IARM,kCAUvB1C,QAAQC,IAAI,mBAAZ,KAAoChD,GAVb,0DAAH,sDAcX4H,GAAiB,WAC5B,IACE,IAAMlE,EAAMsB,aAAaM,QAAQmC,IAQjC,OAPWS,YAAUxE,GAQrB,MAAOyE,GACP,OAAO,OAYIC,GARF,CACXP,SACAQ,OApCoB,WACpBrD,aAAasD,WAAWb,KAoCxBG,kBACAD,gBACAD,UACAI,gBCtDaS,OATf,SAAiBC,GACf,MAAwBC,mBAASL,GAAKR,kBAAtC,mBAAO5H,EAAP,KAAa0I,EAAb,KAKA,OAJAC,qBAAU,WACJH,GAASJ,GAAKN,YAAY9H,GAAM4I,MAAK,SAACb,GAAD,OAAaW,EAAQX,QAC7D,CAACS,IAEGxI,GCeM6I,OArBf,SAAiBxI,GACf,IAAML,EAAOuI,KAEb,OAAKvI,EAGH,qCACE,oBAAIC,UAAU,GAAd,qBACA,8BACE,4CADF,IAC2BD,EAAK8I,UAAY,IAAM9I,EAAK+I,YAEvD,8BACE,6CADF,IAC4B/I,EAAKgG,SAEjC,8BACE,kDADF,IACiChG,EAAKoE,aAZxB,MCKL4E,OARf,SAAgB3I,GAKd,OAJAsI,qBAAU,WACRP,GAAKC,SACLY,OAAOC,SAAW,MACjB,IACI,MCPIC,GAAe,UCmDbC,OAzCf,YAA2B,IAATpJ,EAAQ,EAARA,KAChB,OACE,eAAC,EAAD,WACE,eAAC,EAAD,CAAWsB,UAAU,IAAIrB,UAAU,SAAnC,UACE,cAAC,IAAD,CAASA,UAAU,gBAAgBC,GAAG,IAAtC,SACE,cAAC,EAAD,MAGF,eAAC,EAAD,WACE,cAAC,EAAD,CAAS6B,MAAM,OAAO7B,GAAG,MACxBF,GAAQ,cAAC,EAAD,CAAS+B,MAAM,SAAS7B,GAAG,oBAGxC,cAAC,EAAD,CAAWoB,UAAU,IAArB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAWA,UAAU,OAArB,SACE,eAAC,EAAD,CAASU,aAAa,YAAtB,WACIhC,GACA,qCACE,cAAC,EAAD,CAASE,GAAIZ,EAAayC,MAAM,UAChC,cAAC,EAAD,CACE7B,GAAIX,EACJwC,MAAM,UACNC,aAAa,MACb7B,GAAG,sBAIRH,GACC,qCACE,cAAC,EAAD,CAASE,GAAG,MAAM6B,MAAO/B,EAAK8I,YAC9B,cAAC,EAAD,CAAS5I,GAAIiJ,GAAcpH,MAAM,SAASC,aAAa,oBCjCtDqH,OARf,SAAkBhJ,GAChB,OACE,mCACE,oBAAIJ,UAAU,mBAAd,uCCFOqJ,GAAkB,aC6EhBC,OA7Ef,SAAsBlJ,GACpB,OACE,qBAAKJ,UAAU,gCAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,mBAAd,sBACA,sCAASb,EAAT,OACA,+BACE,+BACE,sDACA,+HAKF,+BACE,2CACA,gGAEF,+BACE,6DACA,uJAMJ,kDACA,+BACE,uDACA,wTAQF,+BACE,wDACA,8JAKF,+BACE,gFACA,8GAgBF,sBAAKa,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,MAApC,SACE,wBAAQA,UAAU,yBAAlB,kCAIF,cAAC,IAAD,CAAMC,GAAG,oBAAT,SACE,wBAAQD,UAAU,aAAlB,yC,SCtECuJ,GAAmB,SAACC,GAC/B,IAAQhD,EAA8CgD,EAA9ChD,SAAUiD,EAAoCD,EAApCC,WAAYC,EAAwBF,EAAxBE,YAI9B,MAAO,CAAElD,WAAUmD,cAJmCH,EAAXI,OAEZ,KADbH,EAAa,EAAI,MAAQA,GACM,MAAQC,IC0B5CG,OA7Bf,SAAgBC,EAASC,GACvB,MAA8BvB,oBAAS,GAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KACA,EAA0BzB,mBAAS,MAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KACA,EAAwC3B,oBAAS,GAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAAwB7B,mBAAS,IAAjC,mBAAOvE,EAAP,KAAaqG,EAAb,KAgBA,MAAO,CACLrG,OACA+F,UACAE,QACAE,eACAG,QAnBW,uCAAG,wCAAAzG,EAAA,6DACdmG,GAAW,GADG,kBAGOH,EAAO,WAAP,KAHP,OAGRU,EAHQ,YAIWC,IAAnBV,IAA8BS,EAAST,EAAeS,IAC1DF,EAAQE,GALI,gDAOZL,EAAS,EAAD,IACRE,GAAgB,GAChBvH,QAAQoH,MAAM,oBAAd,KAAwCJ,GAT5B,QAWdG,GAAW,GAXG,yDAAH,uDCwNAS,OA3Mf,SAAyBtK,GACvB,MAAkCoI,mBAAS,GAA3C,mBAAOmC,EAAP,KAAkBC,EAAlB,KACMC,EAAiB,WACrBD,EAAaD,EAAY,EAAIjF,EAAMoF,OAASH,EAAY,EAAIA,IAExDI,EAAiB,WACrBH,EAAaD,EAAY,GAAK,EAAIA,EAAY,EAAIA,IAGpD,EAAwBnC,mBAAS,MAAjC,mBAAOzI,EAAP,KAAa0I,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAO9C,EAAP,KAAcsF,EAAd,KACMC,EAAcpB,GAAOpE,IAAU,SAACC,GACpCsF,EAAStF,GACT+C,EAAQ/C,EAAMiF,OAEhBjC,qBAAU,WACRuC,EAAYV,YACX,IACH7B,qBAAU,WACRD,EAAQ/C,EAAMiF,MACb,CAACA,IAGJ,MAAkDnC,mBAAS,MAA3D,mBAAO/D,EAAP,KAA0ByG,EAA1B,KACA,EAAgD1C,oBAAS,GAAzD,mBAAO2C,EAAP,KAAyBC,EAAzB,KACMC,EAAmBxB,GAAOjF,IAE1B0G,EAAuBzB,GAAO5E,IAA0B,SAAC0B,GAAD,OAC5DuE,EAAqBvE,MAGjB4E,EAAiB1B,GAAOxD,IAAmB,SAAC1B,GAChD,OAAO6G,EAAkB7G,MAG3B+D,qBAAU,WACJjE,GAAqB1E,GAAMsL,EAAiBd,QAAQ9F,KACvD,CAACA,IACJiE,qBAAU,WACJ3I,GAAQA,EAAKoE,SACfmH,EAAqBf,QAAQxK,EAAKoE,QAClCoH,EAAehB,QAAQxK,EAAKoE,WAE7B,CAACpE,IAEJ,IAAMyL,EAAoB,SAAC7G,GACzB,OAAOA,EAAQ8G,KAAI,SAACjC,GAClB,MAAkCD,GAAiBC,GAA7ChD,EAAN,EAAMA,SAAUmD,EAAhB,EAAgBA,cAIhB,OAHiB,IAAbnD,GAA+B,IAAbA,IACpBA,EAAW,UAAGA,GAA6B,IAAhBkF,KAAKC,SAAiBD,KAAKC,UAEjD,6BAAoBhC,GAAXnD,OAyCdoF,EAAmB,kBACvBP,EAAiBpH,MACjBoH,EAAiBpH,KAAK4H,WACtBR,EAAiBpH,KAAK4H,UAAUf,QAoE5BgB,EAAY,uCAAG,sBAAAhI,EAAA,yDACdW,EADc,yCAEVzB,MAAM,0DAFI,WAIfgG,OAAO+C,QAAQ,kDAJA,0CAMT7G,GAAcT,GANL,OAOfzB,MAAM,uCACNoI,GAAoB,GACpBpC,OAAOC,SAAS+C,QAAO,GATR,kDAWflJ,QAAQC,IAAR,MACAC,MAAM,yDAZS,0DAAH,qDAgBlB,OACE,qBAAKhD,UAAU,gCAAf,SACE,sBAAKA,UAAU,SAAf,UACG4L,IArFoB,kBACzB,qCACE,oBAAI5L,UAAU,cAAd,oCACA,uBACA,oBAAIA,UAAU,WAAd,6BACA,oLAGU,IACR,mBAAGK,KAAK,4DAAR,iCAJF,OASA,8BACG,IADH,yCAEwC,sDAE5B,IAJZ,qDAOA,sBAAKL,UAAU,iCAAf,UACE,wBAAQA,UAAU,OAAOiM,QAASlB,EAAlC,sBAGA,wBAAQ/K,UAAU,OAAOiM,QAASpB,EAAlC,qBAIF,uBACC9K,GACC,qCACE,oBAAIC,UAAU,cAAd,uBACA,8BACE,+CACCD,EAAKoE,UAER,8BACE,4CACCpE,EAAK8I,UAAY,IAAM9I,EAAK+I,YAE/B,8BACE,6CACC/I,EAAKgG,SAER,8BACE,gDACChG,EAAKmM,YAER,0BAGJ,oBAAIlM,UAAU,cAAd,0BACCuL,EAAetH,KAChB,uBACA,oBAAIjE,UAAU,cAAd,8BAjGmB6E,EAkGJwG,EAAiBpH,KAjG7BY,GAAYA,EAAQgH,WAAchH,EAAQgH,UAAUf,OAG1CjG,EAAQgH,UAAUJ,KAAI,YAAkC,IAEjEU,EAFkCC,EAA8B,EAA9BA,eAChCC,EFvEe,SAAC1H,GAC1B,OAAOA,EAAQ2H,MAAK,SAACC,EAAIC,GACvB,OAAID,EAAG3C,OAAS4C,EAAG5C,QAAgB,EAC/B2C,EAAG3C,OAAS4C,EAAG5C,OAAe,EAE9B2C,EAAG9C,WAAa+C,EAAG/C,YAAoB,EACvC8C,EAAG9C,WAAa+C,EAAG/C,WAAmB,EAEnC8C,EAAG7C,YAAc8C,EAAG9C,aAAe,EAAI,KE+DtB+C,CAD8C,EAAd9H,SAOtD,OAJI0H,EAAcvB,SAChBqB,EAAeE,EACZZ,KAAI,SAACiB,GAAD,OAAsB,OAAdA,EAAEC,QAAmBD,EAAEC,QAAU,KAC7CC,QAAO,SAACL,EAAIC,GAAL,OAAYD,EAAKC,IAAI,IAE/B,qCACE,kDAAqBJ,KACpBZ,EAAkBa,GACnB,uBACA,8BACE,qDACCF,KAEH,6BAlBG,SAFW,IAACtH,EA+HKgI,GAzB1B,sBAAK7M,UAAU,cAAf,UACE,yCACA,2FAwBE,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CAAMC,GAAG,iBAAiB6M,SAAO,EAAjC,SACE,wBAAQ9M,UAAU,MAAlB,uCAEC4L,MAAuBP,EAAiBpH,KAAK+D,YAC9C,wBACE+E,SAAU5B,EACVnL,UAAU,kBACVgN,KAAK,SACLf,QAASH,EAJX,qC,aCpMGmB,OAXf,YAA2C,IAApBnM,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SAC5B,OACE,qBAAKhB,UAAU,iCAAf,SACE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,oBAAd,SAAmCc,IAClCE,Q,oBCmBMkM,OAvBf,YAII,IAAD,IAHDC,oBAGC,MAHc,2CAGd,EADE/M,EACF,kBACD,EAAyCgN,eAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAAazK,EAA9B,EAA8BA,OAC9B,GAAIyK,EAAc,GAAMD,IAAYxK,EAAS,OAAO,KAEpD,IAAM7C,EAAYI,EAAMJ,UACpB,sBAAwBI,EAAMJ,UAC9B,qBAMJ,OAJI6C,GAAUA,EAAOqH,QACnBiD,EAAetK,EAAOqH,OAItB,6CAAKlK,UAAWA,GAAeI,GAA/B,aACG+M,M,qFCOQI,OAxBf,YAQI,IAPFC,EAOC,EAPDA,cACAC,EAMC,EANDA,iBACAC,EAKC,EALDA,SACA5M,EAIC,EAJDA,MACAqM,EAGC,EAHDA,aACAnM,EAEC,EAFDA,SACG2M,EACF,kBACD,OACE,cAAC,KAAD,yBACEH,cAAeA,EACfC,iBAAkBA,EAClBC,SAAUA,GACNC,GAJN,aAME,eAAC,GAAD,CAAa7M,MAAOA,EAApB,UACE,cAAC,KAAD,UAAaE,IACb,cAAC,GAAD,CAAWmM,aAAcA,W,YCPlBS,OAZf,YAAyC,IAAnBC,EAAkB,EAAlBA,KAASzN,EAAS,kBAEtC,GAA2B0N,EADFV,eAAjBU,cACgCD,GAAhC3D,EAAR,EAAQA,MAAO6D,EAAf,EAAeA,QACf,OAAK7D,GAAU6D,EAGb,6CAAK/N,UAAU,cAAiBI,GAAhC,aACG8J,KAJ0B,M,uBCsBlB8D,OAxBf,YAAyD,IAApClM,EAAmC,EAAnCA,MAAmC,IAA5BmM,eAA4B,SAAT7N,EAAS,kBACtD,EAAoC8N,aAAS9N,GAA7C,mBAAO+N,EAAP,YAAgBjE,EAAhB,EAAgBA,MAAO6D,EAAvB,EAAuBA,QACvB,IAAKE,EAAS,OAAO,KACrB,IAAMjO,EACJkK,GAAS6D,EAAU,0BAA4B,eAEjD,OACE,qCACE,sBAAK/N,UAAU,aAAf,UACE,uBAAOA,UAAU,aAAaoO,QAAShO,EAAMyN,MAAQzN,EAAMF,GAA3D,SACG4B,IAEH,+CACE9B,UAAWA,EACXqO,eAAcnE,GACViE,GACA/N,OAGR,cAAC,GAAD,CAAYyN,KAAMzN,EAAMyN,W,sCCoBfS,OAvCf,YAAgF,IAA1DxM,EAAyD,EAAzDA,MAAyD,IAAlDyM,oBAAkD,aAA5BN,eAA4B,SAAT7N,EAAS,kBAC7E,EAAoC8N,aAAS9N,GAA7C,mBAAO+N,EAAP,YAAgBjE,EAAhB,EAAgBA,MAAO6D,EAAvB,EAAuBA,QACvB,EAAgCvF,oBAAU+F,GAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,IAAKR,EAAS,OAAO,KACrB,IAAMjO,EACJkK,GAAS6D,IAAY3N,EAAM2M,SACvB,0BACA,eAEN,OACE,qCACE,sBAAK/M,UAAU,aAAf,UACG8B,GAAS,uBAAO9B,UAAU,aAAjB,SAA+B8B,IACzC,sBAAK9B,UAAU,SAAf,UACE,gDACEA,UAAWA,EACXqO,eAAcnE,EACd6C,UAAWyB,GACPL,GACA/N,IAELmO,GACC,wBACEvO,UAAU,WACViM,QAAS,kBAAMwC,GAAaD,IAC5BxB,KAAK,SAHP,2BAWN,cAAC,GAAD,CAAYa,KAAMzN,EAAMyN,W,aCnBfa,OAhBf,YAAuD,IAAD,IAA9B5M,aAA8B,MAAtB,SAAsB,EAAT1B,EAAS,kBAC5CuO,EAAiBvB,eAAjBuB,aACR,OACE,qBAAK3O,UAAU,0BAAf,SACE,gDACE+M,SAAU4B,EACV3O,UAAU,cACVgN,KAAK,UACD5M,GAJN,aAMG0B,Q,aCYM8M,OAtBf,YAA4C,IAApB9M,EAAmB,EAAnBA,MAAU1B,EAAS,kBACzC,EAAsB8N,aAAS,2BAAK9N,GAAN,IAAa4M,KAAM,cAAjD,mBAAOmB,EAAP,KACMU,EADN,KAC4B3E,MACxB,8BACA,oBACE4E,EAAeX,EAAMY,QAAU,uBAAyB,GAC9D,OACE,sBAAK/O,UAAW,cAAgB8O,EAAhC,UACE,uBAAOV,QAAShO,EAAM4O,MAAOhP,UAAU,mBAAvC,SACG8B,IAEH,+CACEkL,KAAK,WACL9M,GAAIE,EAAM4O,MACVhP,UAAW6O,GACPV,GACA/N,Q,aCIG6O,OApBf,YAAyC,IAApBnN,EAAmB,EAAnBA,MAAU1B,EAAS,kBACtC,EAAoC8N,aAAS,2BAAK9N,GAAN,IAAa4M,KAAM,WAA/D,mBAAOmB,EAAP,YAAgBjE,EAAhB,EAAgBA,MAAO6D,EAAvB,EAAuBA,QACjBc,EACJ3E,GAAS6D,EAAU,8BAAgC,oBACrD,OACE,qBAAK/N,UAAU,aAAf,SACE,wBAAOoO,QAAShO,EAAMyN,KAAM7N,UAAU,mBAAtC,UACE,+CACEgN,KAAK,QACLhN,UAAW6O,EACXE,QAASZ,EAAMa,OACXb,GACA/N,IAEL0B,Q,0BCFMoN,OAZf,YAAqD,IAAhCpN,EAA+B,EAA/BA,MAAOqN,EAAwB,EAAxBA,WAAe/O,EAAS,kBAClD,OACE,qCACE,sBAAKJ,UAAU,aAAf,UACG8B,GAAS,uBAAO9B,UAAW,cAAgBmP,EAAlC,SAA+CrN,IACxD1B,EAAMY,YAER,cAAC,GAAD,CAAY6M,KAAMzN,EAAMyN,W,6CCQhBuB,OAff,YAMI,IALFvB,EAKC,EALDA,KACA/L,EAIC,EAJDA,MAIC,IAHDuN,iBAGC,MAHW,MAGX,MAFDC,kBAEC,MAFY,KAEZ,EADElP,EACF,kBACD,OACE,eAAC,GAAD,CAAWyN,KAAMA,EAAM/L,MAAOA,EAA9B,UACE,cAAC,GAAD,aAAWA,MAAOuN,EAAWxB,KAAMA,EAAMmB,MAAO,QAAY5O,IAC5D,cAAC,GAAD,aAAW0B,MAAOwN,EAAYzB,KAAMA,EAAMmB,MAAO,SAAa5O,Q,yECgBrDmP,OA1Bf,YAOI,IANFC,EAMC,EANDA,cACAC,EAKC,EALDA,MAKC,IAJDC,kBAIC,MAJY,KAIZ,MAHDC,oBAGC,MAHc,OAGd,MAFDC,qBAEC,MAFe,KAEf,EADExP,EACF,kBACD,OACE,mCACE,eAAC,GAAD,2BAAgBA,GAAhB,cACGoP,GACC,wBAAQR,MAAM,GAAGjC,UAAQ,EAAzB,SACGyC,IAGJC,EAAMhE,KAAI,SAACoE,GAAD,OACT,wBAA+Bb,MAAOa,EAAKD,GAA3C,SACGC,EAAKF,IADKE,EAAKH,c,SCpBfI,GAAc,aACdC,GAA2B,qBAC3BC,GAAmB,kB,oBC4FjBC,OArFf,YAA6D,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASxL,EAAqB,EAArBA,QAASyL,EAAY,EAAZA,SACxCC,EAAc,WAClBC,EAAkB,IAClBH,KAEF,EAA4C3H,mBAAS,MAArD,mBAAO+H,EAAP,KAAuBD,EAAvB,KACME,EhBmE4B,SAAC7L,GACnC,IAAI8L,EAAY,GAUhB,OARA9L,EAAQ+L,SAAQ,SAAClH,GACf,IAAQI,EAAWJ,EAAXI,OACO,SAAXA,SAEsBa,IAAtBgG,EAAU7G,GAAuB6G,EAAU7G,GAAQ+G,KAAKnH,GACvDiH,EAAU7G,GAAU,CAACJ,OAGrBiH,EgB9EkBG,CAAqBjM,GA4C9C,OACE,mCACE,eAACkM,GAAA,EAAD,CACEC,KAAK,KACLZ,KAAMA,EACNa,OAAQV,EACRW,YAAU,EACVC,gBAAgB,WALlB,UAOE,cAACJ,GAAA,EAAM1H,OAAP,CAAc+H,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,UAZgBZ,EAAiB,UAAY,aAc/C,cAACM,GAAA,EAAMO,KAAP,UArDAb,EACKC,EAAiBD,GAAgB9E,KAAI,SAACjC,GAC3C,MAAoCD,GAAiBC,GAA7ChD,EAAR,EAAQA,SAAUmD,EAAlB,EAAkBA,cAClB,OACE,qCACE,cAAC,GAAD,CACE7H,MAAO6H,EACPkE,KAAMiC,GACNd,MAAOqC,KAAKC,UAAU9K,KAGxB,6BAKD4J,EACJ9D,MAAK,SAACiF,EAAIC,GACT,OAAID,EAAKC,GAAY,EACjBA,EAAKD,EAAW,EAEb,KAGR9F,KAAI,SAAC7B,GACJ,MAAe,SAAXA,EAA0B,KAG5B,qCACE,wBAAqBqC,QAAS,kBAAMqE,EAAkB1G,IAAtD,SACGA,GADUA,GAGb,uBACA,+BAqBJ,eAACiH,GAAA,EAAMlP,OAAP,WACG4O,GACC,cAACkB,GAAA,EAAD,CACEC,QAAQ,YACR1R,UAAU,UACViM,QAAS,kBAAMqE,EAAkB,KAHnC,kBAQF,cAACmB,GAAA,EAAD,CAAQC,QAAQ,YAAYzF,QAASoE,EAArC,mBAGA,cAACoB,GAAA,EAAD,CAAQC,QAAQ,UAAUzF,QAASoE,EAAnC,mCCnFJ/K,GAAc,qBAEPqM,GAAa,uCAAG,8BAAA7N,EAAA,sEACKC,EAAKX,IAAIkC,IADd,uBACbX,EADa,EACnBV,KADmB,kBAEpBU,GAFoB,2CAAH,qDASbiN,GAAW,uCAAG,WAAOpL,GAAP,iBAAA1C,EAAA,sEACQC,EAAKX,IAAL,UAAYkC,GAAZ,cADR,uBACX8K,EADW,EACjBnM,KADiB,kBAElBmM,GAFkB,2CAAH,sDCTlB9K,GAAc,YACduM,GAAY,UAAMvM,GAAN,YAGLwM,IAFO,UAAMxM,GAAN,kBAEI,uCAAG,WAAOuB,GAAP,iBAAA/C,EAAA,yDACpB+C,EADoB,yCACJ,IADI,uBAEQ9C,EAAKX,IAAIkC,GAAa,CACrDlB,OAAQ,CAAEyC,aAHa,uBAEXkL,EAFW,EAEjB9N,KAFiB,kBAKlB8N,GALkB,2CAAH,uDAQXC,GAAiB,uCAAG,WAAOlL,GAAP,iBAAAhD,EAAA,6DAC/BhB,QAAQC,IAAI,wBAAyB+D,GADN,SAEI/C,EAAKX,IAAIyO,GAAc,CACxDzN,OAAQ,CAAE0C,eAHmB,uBAEjBmL,EAFiB,EAEvBhO,KAFuB,kBAKxBgO,GALwB,2CAAH,sDC8KfC,OAlKf,WACE,MAAkC9E,eAA1B+E,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cAEVC,EAAcxI,GAAOyI,IACrBC,EAAa1I,GAAOmI,GAAmBQ,IACvCC,EAAa5I,GAAO8H,IAE1BjJ,qBAAU,WACR2J,EAAY9H,UACZkI,EAAWlI,YACV,IACH7B,qBAAU,WACJyJ,EAAOrL,WAAWyL,EAAWhI,QAAQ4H,EAAOrL,aAC/C,CAACqL,EAAOrL,YAEX,IAqE8B4L,EArExBC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB/E,EAAyB+E,EAAzB/E,KAAMkB,EAAmB6D,EAAnB7D,QAASC,EAAU4D,EAAV5D,MACjB6D,EAAcV,EAAOtE,GAAMpC,KAAI,SAACvL,GAAD,OAAQA,KAEhCkS,EAAcvE,EAAvBkB,EAAsB,uBAAW8D,GAAX,CAAwB7D,IAK9C6D,EAAYC,QAAO,SAACC,GAAD,OAAOA,IAAM/D,OAShCgE,EAAyB,SAACxJ,GAC9B,IAAMyJ,EAAoBd,EAAM,WAAc1G,KAAI,SAACvL,GAAD,OAAQgT,SAAShT,MAE3DiT,EAAe3J,EAAf2J,WAER,OAAKA,EAAWrI,UACXmI,EAAkBG,SAAS5J,EAAOhD,WAEhC2M,EAAWE,MAAK,SAACC,GACtB,OAAOA,EAAOC,OAAM,SAACC,GACnB,OAA0B,IAAtBA,EAAEC,gBACGR,EAAkBG,SAASI,EAAEhN,UACZ,IAAtBgN,EAAEC,iBAA+C,IAAtBD,EAAEC,iBACxBR,EAAkBG,SAASI,EAAEhN,kBAO5C,EAAkCgC,oBAAS,GAA3C,mBAAOkL,EAAP,KAAkBC,EAAlB,KAEMC,EAAkB,SAACC,GACvB,OAAOA,EAAIpI,KAAI,SAACjC,GACd,MAAoCD,GAAiBC,GAA7ChD,EAAR,EAAQA,SAAUmD,EAAlB,EAAkBA,cAClB,OACE,eAAC,EAAD,WACE,cAAC,GAAD,CACE7H,MAAO6H,EACPkE,KAAMiC,GACNd,MAAOqC,KAAKC,UAAU9K,GACtBsN,SAAUnB,KAGVK,EAAuBxJ,IACvB,sBAAKxJ,UAAU,sBAAf,UACE,8CADF,uEATYwG,OAqCtB,OAAK2L,EAAOrL,UAQV,qCACE,wBACEkG,KAAK,SACLf,QA/EmB,WACnBjD,OAAO+C,QAAQ,sDACjBqG,EAActC,GAAa,KA8EzB9P,UAAU,6BAHZ,0BAOA,uBACA,eAAC,GAAD,CACE6N,KAAMiC,GACNhO,MAAM,2FACNqN,WAAW,eAHb,UAKE,mBAAGnP,UAAU,0BAAb,yDAGA,wBArCwB0S,EAsCFH,EAAWtO,KArC9ByO,EAAejH,KAAI,SAACsI,GACzB,OACE,qCACE,6BAAKA,EAAcC,cAVGrP,EAWAoP,EAAcpP,QAVnCA,EAAQ8G,KAAI,SAACoI,GAAD,OACjB,cAAC,EAAD,UAAoCD,EAAgBC,IAA1C,MAAQA,EAAI,GAAGrN,cAUrB,0BAZqB,IAAC7B,MA8CxB,mDAEA,cAAC,GAAD,CACE7C,MAAM,kEACNkL,KAAK,SACLiH,IAAK,EACLpG,KAAMkC,KAUR,cAAC,GAAD,CACEG,KAAMwD,EACNvD,QAAS,kBAAMwD,GAAa,IAC5BvD,SAAUiC,EAAYpO,KACtBU,QAAS8N,EAAWxO,OAEtB,uBACA,uBACA,kDAEA,cAAC,GAAD,CACE4J,KAAMmC,GACNlO,MAAM,gFACNkL,KAAK,SACLiH,IAAK,IAEP,6BA1DF,mBAAGjU,UAAU,cAAb,mEAiEN,SAASwS,GAA8B7N,GACrC,IAAMuP,EnBvIgC,SAACxB,GACvC,IAAMwB,EAAc,GAClBC,EAAgB,GAoBlB,OAnBAzB,EAAehC,SAAQ,SAAClH,GACtB,IAAM4K,EAA6B5K,EAA7B4K,aAAcJ,EAAexK,EAAfwK,WAUpB,GAPEI,IAAiBC,KAAcC,UAC/BF,IAAiBC,KAAcE,kBAE/BH,EAAeC,KAAcG,UAC7BR,EAAa,wBAGqBvJ,IAAhC0J,EAAcC,GAChBD,EAAcC,GAAgBF,EAAYpJ,OAC1CoJ,EAAYvD,KAAK,CAAEqD,aAAYrP,QAAS,CAAC6E,SACpC,CACL,IAAMiL,EAAgBN,EAAcC,GACpCF,EAAYO,GAAZ,QAAsC9D,KAAKnH,OAGxC0K,EmBiHaQ,CAAyB/P,GAY7C,OAXAuP,EAAYxD,SAAQ,SAACiE,GACnBA,EAAShQ,QAAQ2H,MAAK,SAACC,EAAIC,GACzB,OAAID,EAAG3C,OAAS4C,EAAG5C,QAAgB,EAC/B4C,EAAG5C,OAAS2C,EAAG3C,OAAe,EAC3B2C,EAAG9C,WAAa+C,EAAG/C,cAE5BkL,EAAShQ,QnB5Je,SAACA,GAG3B,IAH2D,IAAvBiQ,EAAsB,uDAAN,EAC9CC,EAAiB,GACnBhB,EAAM,GACDiB,EAAI,EAAGA,GAAKnQ,EAAQmG,OAAQgK,IACnCjB,EAAIlD,KAAKhM,EAAQmQ,EAAI,IAEjBA,EAAIF,IAAkB,GAAKE,IAAMnQ,EAAQmG,SAC3C+J,EAAelE,KAAKkD,GACpBA,EAAM,IAGV,OAAOgB,EmBiJcE,CAAaJ,EAAShQ,QAAS,MAEpDuP,EAAY5H,MAAK,SAACC,EAAIC,GAAL,OACfD,EAAGyH,WAAaxH,EAAGwH,YAAc,EAAIzH,EAAGyH,WAAaxH,EAAGwH,cAEnDE,EC5MT,IAAMc,GAAe,SAACC,GACpB,MAAmB,mBAARA,EAA0BA,EAClB,kBAARA,EAAyB,KACH,SAA7BA,EAAIC,cAAcC,QACW,UAA7BF,EAAIC,cAAcC,QACf,MCFIC,GAAQ,uCAAG,8BAAAtR,EAAA,sEACQC,EAAKX,IAHjB,mBAEI,uBACRiS,EADQ,EACdpR,KADc,kBAEfoR,GAFe,2CAAH,qDCHRC,GAAc,cACdC,GAAgB,eAChBC,GAAgB,eAChBC,GAAsB,qBACtBC,GAAiB,gBACjBC,GAAiB,gBACjBC,GAAU,SACVC,GAAoB,kBCMlBhK,GAbG,CAChB,CAAE3L,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,IAAK2N,KAAM,GACjB,CAAE3N,GAAI,KAAM2N,KAAM,KCsGLiI,OAtFf,WACE,MAAkC1I,eAA1B+E,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cAEoB2D,GAAgB5D,EAA5C6D,aAA4C7D,EAA9B8D,aAA8B9D,EAAhB4D,aAQpC,EAA0BvN,mBAAS,IAAnC,mBAAc0N,GAAd,WAKA,OAJAxN,qBAAU,WACR0M,KAAWzM,MAAK,SAAChC,GAAD,OAASuP,EAASvP,QACjC,IAGD,qCACE,cAAC,GAAD,CACEkH,KAAMyH,GACNxT,MAAM,oDACNgS,SAAU,aAhBO,SAAClB,EAAQuD,GAAsC,IAApBC,EAAmB,uDAAN,EAC7DhE,EAAcQ,EAAO/E,KAAM+E,EAAO5D,QACC,IAA/BgG,GAAapC,EAAO5D,QACtBoD,EAAc+D,EAAkBC,GAc5BC,CADwB,EAAbzD,OACY,yBAG3B,cAAC,GAAD,CACE5F,KAAK,SACLa,KAAM4H,GACN3T,MAAM,0DACNmS,IAAK,EACLhG,QAAS+G,GAAae,KAExB,uBA2CA,cAAC,GAAD,CACEjU,MACE,uEAEF+L,KAAMgI,GACNpG,MAAO5D,SCxGTvG,GAAc,oBACPgR,GAAS,uCAAG,WAAOzP,GAAP,iBAAA/C,EAAA,sEACQC,EAAKX,IAAIkC,GAAa,CAAElB,OAAQ,CAAEyC,aAD1C,uBACTX,EADS,EACfjC,KADe,kBAEhBiC,GAFgB,2CAAH,sDCDhBZ,GAAc,oBACPiR,GAAS,uCAAG,8BAAAzS,EAAA,sEACQC,EAAKX,IAAIkC,IADjB,uBACTc,EADS,EACfnC,KADe,kBAEhBmC,GAFgB,2CAAH,qDCiBPoQ,GAfG,WAChB,MAA4BhO,mBAAS,IAArC,mBAAOtC,EAAP,KAAeuQ,EAAf,KACA,EAA4BjO,mBAAS,IAArC,mBAAOpC,EAAP,KAAesQ,EAAf,KAUA,OARAhO,qBAAU,WACR4N,KAAY3N,MAAK,SAACzC,GAChBuQ,ECLsB,SAACvQ,GAAD,OAC1BA,EAAOuF,KAAI,SAACkL,GACV,MAAO,CAAEzW,GAAIyW,EAAE9P,QAASgH,KAAM8I,EAAEC,eDGpBC,CAAa3Q,OAGzBqQ,KAAY5N,MAAK,SAACvC,GAAD,OAAYsQ,ECHL,SAACtQ,GAAD,OAC1BA,EAAOqF,KAAI,SAACkL,GACV,MAAO,CAAEzW,GAAIyW,EAAE1P,QAAS4G,KAAM8I,EAAEG,eDCOC,CAAa3Q,SACnD,IAEI,CAAEF,SAAQE,WEFJ4Q,OAVf,SAAqBnQ,GACnB,MAAgC2B,mBAAS,IAAzC,mBAAOuJ,EAAP,KAAiBkF,EAAjB,KAMA,OALAvO,qBAAU,WACRoJ,GAAYjL,GAAS8B,MAAK,SAACoJ,GACzBkF,EDTwB,SAAClF,GAC7B,OAAOA,EAAStG,KAAI,SAACiB,GACnB,MAAO,CAAExM,GAAIwM,EAAE5F,UAAW+G,KAAMnB,EAAEwK,SCOpBC,CAAepF,SAE5B,CAAClL,IACG,CAAEkL,aCZEqF,GAAW,UACXC,GAAa,YACbC,GAAY,WACZC,GAAkB,gBAClBC,GAAoB,kBACpBC,GAAqB,mBACrBC,GAAc,aACdC,GAAc,aACdC,GAAkB,iBCLlBC,GAAY,uCAAG,8BAAA/T,EAAA,sEACQC,EAAKX,IAHrB,wBAEQ,uBACZ0U,EADY,EAClB7T,KADkB,kBAEnB6T,GAFmB,2CAAH,qDC2IVC,OAtHf,WACE,MAAkCvP,mBAAS,IAA3C,mBAAOsP,EAAP,KAAkBE,EAAlB,KACAtP,qBAAU,WACRmP,KACGlP,MAAK,SAAChC,GAAD,OAASqR,EAAarR,MAC3BsR,OAAM,SAACrV,GAAD,OAASE,QAAQC,IAAI,UAAWH,QACxC,IAEH,MAAkCwK,eAA1B+E,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cACR8F,EAAiC/F,EAAjC+F,WAAYC,EAAqBhG,EAArBgG,iBAEpB,EAA2B3B,KAAnBtQ,EAAR,EAAQA,OACUkS,GADlB,EAAgBhS,OACyB4Q,GAAY7E,EAAOtL,SAApDkL,UAgBR,OAd0CiF,GAAY7E,EAAOkG,eAArDtG,SACRrJ,qBAAU,WACR,IAAI4P,GAAU,EAQd,OANKtD,GAAakD,IAAeI,GAASlG,EAAckF,GAAW,KAE9DtC,GAAamD,IAAqBG,IACrClG,EAAcmF,GAAiB,IAC/BnF,EAAcoF,GAAmB,KAE5B,WACLc,GAAU,KAEX,CAACH,EAAkBD,EAAY9F,IAEhC,qCACE,cAAC,GAAD,CACEtQ,MAAO,iCACP2N,MAAOqI,EACPjK,KAAM8J,GACNnI,cAAc,sBACdE,WAAW,aACXC,aAAa,WACbC,cAAc,eAGhB,cAAC,GAAD,CACE9N,MAAO,qCACP0N,cAAe,wBACfC,MAAO5D,GACPgC,KAAM+J,KAER,mBAAG5X,UAAU,OAAb,8FAIA,uBAEA,cAAC,GAAD,CACE8B,MAAM,sBACN2N,MAAOvJ,EACP2H,KAAMuJ,GACN5H,cAAe,qBACfsE,SAAU,YAAiB,IAAdlB,EAAa,EAAbA,OACXR,EAAciF,GAAY,IAC1BjF,EAAcgF,GAAUxE,EAAO5D,UAInC,uBAEA,cAAC,GAAD,CACElN,MAAO,yDACP+L,KAAMwJ,GACN5H,MAAO2I,EACP5I,cAAe,uBACfvB,QAASkE,EAAOtL,cC/ET0R,GAXK,WAAoB,IAAnBC,EAAkB,uDAAN,EAC/B,EAAwBhQ,mBAASgQ,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAO,WACXD,EAAQD,EAAO,IAEXG,EAAO,WACXF,EAAQD,EAAO,IAEjB,MAAO,CAAEA,OAAME,OAAMC,SCqBRC,I,kBAAAA,GA5Bf,SAAwBzY,GACtB,MAA0CoI,mBAAS,IAAnD,mBAAOsQ,EAAP,KAAmBC,EAAnB,KACA,EAAoDvQ,mBAAS,GAA7D,mBAAOwQ,EAAP,KAA2BC,EAA3B,KAEMC,EAAqB,uCAAG,WAAO/U,GAAP,eAAAL,EAAA,sEACEI,GAAmBC,GADrB,WACtBgV,EADsB,QAEPrO,OAFO,iDAI5BmO,EAAsBE,EAAgB,GAAGH,oBAJb,2CAAH,sDAOrBI,EAAa,uCAAG,WAAOjV,GAAP,iBAAAL,EAAA,sEACSuC,GAAkBlC,GAD3B,OACdmC,EADc,OAEdwS,EAAaxS,EAAemF,KAAI,SAACiB,GAAD,OAAO2E,KAAKC,UAAU5E,EAAElG,aAC9DuS,EAAoBD,GAHA,2CAAH,sDAcnB,OARApQ,qBAAU,WACR,IAAM3I,EAAO4H,KACT5H,IACFqZ,EAAcrZ,EAAKoE,QACnB+U,EAAsBnZ,EAAKoE,WAE5B,IAEI,CAAE2U,aAAYE,uBCsBRK,GAhDU,WACvB,MAAoC7Q,mBAAS,CAC3C3B,QAAS,GACTC,UAAW,KAFb,mBAAOwS,EAAP,KAAmBC,EAAnB,KAIA,EAAsC/Q,mBAAS,CAC7C6P,cAAe,GACfmB,gBAAiB,GACjBrB,iBAAkB,UAHpB,mBAAOsB,EAAP,KAAoBC,EAApB,KAKA,EAA4BlR,mBAAS,CAAEmR,SAAU,GAAIzB,WAAY,UAAjE,mBAAO9R,EAAP,KAAesQ,EAAf,KAEMkD,EAAoB,uCAAG,WAAOzV,GAAP,eAAAL,EAAA,sEACNmC,GAAiB9B,GADX,QACrB+B,EADqB,SAEbA,EAAO4E,QACnByO,EAAc,CACZ1S,QAASX,EAAO,GAAGW,QACnBC,UAAWZ,EAAO,GAAGY,YAErBZ,GAAUA,EAAO4E,OAAS,GAC5B4O,EAAe,CACbrB,cAAenS,EAAO,GAAGW,QACzB2S,gBAAiBtT,EAAO,GAAGY,UAC3BqR,iBAAkB,SAXK,2CAAH,sDAcpB0B,EAAmB,uCAAG,WAAO1V,GAAP,mBAAAL,EAAA,sEACLqC,GAAiBhC,GADZ,OACpBiC,EADoB,OAEpBuT,EAAWvT,EAAOqF,KAAI,SAACkL,GAAD,OAAOA,EAAE1P,WAC/BiR,EAAayB,EAAS7O,OAAS,OAAS,QAC9C4L,EAAU,CAAEiD,WAAUzB,eAJI,2CAAH,sDAOnBnY,EAAOuI,KAQb,OAPAI,qBAAU,WACJ3I,IACF6Z,EAAqB7Z,EAAKoE,QAC1B0V,EAAoB9Z,EAAKoE,WAE1B,CAACpE,IAEG,uCACFuZ,GACAG,GACArT,IC1CM0T,GAAkB,SAC7B3V,EACA4V,EACAjT,EACAkT,GAEI,IADJC,EACG,uDADU,KAEbnX,QAAQC,IAAI,OAAQoB,EAAQ4V,EAAYE,IACnCA,GAAcF,EACjB5S,GAAYP,gBAAgBzC,EAAQ4V,EAAYjT,IAEhDmT,GACCF,IAAeE,GAAcD,IAAiBlT,IAE/CK,GAAYJ,mBAAmB5C,EAAQ8V,GACvC9S,GAAYP,gBAAgBzC,EAAQ4V,EAAYjT,KAIvCoT,GAAmB,SAC9B/V,EACAgW,GAEI,IADJC,EACG,uDADW,GAERC,EAAcF,EAAiBrH,QACnC,SAAC5S,GAAD,OAAqC,IAA7Bka,EAAYE,QAAQpa,MAExBqa,EAAiBH,EAAYtH,QACjC,SAAC5S,GAAD,OAA0C,IAAlCia,EAAiBG,QAAQpa,MAEnCma,EAAY3J,SAAQ,SAACxQ,GAAD,OAAQiH,GAAYH,gBAAgB7C,EAAQjE,MAChEqa,EAAe7J,SAAQ,SAACxQ,GAAD,OAAQiH,GAAYD,mBAAmB/C,EAAQjE,OAG3Dsa,GAAuB,SAClCrW,EACA0O,GAEI,IADJ4H,EACG,uDADiB,GAEdC,EAAS7H,EAAYC,QACzB,SAAC5S,GAAD,OAA2C,IAAnCua,EAAkBH,QAAQpa,MAE9Bya,EAAaF,EAAkB3H,QACnC,SAAC5S,GAAD,OAAqC,IAA7B2S,EAAYyH,QAAQpa,MAE9Bwa,EAAOhK,SAAQ,SAACxQ,GAAD,OAAQiH,GAAYZ,iBAAiBpC,EAAQjE,MAC5Dya,EAAWjK,SAAQ,SAACxQ,GAAD,OAAQiH,GAAYV,oBAAoBtC,EAAQjE,O,gBCvC/D0a,GAAmB,yBAGVC,SAAA,sBACZzD,GAAWyD,OAAaC,SAASF,KADrB,gBAGZvD,GAAawD,OAAaC,SAASF,KAHvB,gBAIZlD,GAAcmD,OAAcC,SAASF,KAJzB,gBAKZtD,GAAYuD,OAAYC,YALZ,gBAMZrD,GAAqBoD,OAAcC,SAASF,KANhC,gBAOZrD,GAAkBsD,OAChBE,cACAC,KAAKvD,GAAoB,CACxBwD,IAAI,EACJtS,KAAMkS,OACHC,SAASF,IACTM,SAAS,CAACL,KAAQzD,IAAW,MAfV,sCAEb,gBAeZI,GAAoBqD,OAClBE,cACAC,KAAKvD,GAAoB,CACxBwD,IAAI,EACJtS,KAAMkS,OAAaC,SAASF,OAnBnB,gBAqBZjD,GAAckD,OAAaC,SAASF,KArBxB,gBAsBZhD,GAAkBiD,OAAaC,SAASF,KAtB5B,KCJTA,GAAmB,yBAKVC,SAAA,sBACZvF,GAAcuF,OAAcC,SAASF,KADzB,gBAEZnF,GAAsBoF,OAAaG,KAAK1F,GAAa,CACpD2F,IAAI,EACJtS,KAAMkS,OACH5G,IAAI,GACJ6G,SAASF,IACT9Y,MAX2B,0BAInB,gBASZyT,GAAgBsF,OAAcC,SAASF,KAT3B,gBAUZjF,GAAiBkF,OAAaG,KAAKxF,GAAe,CACjDyF,IAAI,EACJtS,KAAMkS,OACHC,SAASF,IACT3G,IAAI,GACJkH,IAAI,GACJrZ,MAlBsB,wBAEd,gBAkBZ0T,GAAgBqF,OAAcC,SAASF,KAlB3B,gBAmBZlF,GAAiBmF,OACf5G,IAAI,GACJkH,IAAI,GACJH,KAAKzF,GAAe,CACnB0F,IAAI,EACJtS,KAAMkS,OACHC,SAASF,IACT3G,IAAI,GACJkH,IAAI,GACJrZ,MA/BoB,wBAGd,gBA8BZ8T,GAAUiF,OAAaC,SAASF,KA9BpB,gBA+BZ/E,GAAoBgF,OAAaC,SAASF,IAAkB3G,IAAI,IA/BpD,KCVT2G,GAAmB,yBAIVC,SAAA,sBACZ/K,GAAc+K,OAAYC,SAASF,KADvB,gBAGZ7K,GAA2B8K,OACzBO,UACAnH,IAAI,GACJ6G,SAASF,IACT9Y,MAV0B,gCAGhB,gBASZkO,GAAmB6K,OAAaO,UAAUnH,IAAI,GAAGnS,MAAM,eAT3C,KCLA+Y,QAAW,IACvBQ,OAAOC,IACPD,OAAOE,IACPF,OAAOG,ICeKC,IAZS,sBACrBrE,GAAW,IADU,gBAErBC,GAAa,IAFQ,gBAGrBI,GAAqB,IAHA,gBAIrBF,GAAkB,IAJG,gBAKrBC,GAAoB,IALC,gBAMrBE,GAAc,IANO,gBAOrBJ,GAAY,IAPS,gBAQrBK,GAAc,IARO,gBASrBC,GAAkB,IATG,ICUT8D,IAXe,sBAC3BpG,GAAc,SADa,gBAE3BC,GAAgB,SAFW,gBAG3BC,GAAgB,SAHW,gBAI3BC,GAAsB,GAJK,gBAK3BC,GAAiB,GALU,gBAM3BC,GAAiB,GANU,gBAO3BC,GAAU,KAPiB,gBAQ3BC,GAAoB,KARO,ICCf8F,IANW,sBACvB7L,GAAc,IADS,gBAEvBC,GAA2B,GAFJ,gBAGvBC,GAAmB,GAHI,ICEX4L,GALY,uCACtBH,IACAC,IACAC,ICUUE,OAdf,SAAoBzb,GAClB,OACE,sBAAKJ,UAAU,kBAAf,UACE,oBAAGA,UAAU,KAAb,sGAEyB,iDAFzB,mGAMA,2BC6IS8b,I,MAAAA,GA3Hf,SAAsB1b,GACpB,MAA6BmY,GAAY,GAAjCE,EAAR,EAAQA,KAAMG,EAAd,EAAcA,KAAMD,EAApB,EAAoBA,KACdoD,EAAgB1C,KAEhB2C,EAAkBnD,KACxB,EAA+BvQ,IAAQ,GAA/BnE,EAAR,EAAQA,OAAQ8X,EAAhB,EAAgBA,WACVzO,EAAa,mDACd0O,IACAH,GACAC,GAHc,IAIjBC,WAA2B,OAAfA,EAAsB,GAAKA,EACvC7P,eAAgB,IAGZ+P,EAAY,uCAAG,WAAOhK,EAAP,kCAAArO,EAAA,yDAAiBsY,EAAjB,EAAiBA,eAGhCpT,OAAO+C,QAAQ,oCAHA,iCAMHqO,EAKR2B,EALFpC,SACSM,EAIP8B,EAJFlV,QACewV,EAGbN,EAHF1D,cACW2B,EAET+B,EAFFjV,UACiBwV,EACfP,EADFvC,gBAEMyC,EAAe9J,EAAf8J,WAER9U,GAAYG,OAAOnD,EAAQ,CAAE8X,eAC7BzB,GACErW,EACAgO,EAAO2G,WACPkD,EAAgBlD,YAElBgB,GACE3V,EACAgO,EAAOtL,QACPsL,EAAOrL,UACPkT,EACAC,GAEFH,GACE3V,EACAgO,EAAOkG,cACPlG,EAAOqH,gBACP8C,EACAD,GAGFnC,GAAiB/V,EAAQgO,EAAOwH,SAAUS,GAnC3B,UAqCqBjV,GAAgBd,mBAAhB,2BAC/B8N,GAD+B,IAElChO,YAvCa,wBAqCPM,EArCO,EAqCPA,kBArCO,UAyCTU,GAAgBX,aAAaC,GAzCpB,QA0CfU,GAAgBL,oBAAoBL,GA1CrB,kDA4Cf3B,QAAQC,IAAI,wBAAZ,MA5Ce,QA+CjB3C,EAAMmc,QAAQzP,QAAQ,qBA/CL,QAkDnBsP,GAAc,GAlDK,0DAAH,wDAkFlB,OACE,eAAC,GAAD,CACE5O,cAAeA,EACfC,iBAAkBA,GAClB3M,MAlBiB,WACnB,OAAQ2X,GACN,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,aACT,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,mBACT,QACE,MAAO,YAOF+D,GACP9O,SAAUyO,EACVM,oBAAoB,EALtB,UA9BmB,WACnB,OAAQhE,GACN,KAAK,EACH,OAAO,cAAC,GAAD,IACT,KAAK,EACH,OAAO,cAAC,GAAD,IACT,KAAK,EACH,OAAO,cAAC,GAAD,IACT,KAAK,EACH,OAAO,cAAC,GAAD,IAET,QACE,OAAO,MAyBRiE,GAED,sBAAK1c,UAAU,kCAAf,UACGyY,EAAO,GACN,wBAAQzY,UAAU,WAAWiM,QAAS2M,EAAM5L,KAAK,SAAjD,kBAIDyL,EAAO,GACN,wBAAQzY,UAAU,mBAAmBiM,QAAS0M,EAAM3L,KAAK,SAAzD,kBAIQ,IAATyL,GAAc,cAAC,GAAD,CAAc3W,MAAM,yBC5H5B6a,GAVQ,kBACrB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAMld,EAAqBmd,OAAK,EAACC,UAAWxT,KACnD,cAAC,IAAD,CAAOsT,KAAMhd,EAAwBkd,UAAWpS,KAChD,cAAC,IAAD,CAAOkS,KAAMjd,EAAqBmd,UAAWhB,S,qBChBpCiB,GAAW,WACXC,GAAkB,iBCMhBC,IALiB,sBAC7BF,GAAW,IADkB,gBAE7BC,GAAkB,IAFW,ICC1BpC,GAAmB,yBAGnBsC,GAAkB,wCADI,EACJ,oBAiBTC,GAXatC,MAAA,sBACzBkC,GAAWlC,OACT5G,IATuB,EASEiJ,IACzBE,QAAQ,QANmB,iCAO3BA,QAAQ,WATsB,8CAU9BA,QAAQ,KATsB,0CAU9BtC,SAASF,KANc,gBAOzBoC,GAAkBnC,OAChBC,SAASF,IACTyC,MAAM,CAACxC,KAAQkC,IAAW,MAXL,0BAEE,KCkEbO,OAnEf,SAAuBld,GACrB,IAAMmd,EACK,UADLA,EAEG,QAFHA,EAGQ,aAGd,EAA0B/U,qBAA1B,mBAAOhD,EAAP,KAAcgY,EAAd,KACA,EAAsChV,mBAAS+U,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEQzU,EAAsB7I,EAAtB6I,SAAUsT,EAAYnc,EAAZmc,QAClB7T,qBAAU,WACR,IAAeiV,EAAeC,KAAYC,MAAM5U,EAAS6U,QAAjDtY,MACR+W,EAAQzP,QAAQ7D,EAAS8U,UACzBpY,GAAmBgY,GAChBhV,MAAK,WACJ6U,EAASG,GACTD,EAAeH,MAEhBtF,OAAM,SAACrV,GACNE,QAAQC,IAAIH,EAAIF,UAChBgb,EAAeH,QAGlB,IAEH,IAAMpB,EAAY,uCAAG,+BAAArY,EAAA,6DAAS+B,EAAT,EAASA,SAAT,kBAECD,GAAcJ,EAAOK,GAFtB,OAEXc,EAFW,OAGjB7D,QAAQC,IAAI4D,EAAI1C,MAChBjB,MAAM,oEACNgG,OAAOC,SAAS,UALC,kDAOjBnG,QAAQC,IAAR,MAPiB,0DAAH,sDAsClB,OAXgB,WACd,OAAQ0a,GACN,KAAKF,EACH,OAnBJ,eAAC,GAAD,CACE/P,cAAeyP,GACfnc,MAAM,iBACN2M,iBAAkB0P,GAClBzP,SAAUyO,EAJZ,UAME,cAAC,GAAD,CAAWtO,KAAMkP,GAAU/P,KAAK,WAAWlL,MAAM,iBACjD,cAAC,GAAD,CACE+L,KAAMmP,GACNhQ,KAAK,WACLlL,MAAM,oBAER,cAAC,GAAD,OAQA,KAAKyb,EACH,OAAO,cAAC,IAAD,CAAUtd,GAAI,CAAE8d,SAAU,OACnC,QACE,OAAO,8DAINC,ICpCMC,I,MAAAA,GAlCf,SAAwB7d,GACtB,IAGMqN,EAAmBoN,KAAW,CAClC9U,MAAO8U,OAAa9U,MAAM,iBAAiB+U,SAAS,cAGhDqB,EAAY,uCAAG,qCAAArY,EAAA,6DAASiC,EAAT,EAASA,MAAWmY,EAApB,EAAoBA,UAApB,kBAECpY,GAAeC,GAFhB,OAEXY,EAFW,OAIjB3D,MAAM2D,EAAI1C,KAAKka,SAJE,iDAMTzb,EANS,KAMTA,WACQA,EAASuB,MAAQvB,EAASuB,KAAKiG,MAC7CgU,EAAU,CAAEhU,MAAOxH,EAASuB,KAAKiG,QAC9BgU,EAAU,CAAEhU,MAAO,+BATP,yDAAH,wDAalB,OACE,eAAC,GAAD,CACEsD,cAtBiB,CACnBzH,MAAO,IAsBL0H,iBAAkBA,EAClB3M,MAAM,iBACN4M,SAAUyO,EAJZ,UAME,cAAC,GAAD,CAAWnP,KAAK,QAAQa,KAAK,QAAQ/L,MAAM,cAC3C,cAAC,GAAD,QClCOsc,GAAQ,QACRrB,GAAW,WCMTsB,IALS,sBACrBD,GAAQ,IADa,gBAErBrB,GAAW,IAFU,ICClBnC,GAAmB,yBAaV0D,GAPKzD,MAAA,sBACjBuD,GAAQvD,OACN9U,MANwB,wBAOxB+U,SAASF,IACTwC,QAPgB,oBACE,+BAEH,gBAKjBL,GAAWlC,OAAaC,SAASF,KALhB,K,6BCqEL2D,I,MAAAA,GA9Df,SAAmBne,GACjB,IAAMsN,EAAQ,uCAAG,WAAOyE,EAAP,oBAAArO,EAAA,+DAAiB0a,UAAWN,EAA5B,EAA4BA,UAA5B,oCAIP/V,GAAKP,MAAMuK,GAJJ,OAKbnJ,OAAOC,SAAW,IALL,gDAOLvG,EAPK,KAOLA,SACWA,EAAXG,OAKRqb,EAAU,CAAEhU,MAAOxH,EAASuB,KAAKiG,QAbpB,yDAAH,wDAgBd,OACE,qBAAKlK,UAAU,SAAf,SACE,eAAC,GAAD,CACEc,MAAM,QACN0M,cAAe0O,GACfzO,iBAAkBA,GAClBC,SAAUA,EAJZ,UAME,cAAC,GAAD,CACE5L,MAAM,YACN+L,KAAMuQ,GACNpR,KAAK,QACLyR,gBAAc,SAGhB,cAAC,GAAD,CACE3c,MAAM,WACN+L,KAAMkP,GACN/P,KAAK,WACLyR,gBAAc,SAEhB,sBAAKze,UAAU,kCAAf,UACE,cAAC,IAAD,CAAMC,GAAIR,EAAV,8BACA,0CAEE,cAAC,IAAD,CAAMQ,GAAIX,EAAV,4BAGJ,8BACE,4BACE,cAAC,IAAD,CAAMW,GAAIT,EAAV,6CAGJ,cAAC,GAAD,CAAcsC,MAAM,gBClEf4c,GAAa,YACbC,GAAY,WACZP,GAAQ,QACRQ,GAAU,SACV7B,GAAW,WACXC,GAAkB,iBCgDhB6B,GA1CK,WAClB,OACE,qCACE,sBAAK7e,UAAU,SAAf,UACE,8BACE,cAAC,GAAD,CACE8B,MAAM,aACN+L,KAAM6Q,GACND,gBAAc,WAGlB,qBAAKze,UAAU,OAAf,SACE,cAAC,GAAD,CAAW8B,MAAM,YAAY+L,KAAM8Q,GAAWF,gBAAc,cAGhE,cAAC,GAAD,CACE3c,MAAM,YACN+L,KAAMuQ,GACNpR,KAAK,QACLyR,gBAAc,SAEhB,cAAC,GAAD,CACE3c,MAAM,SACN+L,KAAM+Q,GACN5R,KAAK,SACLyR,gBAAc,SAEhB,cAAC,GAAD,CACE3c,MAAM,WACN+L,KAAMkP,GACN/P,KAAK,WACLyR,gBAAc,SAEhB,cAAC,GAAD,CACE3c,MAAM,mBACN+L,KAAMmP,GACNhQ,KAAK,iBCtCP4N,GAAmB,yBAGnBkE,GAAc,iBACdC,GAAa,gCAFK,GAEL,qBACbC,GACJ,kEAaI9B,GAAkB,wCADI,EACJ,oBAMTrC,SAAA,sBACZ6D,GAAa7D,OACXuC,QAAQ0B,GAAaE,IACrB7D,IA1BmB,GA0BE4D,IACrBjE,SAASF,KAJC,gBAKZ+D,GAAY9D,OACVuC,QAAQ0B,GAAaE,IACrB7D,IA9BmB,GA8BE4D,IACrBjE,SAASF,KARC,gBASZwD,GAAQvD,OACN9U,MArBwB,wBAsBxB+U,SAASF,IACTwC,QAtBgB,qBACE,+BASR,gBAcZwB,GAAU/D,OACRO,UACA6D,WAGAnE,SAASF,KAnBC,gBAqBZmC,GAAWlC,OACT5G,IA7BuB,EA6BEiJ,IACzBE,QAAQ,QA1BmB,iCA2B3BA,QAAQ,WA7BsB,8CA8B9BA,QAAQ,KA7BsB,0CA8B9BtC,SAASF,KA1BC,gBA2BZoC,GAAkBnC,OAChBC,SAASF,IACTyC,MAAM,CAACxC,KAAQkC,IAAW,MA/BL,0BAEX,KC/BAlC,QAAW,IAAIQ,OAAO6D,ICetBC,IATQ,sBACpBT,GAAa,IADO,gBAEpBC,GAAY,IAFQ,gBAGpBP,GAAQ,IAHY,gBAIpBQ,GAAU,IAJU,gBAKpB7B,GAAW,IALS,gBAMpBC,GAAkB,IANE,ICJRoC,GAHU,eACpBD,ICwEUE,GAzDI,SAACjf,GAClB,IAAMsN,EAAQ,uCAAG,WAAOyE,EAAP,wBAAArO,EAAA,6DAAiBoa,EAAjB,EAAiBA,UAAjB,SAEbpb,QAAQC,IAAR,qBAAkCoP,GAFrB,SAGPhL,GAAYC,SAAS+K,GAHd,OAIbnP,MACE,sEAEF5C,EAAMmc,QAAQ5L,KAAK,CACjBoN,SAAUve,EACV8f,MAAO,CACLvZ,MAAOoM,EAAOpM,SAVL,iDAcLrD,EAdK,KAcLA,YAEEG,EAAiBH,EAAjBG,OAAQoB,EAASvB,EAATuB,KAEZpB,GAAUA,GAAU,KAAOA,EAAS,KACtCqb,EAAU,CAAEhU,MAAOjG,EAAKiG,QAG1BpH,QAAQC,IAAIL,EAASuB,OAEvBnB,QAAQC,IAAIL,GAxBC,yDAAH,wDA4Bd,OACE,mCACE,eAAC,GAAD,CACE+K,iBAAkBA,GAClBC,SAAUA,EACVF,cAAe0O,GACfpb,MAAO,UAJT,UAME,cAAC,GAAD,IACA,cAAC,GAAD,CAAcgB,MAAM,YAGpB,qBAAK9B,UAAU,4BAAf,SACE,oBAAGA,UAAU,WAAb,6BACkB,cAAC,IAAD,CAAMC,GAAIZ,EAAV,8BC7Df+e,GAAQ,QCMNmB,GAJe,gBAC3BnB,GAAQ,ICYIoB,GANW3E,KAAA,gBACvBuD,GAAQvD,OACN9U,MANwB,wBAOxB+U,SAToB,0BAUpBsC,QAPgB,oBACE,gCCQjBqC,GAAQ,qBA6ECC,OA3Ef,SAAqBtf,GACnB,MAAgCoI,oBAAS,GAAzC,mBAAOmX,EAAP,KAAiBC,EAAjB,KAGA,GADazX,GAAKR,iBACR,OAAO,cAAC,IAAD,CAAU1H,GAAI,CAAE8d,SrErBT,OqEuBxB,IAAQuB,EAAUlf,EAAMmc,QAAQtT,SAAxBqW,MACJA,GAASA,EAAMvZ,QAAOwZ,GAAyBxZ,MAAQuZ,EAAMvZ,OAEjE,IAAMoW,EAAY,uCAAG,uCAAArY,EAAA,6DAASiC,EAAT,EAASA,MAAWmY,EAApB,EAAoBA,UAApB,kBAEClY,GAAmBD,GAFpB,cAIjB/C,MAAM,2BAJW,gDAMTN,EANS,KAMTA,SACAuB,EAAiBvB,EAAjBuB,KAAMpB,EAAWH,EAAXG,OACVH,GAAYG,GAAUA,GAAU,KAAOA,EAAS,KAClDqb,EAAU,CAAEhU,MAAOjG,EAAKiG,QATT,yDAAH,wDAaZ2V,EAAa,kBACjB,qCACE,oFACA,oBAAG7f,UAAU,OAAb,iDACuC,IACrC,mBAAGK,KAAMhB,EAAT,wBAFF,WA2BJ,OACE,sCACIsgB,GACA,sBAAK3f,UAAU,mBAAf,UACE,oBAAIA,UAAU,oBAAd,SAAmCyf,KAClCI,IACD,kDAEE,wBACE7S,KAAK,SACLhN,UAAU,kBACViM,QAAS,kBAAM2T,GAAY,IAH7B,0BA3BHD,EAEH,eAAC,GAAD,CACE7e,MAAO2e,GACPjS,cAAe+R,GACf9R,iBAAkB+R,GAClB9R,SAAUyO,EAJZ,UAMG0D,IACD,cAAC,GAAD,CACE/d,MAAM,QACN+L,KAAMuQ,GACN0B,YAAY,uBAEd,cAAC,GAAD,OAdkB,SCNXC,OAxBf,YAAqC,IAAZxD,EAAW,EAAXA,QAKvB,OAJA7T,qBAAU,WACJP,GAAKR,kBAAkB4U,EAAQ5L,KAAK,OACvC,CAAC4L,IAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAMnd,EAAuBqd,UAAWmB,KAC/C,cAAC,IAAD,CAAOrB,KAAMrd,EAAsBud,UAAWQ,KAC9C,cAAC,IAAD,CAAOV,KAAMpd,EAAoBsd,UAAW4C,KAC5C,cAAC,IAAD,CAAO9C,KAAMvd,EAAayd,UAAWyB,KACrC,cAAC,IAAD,CAAO3B,KAAMtd,EAAewd,UAAWuC,KACvC,cAAC,IAAD,CAAUpf,GAAI,CAAE8d,SAAU,CAAE1U,2B,0BCdnB2W,OAff,YAAoE,IAA/BC,EAA8B,EAAzCnD,UAAsBoD,EAAmB,EAAnBA,OAAWvS,EAAQ,kBAC3D5N,EAAOoI,GAAKR,iBAElB,OACE,cAAC,IAAD,2BACMgG,GADN,IAEEuS,OAAQ,SAAC9f,GACP,OAAKL,EAEEkgB,EAAY,cAACA,EAAD,eAAe7f,IAAY8f,EAAO9f,GAFnC,cAAC,IAAD,CAAUH,GAAI,CAAE8d,SAAU,iBC0DrCoC,OA3Cf,WACE,IAAMpgB,EAAOuI,KAEb,OACE,cAAC,IAAD,UACE,sBAAKtI,UAAU,iBAAf,UACE,cAAC,GAAD,CAAQD,KAAMA,IAEd,eAAC,IAAD,WACE,cAAC,IAAD,CACE6c,KxEnCc,IwEoCdC,OAAK,EACLqD,OAAQ,SAAC9f,GAAD,OAAW,cAAC,EAAD,2BAAUA,GAAV,IAAiBL,KAAMA,QAE5C,cAAC,IAAD,UACE,sBAAMC,UAAU,4BAAhB,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CACE4c,KAAMld,EACNod,UAAWH,KAEb,cAAC,IAAD,CAAOC,KAAMxd,EAAe0d,UAAWiD,KAEvC,cAAC,GAAD,CAAgBnD,K3EhDH,M2EgDwBE,UAAWlU,KAChD,cAAC,IAAD,CAAOgU,KAAM1T,GAAc4T,UAAW/T,KAEtC,cAAC,IAAD,CAAO6T,KxEjDS,cwEiDeE,UAAW3c,IAC1C,cAAC,IAAD,CAAOyc,KxEnDO,YwEmDeE,UAAWxb,IAExC,cAAC,IAAD,CAAOub,OAAK,EAACD,KAAMvT,GAAiByT,UAAW1T,KAC/C,cAAC,IAAD,CAAUnJ,GAAI,CAAE8d,SAAU,CAAE1U,8BAIlC,cAAC,IAAD,CAAOuT,KAAMvT,GAAiByT,UAAW1T,QAG3C,cAAC,EAAD,UClDOgX,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3X,MAAK,YAAkD,IAA/C4X,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e92a0fc3.chunk.js","sourcesContent":["export const ADVISILY = \"Advisilyy\";\n","export const ACCOUNT_ROUTE = \"/account\";\n\nexport const LOGIN_ROUTE = `${ACCOUNT_ROUTE}/login`;\nexport const SIGN_UP_ROUTE = `${ACCOUNT_ROUTE}/sign-up`;\nexport const RESET_PASSWORD_ROUTE = `${ACCOUNT_ROUTE}/reset-password`;\nexport const VERIFY_EMAIL_ROUTE = `${ACCOUNT_ROUTE}/verify-email`;\nexport const FORGOT_PASSWORD_ROUTE = `${ACCOUNT_ROUTE}/forgot-password`;\n","export const ADVISING_HOME_ROUTE = \"/advising\";\nexport const ADVISING_FORM_ROUTE = `${ADVISING_HOME_ROUTE}/form`;\nexport const ADVISING_RESULTS_ROUTE = `${ADVISING_HOME_ROUTE}/results`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ADVISILY } from \"../constant/websiteName\";\nimport { SIGN_UP_ROUTE } from \"../account/routes\";\nimport { ADVISING_HOME_ROUTE } from \"../advising/routes\";\n\nfunction Home({ user }) {\n  const redirectTo = user ? ADVISING_HOME_ROUTE : SIGN_UP_ROUTE;\n  return (\n    <div className=\"text-center home-container\">\n      <h1> Your new academic advisor is here!</h1>\n      <p className=\"home-text font-italic my-4\">\n        {ADVISILY} is an automated advisor to help you choose your courses.\n      </p>\n      <div className=\"home-buttons d-flex justify-content-center\">\n        {/* <Link to=\"/login\">\n          <button id=\"home-login-btn\" className=\"btn  mx-2\">\n            Login\n          </button>\n        </Link> */}\n        <Link to={redirectTo}>\n          <button id=\"home-signup-btn\" className=\"btn nav-btn \">\n            Get Started!\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction ContactUs(props) {\n  return (\n    <div className=\" text-center p-5\">\n      <h1>Contact Us</h1>\n      <p>\n        For inquiries or issues, contact us at{\" \"}\n        <a href=\"youssefagiza@aucegypt.edu\">youssefagiza@aucegypt.edu </a>\n      </p>\n      <p>\n        For bugs and technical issues, please open an issue request on our{\" \"}\n        <a href=\"https://github.com/Youssef-Agiza/AutomatedAdvisingSystem\">\n          github repository.\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default ContactUs;\n","export default __webpack_public_path__ + \"static/media/youssef.42266403.jpg\";","export default __webpack_public_path__ + \"static/media/sherif.bd1c984d.jpg\";","import React from \"react\";\n\nfunction RoundedPicture({ radius, alt, ...props }) {\n  const imageStyles = radius ? { width: radius, height: radius } : {};\n  return (\n    <div className=\"card-image-rounded\">\n      <img {...props} style={imageStyles} alt={alt} />;\n    </div>\n  );\n}\n\nexport default RoundedPicture;\n","import React from \"react\";\n\nfunction CardBody({ title, subtitle, children }) {\n  return (\n    <div className=\"card-body\">\n      <h4 className=\"card-title\"> {title}</h4>\n      <h6 className=\"card-subtitle mb-2 text-muted\">{subtitle}</h6>\n      <p className=\"card-text\">{children}</p>\n    </div>\n  );\n}\n\nexport default CardBody;\n","import React from \"react\";\n\nfunction Card({ children, ...props }) {\n  return (\n    <div className=\"card \" {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Row({ children, className, ...props }) {\n  if (!className) className = \"\";\n  return (\n    <div className={\"row \" + className} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction ColSmall({ numOfCols, children, className, ...props }) {\n  numOfCols =\n    !numOfCols || numOfCols > 12 || numOfCols < 0 ? \"\" : \"-\" + numOfCols;\n\n  className = className + \" col-sm\" + numOfCols;\n  return (\n    <div className={className} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default ColSmall;\n","import React from \"react\";\n\nfunction ColMedium({ numOfCols, children, className = \"\", ...props }) {\n  numOfCols =\n    !numOfCols || numOfCols > 12 || numOfCols < 0 ? \"\" : \"-\" + numOfCols;\n\n  className = className + \" col-md\" + numOfCols;\n\n  return (\n    <div className={className} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport default ColMedium;\n","import React from \"react\";\n\nimport youssefPic from \"../assets/pictures/youssef.jpg\";\nimport sherifPic from \"../assets/pictures/sherif.jpg\";\n\nimport RoundedPicture from \"../components/RoundedPicture\";\nimport CardBody from \"../components/card/CardBody\";\nimport Card from \"../components/card/Card\";\nimport { Row, ColMedium } from \"../components/grid\";\nfunction AboutUs(props) {\n  return (\n    <div className=\"text-center\">\n      <div>\n        <h1>About</h1>\n      </div>\n      <Row className=\"d-flex justify-content-center\">\n        <ColMedium numOfCols=\"6\" className=\"d-flex justify-content-center\">\n          <Card>\n            <RoundedPicture src={sherifPic} alt=\"Sherif Aly\" />\n            <CardBody\n              title=\"Sherif Aly\"\n              subtitle=\"Professor and Chair (American University in Cairo)\"\n            >\n              Professor Sherif Aly is a professor and Chair of the Department of\n              Computer Science, with significant industrial and governmental\n              consultation experience.\n            </CardBody>\n          </Card>\n        </ColMedium>\n        <ColMedium numOfCols=\"6\" className=\"d-flex justify-content-center\">\n          <Card>\n            <RoundedPicture src={youssefPic} alt=\"Youssef Agiza\" />\n            <CardBody\n              title=\"Youssef Agiza\"\n              subtitle=\"Undergraduate Student (American University in Cairo)\"\n            >\n              Youssef Agiza is an undergraduate student at the American\n              University in Cairo majoring in computer science and mathematics.\n            </CardBody>\n          </Card>\n        </ColMedium>\n      </Row>\n    </div>\n  );\n}\n\nexport default AboutUs;\n","import React from \"react\";\n\nfunction CopyRight(props) {\n  return (\n    <div className=\"copy-right\">\n      <p>\n        2021 &copy;\n        <a className=\"navbar-brand\" href=\"https://www.aucegypt.edu/home\">\n          The American University in Cairo.\n        </a>\n        All rights reserved.\n      </p>\n    </div>\n  );\n}\n\nexport default CopyRight;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Row, ColMedium } from \"../components/grid\";\nimport CopyRight from \"../components/CopyRight\";\nfunction Footer(props) {\n  return (\n    <footer className=\"d-flex justify-content-between app-footer\">\n      <CopyRight />\n      <Row className=\"footer-links \">\n        <ColMedium numOfCols=\"auto\">\n          <NavLink to=\"/about-us\">About Us</NavLink>\n        </ColMedium>\n        <ColMedium numOfCols=\"auto\">\n          <NavLink to=\"/contact-us\">Contact Us</NavLink>\n        </ColMedium>\n      </Row>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Nav({ children }) {\n  return (\n    <nav className=\"navbar app-header navbar-expand-lg navbar-dark \">\n      {children}\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavItem({ label, extraClasses = \"\", to = \"\", ...props }) {\n  return (\n    <li className={\"navbar-item mx-2 \" + extraClasses} {...props}>\n      <NavLink to={to} className={\"nav-link \"}>\n        {label}\n      </NavLink>\n    </li>\n  );\n}\n\nexport default NavItem;\n","import React from \"react\";\n\nfunction NavList({ children, extraClasses = \"\", ...others }) {\n  return (\n    <ul className={\"navbar-nav nav-list \" + extraClasses} {...others}>\n      {children}\n    </ul>\n  );\n}\n\nexport default NavList;\n","export default __webpack_public_path__ + \"static/media/auc-logo.fb665a08.png\";","import React from \"react\";\nimport logo from \"../assets/pictures/auc-logo.png\";\n\nfunction Logo() {\n  return (\n    <div className=\"container bg-light rounded logo \">\n      <img\n        src={logo}\n        width={100}\n        height={60}\n        alt=\"The American University in Cairo logo\"\n      />\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\nimport { ADVISILY } from \"../constant/websiteName\";\n\nfunction Brand(props) {\n  return (\n    <div className=\"navbar-item brand-title\">\n      <h1 id=\"brand\">{ADVISILY}</h1>\n    </div>\n  );\n}\n\nexport default Brand;\n","import axios from \"axios\";\n\nconst setJwt = (jwt) => {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n};\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.interceptors.response.use(null, (err) => {\n  const expectedError =\n    err.response && err.response.status >= 400 && err.response.status < 500;\n  if (!expectedError) {\n    console.log(\"Logging unexpected expected error: \", err);\n    alert(\"An unexpected error occurred.\");\n    throw err;\n  }\n  return Promise.reject(err);\n});\n\nconst httpService = {\n  get: axios.get,\n  post: axios.post,\n  delete: axios.delete,\n  put: axios.put,\n  setJwt,\n};\nexport default httpService;\n","import http from \"./httpService\";\nconst apiEndpoint = \"/advising\";\n\nexport const getAdvisingSessions = async () => {\n  const { data: advisingSessions } = await http.get(apiEndpoint);\n  return advisingSessions;\n};\n\nexport const getAdvisingSession = async (userId) => {\n  const { data: advisingSessions } = await http.get(apiEndpoint, {\n    params: { userId },\n  });\n  return advisingSessions;\n};\n\nexport const addAdvisingSession = async (sessionInfo) => {\n  const { data } = await http.post(apiEndpoint, sessionInfo);\n  return data;\n};\n\nexport const updateAdvisingSessions = async (sessionInfo) => {\n  const { data } = await http.put(apiEndpoint, sessionInfo);\n  return data;\n};\n\nexport const generatePlan = async (advisingSessionId) => {\n  await http.post(`${apiEndpoint}/generate-plan`, {\n    advisingSessionId,\n  });\n};\nexport const getAdvisingResultCourses = async (advisingSessionId) => {\n  const { data: courses } = await http.get(\n    `${apiEndpoint}/${advisingSessionId}/results/courses`\n  );\n  return courses;\n};\n\nexport const getAdvisingResults = async (advisingSessionId) => {\n  const { data: results } = await http.get(\n    `${apiEndpoint}/${advisingSessionId}/results`\n  );\n  return results;\n};\nexport const saveAdvisingSession = (advisingSessionId) => {\n  localStorage.setItem(\"advisingSessionId\", advisingSessionId);\n};\nexport const retrieveAdvisingSession = () =>\n  localStorage.getItem(\"advisingSessionId\");\n\nexport const getUserAdvisingSessionId = async (userId) => {\n  const { data } = await http.get(`${apiEndpoint}/getUserAdvisingId/${userId}`);\n  return data.advisingSessionId;\n};\n\nexport const verifyResults = async (advisingSessionId) => {\n  const { data } = await http.post(`${apiEndpoint}/verifyResults`, {\n    advisingSessionId,\n  });\n  return data;\n};\nconst advisingService = {\n  getAdvisingSessions,\n  getAdvisingSession,\n  addAdvisingSession,\n  updateAdvisingSessions,\n  generatePlan,\n  getAdvisingResults,\n  getAdvisingResultCourses,\n  saveAdvisingSession,\n  retrieveAdvisingSession,\n  verifyResults,\n};\nexport default advisingService;\n","import http from \"./httpService\";\nconst apiEndPoint = \"/users\";\n\n/*User  is expected to have the following:\n    userId, firstName,lastName, auc email, password, repeatPassword\n*/\nexport const register = (userInfo) => {\n  return http.post(`${apiEndPoint}/register`, userInfo);\n};\nexport const getUser = async (userId) => {\n  const { data, headers } = await http.get(`${apiEndPoint}/user`, {\n    params: {\n      userId,\n    },\n  });\n  if (!data) return null;\n\n  return { user: data, token: headers[\"x-auth-token\"] };\n};\n\nexport const getUsers = async () => {\n  const { data: users } = await http.get(`${apiEndPoint}`);\n\n  return users;\n};\n\nexport const validateResetToken = async (token) => {\n  return await http.post(`${apiEndPoint}/validate-reset-token`, { token });\n};\nexport const resetPassword = async (token, password) => {\n  return await http.post(`${apiEndPoint}/reset-password`, {\n    token,\n    password,\n  });\n};\nexport const forgotPassword = async (email) => {\n  return await http.post(`${apiEndPoint}/forgot-password`, { email });\n};\nexport const resendVerification = async (email) => {\n  return await http.post(`${apiEndPoint}/resend-verification`, { email });\n};\n\nexport const getStudentMajors = async (userId) => {\n  const { data: majors } = await http.get(`${apiEndPoint}/user-majors`, {\n    params: { userId },\n  });\n  return majors;\n};\nexport const getStudentMinors = async (userId) => {\n  const { data: minors } = await http.get(`${apiEndPoint}/user-minors`, {\n    params: { userId },\n  });\n  return minors;\n};\n\nexport const getStudentCourses = async (userId) => {\n  const { data: studentCourses } = await http.get(\n    `${apiEndPoint}/user-courses`,\n    { params: { userId } }\n  );\n\n  return studentCourses;\n};\n\nexport const addStudentCourse = async (userId, courseId) => {\n  await http.post(`${apiEndPoint}/user-courses`, {\n    userId,\n    courseId,\n  });\n};\nexport const deleteStudentCourse = async (userId, courseId) => {\n  const config = {\n    data: { userId, courseId },\n  };\n  const res = await http.delete(`${apiEndPoint}/user-courses`, config);\n  return res;\n};\n\nexport const addStudentMajor = async (userId, majorId, catalogId) => {\n  const res = await http.post(`${apiEndPoint}/user-majors`, {\n    userId,\n    majorId,\n    catalogId,\n  });\n  return res;\n};\n\nexport const deleteStudentMajor = async (userId, majorId) => {\n  const res = await http.delete(`${apiEndPoint}/user-majors`, {\n    data: {\n      userId,\n      majorId,\n    },\n  });\n  return res;\n};\nexport const addStudentMinor = async (userId, minorId) => {\n  const config = {\n    userId,\n    minorId,\n  };\n  const res = await http.post(`${apiEndPoint}/user-minors`, config);\n  return res;\n};\n\nexport const deleteStudentMinor = async (userId, minorId) => {\n  const config = {\n    data: {\n      userId,\n      minorId,\n    },\n  };\n  const res = await http.delete(`${apiEndPoint}/user-minors`, config);\n  return res;\n};\n\nexport const update = async (userId, updatedData) => {\n  const res = await http.put(`${apiEndPoint}/${userId}`, updatedData);\n  return res;\n};\n\nconst userService = {\n  register,\n  update,\n  getUser,\n  getUsers,\n  getStudentMajors,\n  getStudentMinors,\n  getStudentCourses,\n  addStudentCourse,\n  deleteStudentCourse,\n  addStudentMajor,\n  deleteStudentMajor,\n  addStudentMinor,\n  deleteStudentMinor,\n};\nexport default userService;\n","import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\nimport { saveAdvisingSession } from \"./advisingService\";\nimport { getUser } from \"./userService\";\nconst apiEndPoint = \"/users/login\";\nconst tokenKey = \"token\";\n\nexport const getJwt = () => {\n  return localStorage.getItem(tokenKey);\n};\n\nhttp.setJwt(getJwt());\n\nexport const loginWithJwt = (jwt) => {\n  localStorage.setItem(tokenKey, jwt);\n  const { advisingSessionId } = getCurrentUser();\n  saveAdvisingSession(advisingSessionId);\n  http.setJwt(getJwt());\n};\nexport const login = async ({ email, password }) => {\n  const { data: jwt } = await http.post(apiEndPoint, {\n    email,\n    password,\n  });\n  localStorage.setItem(tokenKey, jwt);\n};\nexport const logout = () => {\n  localStorage.removeItem(tokenKey);\n};\n\nexport const refreshUser = async (user) => {\n  try {\n    const res = await getUser(user.userId);\n    const { user: newUser, token } = res;\n    if (!newUser) throw new Error(\"Error refreshing user\");\n    if (!newUser.isVerified) return user;\n    loginWithJwt(token);\n\n    return jwtDecode(token);\n  } catch (ex) {\n    console.log(\"From refreshUser\", ex, user);\n  }\n};\n\nexport const getCurrentUser = () => {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    let user = jwtDecode(jwt);\n\n    // console.log(\"Before refresh\");\n    // if (user && !user.isVerified) user = await refreshUser(user);\n    // console.log(\"after refresh\");\n\n    // console.log(\"user from get current user\", user);\n    return user;\n  } catch (ex) {\n    return null;\n  }\n};\n\nconst auth = {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n  refreshUser,\n};\nexport default auth;\n","import { useState, useEffect } from \"react\";\nimport auth from \"../services/authService\";\n\nfunction useAuth(refresh) {\n  const [user, setUser] = useState(auth.getCurrentUser());\n  useEffect(() => {\n    if (refresh) auth.refreshUser(user).then((newUser) => setUser(newUser));\n  }, [refresh]);\n\n  return user;\n}\n\nexport default useAuth;\n","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\n\nfunction Profile(props) {\n  const user = useAuth();\n\n  if (!user) return null;\n\n  return (\n    <>\n      <h1 className=\"\">Profile</h1>\n      <p>\n        <strong>Name: </strong> {user.firstName + \" \" + user.lastName}\n      </p>\n      <p>\n        <strong>Email: </strong> {user.email}\n      </p>\n      <p>\n        <strong>Student ID: </strong> {user.userId}\n      </p>\n    </>\n  );\n}\n\nexport default Profile;\n","import { useEffect } from \"react\";\nimport auth from \"../services/authService\";\n\nfunction Logout(props) {\n  useEffect(() => {\n    auth.logout();\n    window.location = \"/\";\n  }, []);\n  return null;\n}\n\nexport default Logout;\n","export const PROFILE_ROUTE = \"/me\";\nexport const LOGOUT_ROUTE = \"/logout\";\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Nav, NavItem, NavList } from \"../components/nav\";\nimport Logo from \"../components/Logo\";\nimport Brand from \"../components/Brand\";\nimport { ColMedium } from \"../components/grid\";\n\nimport { LOGIN_ROUTE, SIGN_UP_ROUTE } from \"../account/routes\";\nimport { LOGOUT_ROUTE } from \"../profile\";\n\nfunction Header({ user }) {\n  return (\n    <Nav>\n      <ColMedium numOfCols=\"4\" className=\"d-flex\">\n        <NavLink className=\"navbar-brand \" to=\"/\">\n          <Logo />\n        </NavLink>\n\n        <NavList>\n          <NavItem label=\"Home\" to=\"/\" />\n          {user && <NavItem label=\"Advise\" to=\"/advising\" />}\n        </NavList>\n      </ColMedium>\n      <ColMedium numOfCols=\"4\">\n        <Brand />\n      </ColMedium>\n      <ColMedium numOfCols=\"auto\">\n        <NavList extraClasses=\"nav-right\">\n          {!user && (\n            <>\n              <NavItem to={LOGIN_ROUTE} label=\"Login\" />\n              <NavItem\n                to={SIGN_UP_ROUTE}\n                label=\"Sign Up\"\n                extraClasses=\"btn\"\n                id=\"nav-signup-btn\"\n              />\n            </>\n          )}\n          {user && (\n            <>\n              <NavItem to=\"/me\" label={user.firstName} />\n              <NavItem to={LOGOUT_ROUTE} label=\"Logout\" extraClasses=\"btn\" />\n            </>\n          )}\n        </NavList>\n      </ColMedium>\n    </Nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound(props) {\n  return (\n    <>\n      <h1 className=\"text-center my-4\">Sorry, Page Not Found!</h1>\n    </>\n  );\n}\n\nexport default NotFound;\n","export const HOME_ROUTE = \"/\";\nexport const ABOUT_US_ROUTE = \"/about-us\";\nexport const CONTACT_US_ROUTE = \"/contact-us\";\nexport const NOT_FOUND_ROUTE = \"/not-found\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ADVISILY } from \"../constant/websiteName\";\nfunction AdvisingHome(props) {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"frame\">\n        <h1 className=\"text-center mb-3\">Advising</h1>\n        <h3>Why {ADVISILY}?</h3>\n        <ul>\n          <li>\n            <strong>No more waiting!</strong>\n            <p>\n              with an automated advisor you don't need to schedule an\n              appointment and wait for your turn.\n            </p>\n          </li>\n          <li>\n            <strong>Quick</strong>\n            <p>You are only a couple of button presses away from your plan.</p>\n          </li>\n          <li>\n            <strong>See ahead in the future</strong>\n            <p>\n              We will create for you a plan up until graduation. However, seeing\n              further ahead in the future is less accurate.\n            </p>\n          </li>\n        </ul>\n        <h3>Important notes </h3>\n        <li>\n          <strong>It is not perfect</strong>\n          <p>\n            This is just an automated advisor that is meant to help you with\n            your advising. It is still subject to error, so you have to review\n            the results and ensure there are no problem. If you have any doubts\n            about your results, you may schedule an appointment with your human\n            advisor.\n          </p>\n        </li>\n        <li>\n          <strong>Only main semsters</strong>\n          <p>\n            The system takes into consideration the main semesters\n            only(fall/spring). Winters and summers are not currently supported.\n          </p>\n        </li>\n        <li>\n          <strong>Seeing ahead in the future is not accurate</strong>\n          <p>\n            The more semesters generated ahead of time, the less accurate the\n            results.\n          </p>\n        </li>\n        {/* <h3>How things work?</h3>\n        <p>\n          <em>Your role </em>&mdash; You only need to answer some questions\n          about major-related info and your preferences and leave the rest to\n          us!\n        </p>\n        <p>\n          <em>Our role </em>&mdash; We generate a plan for you courses according\n          to your preferences.\n        </p> */}\n        {/* <h3>What are you waiting for?</h3> */}\n        <div className=\"my-5 text-center\">\n          <Link to=\"/advising/form\" className=\"m-4\">\n            <button className=\"btn btn-primary btn-lg\">\n              Let's get started!\n            </button>\n          </Link>\n          <Link to=\"/advising/results\">\n            <button className=\"btn btn-lg\"> Previous result</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdvisingHome;\n","import { CourseTypeIds } from \"../config.json\";\n\nexport const formatCourseData = (course) => {\n  const { courseId, courseCode, courseTitle, prefix } = course;\n  const titleCode = courseCode < 0 ? \"XXX\" : courseCode;\n  const formatedTitle = prefix + \" \" + titleCode + \" - \" + courseTitle;\n\n  return { courseId, formatedTitle };\n};\n\nexport const sortCourses = (courses) => {\n  return courses.sort((c1, c2) => {\n    if (c1.prefix < c2.prefix) return -1;\n    if (c1.prefix > c2.prefix) return 1;\n\n    if (c1.courseCode < c2.courseCode) return -1;\n    if (c1.courseCode > c2.courseCode) return 1;\n\n    return c1.courseTitle < c2.courseTitle ? -1 : 1;\n  });\n};\n\nexport const groupCoursesBySemesterNumber = (courses) => {\n  const groupedCourses = [];\n\n  courses.forEach((course) => {\n    const { semesterNumber } = course;\n    if (!groupedCourses[semesterNumber])\n      groupedCourses[semesterNumber] = {\n        courses: [course],\n        semesterNumber,\n        totalCredits: course.credits,\n      };\n    else {\n      groupedCourses[semesterNumber].courses.push(course);\n      groupedCourses[semesterNumber].totalCredits += course.credits;\n    }\n  });\n  return groupedCourses;\n};\n\n//return nested array of objects\n//used to render courses in tabular format\nexport const groupCourses = (courses, coursesPerRow = 2) => {\n  const groupedCourses = [];\n  let row = [];\n  for (let i = 1; i <= courses.length; i++) {\n    row.push(courses[i - 1]);\n\n    if (i % coursesPerRow === 0 || i === courses.length) {\n      groupedCourses.push(row);\n      row = [];\n    }\n  }\n  return groupedCourses;\n};\n\nexport const categoriseCatalogCourses = (catalogCourses) => {\n  const categorized = [],\n    categoriesMap = {};\n  catalogCourses.forEach((course) => {\n    let { courseTypeId, courseType } = course;\n\n    if (\n      courseTypeId === CourseTypeIds.mathElec ||\n      courseTypeId === CourseTypeIds.mathOrMajorElec\n    ) {\n      courseTypeId = CourseTypeIds.electives;\n      courseType = \"Major Electives\";\n    }\n\n    if (categoriesMap[courseTypeId] === undefined) {\n      categoriesMap[courseTypeId] = categorized.length;\n      categorized.push({ courseType, courses: [course] });\n    } else {\n      const categoryIndex = categoriesMap[courseTypeId];\n      categorized[categoryIndex][\"courses\"].push(course);\n    }\n  });\n  return categorized;\n};\n\nexport const mapCoursestoPrefixes = (courses) => {\n  let prefixMap = {};\n\n  courses.forEach((course) => {\n    const { prefix } = course;\n    if (prefix === \"XXXX\") return; //skip pseudo-courses\n\n    if (prefixMap[prefix] !== undefined) prefixMap[prefix].push(course);\n    else prefixMap[prefix] = [course];\n  });\n\n  return prefixMap;\n};\n","import { useState } from \"react\";\n\nfunction useApi(apiFunc, handleResponse) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [failedToLoad, setFailedToLoad] = useState(false);\n  const [data, setData] = useState([]);\n\n  const request = async (...args) => {\n    setLoading(true);\n    try {\n      let result = await apiFunc(...args);\n      if (handleResponse !== undefined) result = handleResponse(result);\n      setData(result);\n    } catch (err) {\n      setError(err);\n      setFailedToLoad(false);\n      console.error(\"Error in useApi: \", err, apiFunc);\n    }\n    setLoading(false);\n  };\n\n  return {\n    data,\n    loading,\n    error,\n    failedToLoad,\n    request,\n  };\n}\n\nexport default useApi;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAdvisingResultCourses,\n  retrieveAdvisingSession,\n  getUserAdvisingSessionId,\n  getAdvisingResults,\n  verifyResults,\n} from \"../services/advisingService\";\nimport { getCurrentUser } from \"../services/authService\";\nimport {\n  formatCourseData,\n  groupCourses,\n  groupCoursesBySemesterNumber,\n  sortCourses,\n} from \"../utils/coursesUtils\";\n\nimport { Row, ColMedium } from \"../components/grid\";\nimport useApi from \"../hooks/useApi\";\nimport { getStudentCourses, getUsers } from \"../services/userService\";\n\nfunction AdvisingResults(props) {\n  const [userIndex, setUserIndex] = useState(0);\n  const incrementIndex = () => {\n    setUserIndex(userIndex + 1 < users.length ? userIndex + 1 : userIndex);\n  };\n  const decrementIndex = () => {\n    setUserIndex(userIndex - 1 >= 0 ? userIndex - 1 : userIndex);\n  };\n\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const getUsersApi = useApi(getUsers, (users) => {\n    setUsers(users);\n    setUser(users[userIndex]);\n  });\n  useEffect(() => {\n    getUsersApi.request();\n  }, []);\n  useEffect(() => {\n    setUser(users[userIndex]);\n  }, [userIndex]);\n\n  // const user = getCurrentUser();\n  const [advisingSessionId, setAdvisingSessionId] = useState(null);\n  const [disableVerifyBtn, setDisableVerifyBtn] = useState(false);\n  const resultCoursesApi = useApi(getAdvisingResults);\n\n  const advisingSessionIdApi = useApi(getUserAdvisingSessionId, (res) =>\n    setAdvisingSessionId(res)\n  );\n\n  const userCoursesApi = useApi(getStudentCourses, (courses) => {\n    return renderCoursesList(courses);\n  });\n\n  useEffect(() => {\n    if (advisingSessionId && user) resultCoursesApi.request(advisingSessionId);\n  }, [advisingSessionId]);\n  useEffect(() => {\n    if (user && user.userId) {\n      advisingSessionIdApi.request(user.userId);\n      userCoursesApi.request(user.userId);\n    }\n  }, [user]);\n\n  const renderCoursesList = (courses) => {\n    return courses.map((course) => {\n      let { courseId, formatedTitle } = formatCourseData(course);\n      if (courseId === 1 || courseId === 2)\n        courseId = `${courseId}` + Math.random() * 100 * Math.random();\n\n      return <li key={courseId}>{formatedTitle}</li>;\n    });\n  };\n\n  const renderResults = (results) => {\n    if (!results || !results.semesters || !results.semesters.length)\n      return null;\n\n    const result = results.semesters.map(({ semesterNumber, courses }) => {\n      const sortedCourses = sortCourses(courses);\n      let totalCredits;\n      if (sortedCourses.length)\n        totalCredits = sortedCourses\n          .map((c) => (c.credits !== null ? c.credits : 3))\n          .reduce((c1, c2) => c1 + c2, 0);\n      return (\n        <>\n          <h5>Semester Number {semesterNumber}</h5>\n          {renderCoursesList(sortedCourses)}\n          <br />\n          <p>\n            <strong>Total Credits: </strong>\n            {totalCredits}\n          </p>\n          <hr />\n        </>\n      );\n    });\n    return result;\n\n    // const rows = groupCourses(result, 2);\n    // return rows.map((columns) => {\n    //   return (\n    //     <Row>\n    //       {columns.map((column) => (\n    //         <ColMedium>{column}</ColMedium>\n    //       ))}\n    //     </Row>\n    //   );\n    // });\n  };\n  const resultsAvailable = () =>\n    resultCoursesApi.data &&\n    resultCoursesApi.data.semesters &&\n    resultCoursesApi.data.semesters.length;\n\n  const resultsAvailableUI = () => (\n    <>\n      <h1 className=\"text-center\">Your results are here!</h1>\n      <br />\n      <h4 className=\"fw-bold \">Important Note:</h4>\n      <p>\n        If you are not satisfied with your results you should contact your\n        advisor and schedule a meeting. You can find you advisor in degree works\n        through{\" \"}\n        <a href=\"https://ssb-prod.ec.aucegypt.edu/PROD/twbkwbis.P_ValLogin\">\n          banner self-service\n        </a>\n        .\n      </p>\n      <p>\n        {\" \"}\n        If you are satisfied, please press on <strong>\n          \"Verify Results\"\n        </strong>{\" \"}\n        button so that your hold will be removed later.\n      </p>\n      <div className=\"d-flex justify-content-between\">\n        <button className=\"btn \" onClick={decrementIndex}>\n          Previous\n        </button>\n        <button className=\"btn \" onClick={incrementIndex}>\n          Next\n        </button>\n      </div>\n      <br />\n      {user && (\n        <>\n          <h3 className=\"text-center\">User Info</h3>\n          <p>\n            <strong>User Id: </strong>\n            {user.userId}\n          </p>\n          <p>\n            <strong>Name: </strong>\n            {user.firstName + \" \" + user.lastName}\n          </p>\n          <p>\n            <strong>Email: </strong>\n            {user.email}\n          </p>\n          <p>\n            <strong>Standing: </strong>\n            {user.standing}\n          </p>\n          <hr />\n        </>\n      )}\n      <h3 className=\"text-center\">User courses</h3>\n      {userCoursesApi.data}\n      <hr />\n      <h3 className=\"text-center\">Advised Courses</h3>\n      {renderResults(resultCoursesApi.data)}\n    </>\n  );\n  const noResultsUI = () => (\n    <div className=\"text-center\">\n      <h2>Results</h2>\n      <h4>No results available yet or you have not done advising</h4>\n    </div>\n  );\n\n  const handleVerify = async () => {\n    if (!advisingSessionId)\n      return alert(\"Sorry! An error occurred while verifying your results\");\n\n    if (window.confirm(\"Are you sure you want to verify these results?\")) {\n      try {\n        await verifyResults(advisingSessionId);\n        alert(\"Success! Your results were verified\");\n        setDisableVerifyBtn(true);\n        window.location.reload(true);\n      } catch (e) {\n        console.log(e);\n        alert(\"Sorry! An error occurred while verifying your results\");\n      }\n    }\n  };\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"frame \">\n        {resultsAvailable() ? resultsAvailableUI() : noResultsUI()}\n        <div className=\"d-flex justify-content-between\">\n          <Link to=\"/advising/form\" replace>\n            <button className=\"btn\">New Advising Session?</button>\n          </Link>\n          {!!resultsAvailable() && !resultCoursesApi.data.isVerified && (\n            <button\n              disabled={disableVerifyBtn}\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={handleVerify}\n            >\n              Verify Results\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdvisingResults;\nfunction sortAndRemoveNullCredits(courses) {\n  courses.forEach(\n    (course) => (course.credits = course.credits === null ? 3 : course.credits)\n  );\n  courses.sort((c1, c2) => c1.semesterNumber - c2.semesterNumber);\n  return courses;\n}\n","import React from \"react\";\n\nfunction FormWrapper({ title, children }) {\n  return (\n    <div className=\"d-flex justify-content-center \">\n      <div className=\"frame \">\n        <h1 className=\"text-center mb-4 \">{title}</h1>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default FormWrapper;\n","import { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nfunction FormError({\n  errorMessage = \"One or more required field(s) is invalid\",\n\n  ...props\n}) {\n  const { isValid, submitCount, status } = useFormikContext();\n  if (submitCount < 1 || (isValid && !status)) return null;\n\n  const className = props.className\n    ? \"alert alert-danger \" + props.className\n    : \"alert alert-danger\";\n\n  if (status && status.error) {\n    errorMessage = status.error;\n  }\n\n  return (\n    <div className={className} {...props}>\n      {errorMessage}\n    </div>\n  );\n}\n\nexport default FormError;\n","import React from \"react\";\nimport { Formik, Form as FormikForm } from \"formik\";\nimport FormWrapper from \"./FormWrapper\";\nimport FormError from \"./FormError\";\nfunction Form({\n  initialValues,\n  validationSchema,\n  onSubmit,\n  title,\n  errorMessage,\n  children,\n  ...rest\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      {...rest}\n    >\n      <FormWrapper title={title}>\n        <FormikForm>{children}</FormikForm>\n        <FormError errorMessage={errorMessage} />\n      </FormWrapper>\n    </Formik>\n  );\n}\n\nexport default Form;\n","import { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nfunction FieldError({ name, ...props }) {\n  const { getFieldMeta } = useFormikContext();\n  const { error, touched } = getFieldMeta(name);\n  if (!error || !touched) return null;\n\n  return (\n    <div className=\"clr-danger\" {...props}>\n      {error}\n    </div>\n  );\n}\n\nexport default FieldError;\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport FieldError from \"./FieldError\";\n\nfunction FormInput({ label, visible = true, ...props }) {\n  const [field, { error, touched }] = useField(props);\n  if (!visible) return null;\n  const className =\n    error && touched ? \"form-control is-invalid\" : \"form-control\";\n\n  return (\n    <>\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor={props.name || props.id}>\n          {label}\n        </label>\n        <input\n          className={className}\n          aria-invalid={error}\n          {...field}\n          {...props}\n        />\n      </div>\n      <FieldError name={props.name} />\n    </>\n  );\n}\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { useField } from \"formik\";\nimport FieldError from \"./FieldError\";\n\nfunction FormSelect({ label, changeButton = false, visible = true, ...props }) {\n  const [field, { error, touched }] = useField(props);\n  const [editable, setEditable] = useState(!changeButton);\n\n  if (!visible) return null;\n  const className =\n    error && touched && !props.disabled\n      ? \"form-control is-invalid\"\n      : \"form-control\";\n\n  return (\n    <>\n      <div className=\"form-group\">\n        {label && <label className=\"form-label\">{label}</label>}\n        <div className=\"d-flex\">\n          <select\n            className={className}\n            aria-invalid={error}\n            disabled={!editable}\n            {...field}\n            {...props}\n          />\n          {changeButton && (\n            <button\n              className=\"btn-link\"\n              onClick={() => setEditable(!editable)}\n              type=\"button\"\n            >\n              change?\n            </button>\n          )}\n        </div>\n      </div>\n\n      <FieldError name={props.name} />\n    </>\n  );\n}\n\nexport default FormSelect;\n","import { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nfunction SubmitButton({ label = \"Submit\", ...props }) {\n  const { isSubmitting } = useFormikContext();\n  return (\n    <div className=\"my-3 d-flex flex-column\">\n      <button\n        disabled={isSubmitting}\n        className=\"btn ms-auto\"\n        type=\"submit\"\n        {...props}\n      >\n        {label}\n      </button>\n    </div>\n  );\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport { useField } from \"formik\";\n\nfunction FormCheckbox({ label, ...props }) {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  const inputClassName = meta.error\n    ? \"form-check-input is-invalid\"\n    : \" form-check-input\";\n  const divClassName = field.checked ? \"form-check-disabled \" : \"\";\n  return (\n    <div className={\"form-check \" + divClassName}>\n      <label htmlFor={props.value} className=\"form-check-label\">\n        {label}\n      </label>\n      <input\n        type=\"checkbox\"\n        id={props.value}\n        className={inputClassName}\n        {...field}\n        {...props}\n      ></input>\n    </div>\n  );\n}\n\nexport default FormCheckbox;\n","import React from \"react\";\nimport { useField } from \"formik\";\n\nfunction FormRadio({ label, ...props }) {\n  const [field, { error, touched }] = useField({ ...props, type: \"radio\" });\n  const inputClassName =\n    error && touched ? \"form-check-input is-invalid\" : \" form-check-input\";\n  return (\n    <div className=\"form-check\">\n      <label htmlFor={props.name} className=\"form-check-label\">\n        <input\n          type=\"radio\"\n          className={inputClassName}\n          checked={field.value}\n          {...field}\n          {...props}\n        />\n        {label}\n      </label>\n    </div>\n  );\n}\n\nexport default FormRadio;\n","import React from \"react\";\nimport FieldError from \"./FieldError\";\n\nfunction FormGroup({ label, labelClass, ...props }) {\n  return (\n    <>\n      <div className=\"form-group\">\n        {label && <label className={\"form-label \" + labelClass}>{label}</label>}\n        {props.children}\n      </div>\n      {<FieldError name={props.name} />}\n    </>\n  );\n}\n\nexport default FormGroup;\n","import React from \"react\";\nimport { FormGroup, FormRadio } from \".\";\n\nfunction FormPolarRadioGroup({\n  name,\n  label,\n  trueLabel = \"yes\",\n  falseLabel = \"no\",\n  ...props\n}) {\n  return (\n    <FormGroup name={name} label={label}>\n      <FormRadio label={trueLabel} name={name} value={\"true\"} {...props} />\n      <FormRadio label={falseLabel} name={name} value={\"false\"} {...props} />\n    </FormGroup>\n  );\n}\n\nexport default FormPolarRadioGroup;\n","import React from \"react\";\nimport { FormSelect } from \"./\";\n\nfunction FormSelectGroup({\n  defaultOption,\n  items,\n  idSelector = \"id\",\n  nameSelector = \"name\",\n  valueSelector = \"id\",\n  ...props\n}) {\n  return (\n    <>\n      <FormSelect {...props}>\n        {defaultOption && (\n          <option value=\"\" disabled>\n            {defaultOption}\n          </option>\n        )}\n        {items.map((item) => (\n          <option key={item[idSelector]} value={item[valueSelector]}>\n            {item[nameSelector]}\n          </option>\n        ))}\n      </FormSelect>\n    </>\n  );\n}\n\nexport default FormSelectGroup;\n","export const COURSES_IDS = \"coursesIds\";\nexport const GENERAL_ELECTIVE_CREDITS = \"generalElecCredits\";\nexport const EXEMPTED_CREDITS = \"exemptedCredits\";\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nimport {\n  formatCourseData,\n  mapCoursestoPrefixes,\n} from \"../../utils/coursesUtils\";\nimport { FormCheckbox } from \"../../components/form\";\nimport { COURSES_IDS } from \"./fieldNames\";\nfunction CoursesModal({ show, onClose, courses, prefixes }) {\n  const handleClose = () => {\n    setSelectedPrefix(\"\");\n    onClose();\n  };\n  const [selectedPrefix, setSelectedPrefix] = useState(null);\n  const coursesPrefixMap = mapCoursestoPrefixes(courses);\n\n  const renderCourses = () => {\n    if (selectedPrefix)\n      return coursesPrefixMap[selectedPrefix].map((course) => {\n        const { courseId, formatedTitle } = formatCourseData(course);\n        return (\n          <>\n            <FormCheckbox\n              label={formatedTitle}\n              name={COURSES_IDS}\n              value={JSON.stringify(courseId)}\n            />\n\n            <hr />\n          </>\n        );\n      });\n\n    return prefixes\n      .sort((p1, p2) => {\n        if (p1 < p2) return -1;\n        if (p2 < p1) return 1;\n\n        return 0;\n      })\n\n      .map((prefix) => {\n        if (prefix === \"XXXX\") return null;\n\n        return (\n          <>\n            <button key={prefix} onClick={() => setSelectedPrefix(prefix)}>\n              {prefix}\n            </button>\n            <hr />\n            <br />\n          </>\n        );\n      });\n  };\n\n  const getTitle = () => (selectedPrefix ? \"Courses\" : \"Prefix\");\n\n  return (\n    <>\n      <Modal\n        size=\"xl\"\n        show={show}\n        onHide={handleClose}\n        scrollable\n        dialogClassName=\"modal-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{getTitle()}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{renderCourses()}</Modal.Body>\n        <Modal.Footer>\n          {selectedPrefix && (\n            <Button\n              variant=\"secondary\"\n              className=\"me-auto\"\n              onClick={() => setSelectedPrefix(\"\")}\n            >\n              back\n            </Button>\n          )}\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default CoursesModal;\n","import http from \"./httpService\";\n\nconst apiEndPoint = \"/academics/courses\";\n\nexport const getAllCourses = async () => {\n  const { data: courses } = await http.get(apiEndPoint);\n  return courses;\n};\n\nexport const getCourse = async (courseId) => {\n  const { data: course } = await http.get(`${apiEndPoint}/${courseId}`);\n  return course;\n};\nexport const getPrefixes = async (courseId) => {\n  const { data: prefixes } = await http.get(`${apiEndPoint}/prefixes`);\n  return prefixes;\n};\n\nconst coursesService = { getAllCourses, getCourse };\n\nexport default coursesService;\n","import { apiBaseUrl, CourseTypeIds } from \"../config.json\";\n\nimport http from \"./httpService\";\n\nconst apiEndPoint = \"/catalogs\";\nconst catCourseUrl = `${apiEndPoint}/courses`;\nconst planCoursesUrl = `${apiEndPoint}/plans/courses`;\n\nexport const getCatalogs = async (majorId) => {\n  if (!majorId) return [];\n  const { data: catalogs } = await http.get(apiEndPoint, {\n    params: { majorId },\n  });\n  return catalogs;\n};\n\nexport const getCatalogCourses = async (catalogId) => {\n  console.log(\"calling getCatCourses\", catalogId);\n  const { data: catCourses } = await http.get(catCourseUrl, {\n    params: { catalogId },\n  });\n  return catCourses;\n};\n\nexport const getCoreCourses = async (catalogId) => {\n  const { data: courses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.core },\n  });\n  return courses;\n};\n\nexport const getConcCourses = async (catalogId) => {\n  const { data: courses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.concentertaion },\n  });\n  return courses;\n};\n\nexport const getElectiveCourses = async (catalogId) => {\n  const { data: courses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.electives },\n  });\n  return courses;\n};\n\nexport const getCollateralCourses = async (catalogId) => {\n  const { data: catCourses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.collateral },\n  });\n  return catCourses;\n};\n\nexport const getEngCoreCourses = async (catalogId) => {\n  const { data: catCourses } = await http.get(catCourseUrl, {\n    params: { catalogId, courseTypeId: CourseTypeIds.engCore },\n  });\n  return catCourses;\n};\n\nexport const getPlanCourses = async (catalogId) => {\n  const { data: planCourses } = await http.get(planCoursesUrl, {\n    params: { catalogId },\n  });\n  return planCourses;\n};\n\nconst catalogsService = {\n  getCatalogs,\n  getCatalogCourses,\n  getCoreCourses,\n  getConcCourses,\n  getElectiveCourses,\n  getCollateralCourses,\n  getEngCoreCourses,\n  getPlanCourses,\n};\nexport default catalogsService;\n","import React, { useState, useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\n// eslint-disable-next-line\nimport { FormCheckbox, FormGroup, FormInput } from \"../../components/form\";\nimport { Row, ColMedium } from \"../../components/grid\";\nimport {\n  categoriseCatalogCourses,\n  formatCourseData,\n  groupCourses,\n} from \"../../utils/coursesUtils\";\n\n// eslint-disable-next-line\nimport {\n  COURSES_IDS,\n  EXEMPTED_CREDITS,\n  GENERAL_ELECTIVE_CREDITS,\n} from \"./fieldNames\";\nimport CoursesModal from \"./coursesModal\";\n\nimport useApi from \"../../hooks/useApi\";\n\nimport {\n  getPrefixes as getPrefixesApi,\n  getAllCourses,\n} from \"../../services/coursesService\";\nimport { getCatalogCourses } from \"../../services/catalogsService\";\n\nfunction CoursesSubForm() {\n  const { values, setFieldValue } = useFormikContext();\n\n  const prefixesApi = useApi(getPrefixesApi);\n  const catalogApi = useApi(getCatalogCourses, handleCatalogCouresesResponse);\n  const coursesApi = useApi(getAllCourses);\n\n  useEffect(() => {\n    prefixesApi.request();\n    coursesApi.request();\n  }, []);\n  useEffect(() => {\n    if (values.catalogId) catalogApi.request(values.catalogId);\n  }, [values.catalogId]);\n\n  const handleCourseCheck = ({ target }) => {\n    const { name, checked, value } = target;\n    const selectedIds = values[name].map((id) => id);\n\n    if (checked) setFieldValue(name, [...selectedIds, value]);\n    //if (window.confirm(\"Are you sure you want to uncheck this course?\"))\n    else\n      setFieldValue(\n        name,\n        selectedIds.filter((v) => v !== value)\n      );\n  };\n\n  const handleUncheckAll = () => {\n    if (window.confirm(\"Are you sure you want to uncheck all the courses?\"))\n      setFieldValue(COURSES_IDS, []);\n  };\n\n  const prerequisiteFullfilled = (course) => {\n    const selectedCourseIds = values[COURSES_IDS].map((id) => parseInt(id));\n\n    const { requisites } = course;\n\n    if (!requisites.length) return true;\n    if (!selectedCourseIds.includes(course.courseId)) return true;\n\n    return requisites.some((reqSet) => {\n      return reqSet.every((r) => {\n        if (r.requisiteTypeId === 1)\n          return selectedCourseIds.includes(r.courseId);\n        if (r.requisiteTypeId === 2 || r.requisiteTypeId === 3)\n          return selectedCourseIds.includes(r.courseId);\n\n        return true;\n      });\n    });\n  };\n\n  const [showModal, setShowModal] = useState(false);\n\n  const renderCourseRow = (row) => {\n    return row.map((course) => {\n      const { courseId, formatedTitle } = formatCourseData(course);\n      return (\n        <ColMedium key={courseId}>\n          <FormCheckbox\n            label={formatedTitle}\n            name={COURSES_IDS}\n            value={JSON.stringify(courseId)}\n            onChange={handleCourseCheck}\n          />\n\n          {!prerequisiteFullfilled(course) && (\n            <div className=\"alert alert-warning\">\n              <strong>Warning:</strong> Did you fulfill the\n              prerequisites/corequisite for this course?\n            </div>\n          )}\n        </ColMedium>\n      );\n    });\n  };\n\n  const renderCoursesTabular = (courses) => {\n    return courses.map((row) => (\n      <Row key={\"key\" + row[0].courseId}>{renderCourseRow(row)}</Row>\n    ));\n  };\n\n  const renderCatalogCourses = (catalogCourses) => {\n    return catalogCourses.map((catalogCourse) => {\n      return (\n        <>\n          <h5>{catalogCourse.courseType}</h5>\n          {renderCoursesTabular(catalogCourse.courses)}\n          <hr />\n        </>\n      );\n    });\n  };\n\n  if (!values.catalogId)\n    return (\n      <p className=\"text-center\">\n        Please select you declaration catalog catalog first.\n      </p>\n    );\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={handleUncheckAll}\n        className=\" btn btn-sm float-end my-2\"\n      >\n        Uncheck all?\n      </button>\n      <br />\n      <FormGroup\n        name={COURSES_IDS}\n        label=\"Please select all the courses you will have finished by the end of the current semester:\"\n        labelClass=\"fs-4 fw-bold\"\n      >\n        <p className=\"clr-danger fs-4 fw-bold\">\n          (exempted and transferred courses, as well)\n        </p>\n        <br />\n        {renderCatalogCourses(catalogApi.data)}\n\n        <h5>General Electives</h5>\n\n        <FormInput\n          label=\"Enter the number of credits you used from you general electives\"\n          type=\"number\"\n          min={0}\n          name={GENERAL_ELECTIVE_CREDITS}\n        />\n\n        {/* <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={() => setShowModal(true)}\n        >\n          Add general electives\n        </button> */}\n        <CoursesModal\n          show={showModal}\n          onClose={() => setShowModal(false)}\n          prefixes={prefixesApi.data}\n          courses={coursesApi.data}\n        />\n        <br />\n        <hr />\n        <h5>Exempted Credits</h5>\n\n        <FormInput\n          name={EXEMPTED_CREDITS}\n          label=\"How many credits(if any) are you exempted from?(excluding the arabic courses)\"\n          type=\"number\"\n          min={0}\n        />\n        <hr />\n      </FormGroup>\n    </>\n  );\n}\n\nexport default CoursesSubForm;\nfunction handleCatalogCouresesResponse(courses) {\n  const categorized = categoriseCatalogCourses(courses);\n  categorized.forEach((category) => {\n    category.courses.sort((c1, c2) => {\n      if (c1.prefix < c2.prefix) return -1;\n      if (c2.prefix > c1.prefix) return 1;\n      return c1.courseCode - c2.courseCode;\n    });\n    category.courses = groupCourses(category.courses, 3);\n  });\n  categorized.sort((c1, c2) =>\n    c1.courseType < c2.courseType ? -1 : c1.courseType > c2.courseType\n  );\n  return categorized;\n}\n","const stringToBool = (str) => {\n  if (typeof str === \"boolean\") return str;\n  if (typeof str !== \"string\") return null;\n  if (str.toLowerCase().trim() === \"true\") return true;\n  if (str.toLowerCase().trim() === \"false\") return false;\n  return null;\n};\n\nexport { stringToBool };\n","import http from \"./httpService\";\nconst apiEndPoint = \"/advising/paces\";\n\nexport const getPaces = async () => {\n  const { data: paces } = await http.get(apiEndPoint);\n  return paces;\n};\n\nconst paceService = { getPaces };\nexport default paceService;\n","export const OVERLOADING = \"overloading\";\nexport const TAKING_SUMMER = \"takingSummer\";\nexport const TAKING_WINTER = \"takingWinter\";\nexport const OVERLOADING_CREDITS = \"overloadingCredits\";\nexport const SUMMER_CREDITS = \"summerCredits\";\nexport const WINTER_CREDITS = \"winterCredits\";\nexport const PACE_ID = \"paceId\";\nexport const SEMESTERS_TO_PLAN = \"semestersToPlan\";\n","const semesters = [\n  { id: \"1\", name: 1 },\n  { id: \"2\", name: 2 },\n  { id: \"3\", name: 3 },\n  { id: \"4\", name: 4 },\n  { id: \"5\", name: 5 },\n  { id: \"6\", name: 6 },\n  { id: \"7\", name: 7 },\n  { id: \"8\", name: 8 },\n  { id: \"9\", name: 9 },\n  { id: \"10\", name: 10 },\n];\n\nexport default semesters;\n","import React, { useState, useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport {\n  FormInput,\n  FormPolarRadioGroup,\n  FormSelectGroup,\n} from \"../../components/form\";\nimport { stringToBool } from \"../../utils/stringUtils\";\nimport { getPaces } from \"../../services/pacesService\";\nimport {\n  OVERLOADING,\n  OVERLOADING_CREDITS,\n  // eslint-disable-next-line\n  PACE_ID,\n  SEMESTERS_TO_PLAN,\n  // eslint-disable-next-line\n  SUMMER_CREDITS,\n  // eslint-disable-next-line\n  TAKING_SUMMER,\n  TAKING_WINTER,\n  WINTER_CREDITS,\n} from \"./fieldNames\";\n\nimport semesters from \"../../constant/semesters\";\n\nfunction PreferencesInfo() {\n  const { values, setFieldValue } = useFormikContext();\n  // eslint-disable-next-line\n  const { takingSummer, takingWinter, overloading } = values;\n\n  const handleOnChange = (target, fieldToResetName, resetValue = 0) => {\n    setFieldValue(target.name, target.value);\n    if (stringToBool(target.value) === false)\n      setFieldValue(fieldToResetName, resetValue);\n  };\n  // eslint-disable-next-line\n  const [paces, setPaces] = useState([]);\n  useEffect(() => {\n    getPaces().then((res) => setPaces(res));\n  }, []);\n\n  return (\n    <>\n      <FormPolarRadioGroup\n        name={OVERLOADING}\n        label=\"Are you willing to overload in the next semester?\"\n        onChange={({ target }) => {\n          handleOnChange(target, \"overloadingCredits\");\n        }}\n      />\n      <FormInput\n        type=\"number\"\n        name={OVERLOADING_CREDITS}\n        label=\"How many crdeits are you taking next semester IN TOTAL:\"\n        min={1}\n        visible={stringToBool(overloading)}\n      />\n      <hr />\n      {/* <FormPolarRadioGroup\n        name={TAKING_SUMMER}\n        label=\"Are you planning to take course(s) next Summer?\"\n        onChange={({ target }) => {\n          handleOnChange(target, \"summerCredits\");\n        }}\n      />\n      <FormInput\n        type=\"number\"\n        name={SUMMER_CREDITS}\n        label=\"How many crdeits?\"\n        min={0}\n        max={7}\n        visible={stringToBool(takingSummer)}\n      />\n      <hr /> */}\n      {/* <FormPolarRadioGroup\n        name={TAKING_WINTER}\n        label=\"Are you planning to take course(s) next Winter?\"\n        onChange={({ target }) => {\n          handleOnChange(target, \"winterCredits\");\n        }}\n      />\n      <FormInput\n        type=\"number\"\n        name={WINTER_CREDITS}\n        label=\"How many crdeits:\"\n        min={0}\n        max={4}\n        visible={stringToBool(takingWinter)}\n      /> */}\n\n      {/* <hr /> */}\n      {/* <FormSelectGroup\n        label={\"What pace would you like to follow?\"}\n        name={PACE_ID}\n        items={paces}\n        valueSelector=\"paceId\"\n        idSelector=\"paceId\"\n        nameSelector=\"paceTitle\"\n      />\n      <hr /> */}\n      <FormSelectGroup\n        label={\n          \"Up to how many semesters would you like to be planned ahead in time?\"\n        }\n        name={SEMESTERS_TO_PLAN}\n        items={semesters}\n      />\n    </>\n  );\n}\n\nexport default PreferencesInfo;\n","import http from \"./httpService\";\n\nconst apiEndPoint = \"/academics/majors\";\nexport const getMajors = async (majorId) => {\n  const { data: majors } = await http.get(apiEndPoint, { params: { majorId } });\n  return majors;\n};\n\nexport const getMajor = async (majorId) => {\n  const { data: major } = await http.get(`${apiEndPoint}/${majorId}`);\n  return major;\n};\n\nconst majorsService = { getMajors, getMajor };\nexport default majorsService;\n","import http from \"./httpService\";\n\nconst apiEndPoint = \"/academics/minors\";\nexport const getMinors = async () => {\n  const { data: minors } = await http.get(apiEndPoint);\n  return minors;\n};\nexport const getMinor = async (minorId) => {\n  const { data: minor } = await http.get(`${apiEndPoint}/${minorId}`);\n  return minor;\n};\nconst minorsService = { getMinors, getMinor };\nexport default minorsService;\n","import { useEffect, useState } from \"react\";\n\nimport { getMajors } from \"../services/majorsService\";\nimport { getMinors } from \"../services/minorsService\";\nimport { formatMajors, formatMinors } from \"../utils/formattingUtils\";\nconst useMajors = () => {\n  const [majors, setMajors] = useState([]);\n  const [minors, setMinors] = useState([]);\n\n  useEffect(() => {\n    getMajors().then((majors) => {\n      setMajors(formatMajors(majors));\n    });\n\n    getMinors().then((minors) => setMinors(formatMinors(minors)));\n  }, []);\n\n  return { majors, minors };\n};\n\nexport default useMajors;\n","export const formatCatalogs = (catalogs) => {\n  return catalogs.map((c) => {\n    return { id: c.catalogId, name: c.year };\n  });\n};\n\nexport const formatMajors = (majors) =>\n  majors.map((m) => {\n    return { id: m.majorId, name: m.majorTitle };\n  });\n\nexport const formatMinors = (minors) =>\n  minors.map((m) => {\n    return { id: m.minorId, name: m.minorTitle };\n  });\n","import { useEffect, useState } from \"react\";\n\nimport { getCatalogs } from \"../services/catalogsService\";\nimport { formatCatalogs } from \"../utils/formattingUtils\";\n\nfunction useCatalogs(majorId) {\n  const [catalogs, setCatalogs] = useState([]);\n  useEffect(() => {\n    getCatalogs(majorId).then((catalogs) => {\n      setCatalogs(formatCatalogs(catalogs));\n    });\n  }, [majorId]);\n  return { catalogs };\n}\n\nexport default useCatalogs;\n","export const MAJOR_ID = \"majorId\";\nexport const CATALOG_ID = \"catalogId\";\nexport const MINOR_IDS = \"minorIds\";\nexport const SECOND_MAJOR_ID = \"secondMajorId\";\nexport const SECOND_CATALOG_ID = \"secondCatalogId\";\nexport const IS_DOUBLE_MAJORING = \"isDoubleMajoring\";\nexport const IS_MINORING = \"isMinoring\";\nexport const STANDING_ID = \"standingId\";\nexport const SEMESTER_NUMBER = \"semesterNumber\";\n","import http from \"./httpService\";\nconst apiEndPoint = \"/academics/standings\";\n\nexport const getStandings = async () => {\n  const { data: standings } = await http.get(apiEndPoint);\n  return standings;\n};\n\nconst standingService = { getPaces: getStandings };\nexport default standingService;\n","import React, { useEffect, useState } from \"react\";\nimport { useFormikContext } from \"formik\";\n\n// eslint-disable-next-line\nimport { FormPolarRadioGroup, FormSelectGroup } from \"../../components/form\";\nimport { stringToBool } from \"../../utils/stringUtils\";\nimport useMajors from \"../../hooks/useMajors\";\nimport useCatalogs from \"../../hooks/useCatalogs\";\nimport {\n  MAJOR_ID,\n  CATALOG_ID,\n  SECOND_MAJOR_ID,\n  SECOND_CATALOG_ID,\n  MINOR_IDS,\n  // eslint-disable-next-line\n  IS_DOUBLE_MAJORING,\n  // eslint-disable-next-line\n  IS_MINORING,\n  SEMESTER_NUMBER,\n  STANDING_ID,\n} from \"./fieldNames\";\nimport { getStandings } from \"../../services/standingsServices\";\nimport semesters from \"../../constant/semesters\";\n\nfunction MajorInfo() {\n  const [standings, setStandings] = useState([]);\n  useEffect(() => {\n    getStandings()\n      .then((res) => setStandings(res))\n      .catch((err) => console.log(\"Error: \", err));\n  }, []);\n\n  const { values, setFieldValue } = useFormikContext();\n  const { isMinoring, isDoubleMajoring } = values;\n  // eslint-disable-next-line\n  const { majors, minors } = useMajors();\n  const { catalogs: firstMajorCatalogs } = useCatalogs(values.majorId);\n  // eslint-disable-next-line\n  const { catalogs: secondMajorCatalogs } = useCatalogs(values.secondMajorId);\n  useEffect(() => {\n    let mounted = true; //prevents memory leak\n\n    if (!stringToBool(isMinoring) && mounted) setFieldValue(MINOR_IDS, []);\n\n    if (!stringToBool(isDoubleMajoring) && mounted) {\n      setFieldValue(SECOND_MAJOR_ID, \"\");\n      setFieldValue(SECOND_CATALOG_ID, \"\");\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [isDoubleMajoring, isMinoring, setFieldValue]);\n  return (\n    <>\n      <FormSelectGroup\n        label={\"What is your current standing?\"}\n        items={standings}\n        name={STANDING_ID}\n        defaultOption=\"--select standing--\"\n        idSelector=\"standingId\"\n        nameSelector=\"standing\"\n        valueSelector=\"standingId\"\n      />\n\n      <FormSelectGroup\n        label={\"Which semester number is this one?\"}\n        defaultOption={\"--select a semester--\"}\n        items={semesters}\n        name={SEMESTER_NUMBER}\n      />\n      <p className=\"my-1\">\n        (The number of semesters you have taken starting from English 0210 or\n        RHET 1010)\n      </p>\n      <br />\n\n      <FormSelectGroup\n        label=\"What is your major?\"\n        items={majors}\n        name={MAJOR_ID}\n        defaultOption={\"--select a major--\"}\n        onChange={({ target }) => {\n          setFieldValue(CATALOG_ID, \"\");\n          setFieldValue(MAJOR_ID, target.value);\n        }}\n      />\n\n      <br />\n\n      <FormSelectGroup\n        label={\"Which catalog are you follwoing? (declaration catalog)\"}\n        name={CATALOG_ID}\n        items={firstMajorCatalogs}\n        defaultOption={\"--select a catalog--\"}\n        visible={values.majorId}\n      />\n      {/* <br />\n\n      <FormPolarRadioGroup\n        name={IS_MINORING}\n        label=\"Are you taking minor(s)?\"\n      />\n\n      <FormSelectGroup\n        name={MINOR_IDS}\n        label=\"Select minor(s):\"\n        visible={stringToBool(isMinoring)}\n        multiple\n        items={minors}\n      />\n\n      {stringToBool(isMinoring) && (\n        <p className=\"my-1\">\n          <strong>Tip: </strong>hold ctrl while clicking to select multiple\n          minors\n        </p>\n      )}\n      <FormPolarRadioGroup\n        name={IS_DOUBLE_MAJORING}\n        label=\"Are you double majoring?\"\n      />\n\n      <FormSelectGroup\n        label=\"Second Major:\"\n        name={SECOND_MAJOR_ID}\n        visible={stringToBool(isDoubleMajoring)}\n        defaultOption={\"---select a major---\"}\n        items={majors}\n      />\n\n      <FormSelectGroup\n        label=\"Second Major Catalog:\"\n        name={SECOND_CATALOG_ID}\n        visible={stringToBool(isDoubleMajoring)}\n        defaultOption={\"---select a catalog---\"}\n        items={secondMajorCatalogs}\n      />\n      <hr /> */}\n    </>\n  );\n}\n\nexport default MajorInfo;\n","import { useState } from \"react\";\n\n/*\nstate to implement multi-step form */\nconst useFormStep = (startStep = 1) => {\n  const [step, setStep] = useState(startStep);\n  const next = () => {\n    setStep(step + 1);\n  };\n  const back = () => {\n    setStep(step - 1);\n  };\n  return { step, next, back };\n};\n\nexport default useFormStep;\n","import { useState, useEffect } from \"react\";\nimport { getAdvisingSession } from \"../services/advisingService\";\nimport { getCurrentUser } from \"../services/authService\";\nimport { getStudentCourses } from \"../services/userService\";\n\nfunction useUserCourses(props) {\n  const [coursesIds, setStudentCourseIds] = useState([]);\n  const [generalElecCredits, setGeneralElecCredits] = useState(0);\n\n  const getGeneralElecCredits = async (userId) => {\n    const advisingSession = await getAdvisingSession(userId);\n    if (!advisingSession.length) return;\n\n    setGeneralElecCredits(advisingSession[0].generalElecCredits);\n  };\n\n  const getCoursesIds = async (userId) => {\n    const studentCourses = await getStudentCourses(userId);\n    const coursesIds = studentCourses.map((c) => JSON.stringify(c.courseId));\n    setStudentCourseIds(coursesIds);\n  };\n\n  useEffect(() => {\n    const user = getCurrentUser();\n    if (user) {\n      getCoursesIds(user.userId);\n      getGeneralElecCredits(user.userId);\n    }\n  }, []);\n\n  return { coursesIds, generalElecCredits };\n}\n\nexport default useUserCourses;\n","import { useState, useEffect } from \"react\";\nimport { getStudentMajors, getStudentMinors } from \"../services/userService\";\nimport useAuth from \"./useAuth\";\n\nconst useUserMajorInfo = () => {\n  const [firstMajor, setFirstMajor] = useState({\n    majorId: \"\",\n    catalogId: \"\",\n  });\n  const [secondMajor, setSecondMajor] = useState({\n    secondMajorId: \"\",\n    secondCatalogId: \"\",\n    isDoubleMajoring: \"false\",\n  });\n  const [minors, setMinors] = useState({ minorIds: [], isMinoring: \"false\" });\n\n  const getStudentMajorsInfo = async (userId) => {\n    const majors = await getStudentMajors(userId);\n    if (majors && majors.length)\n      setFirstMajor({\n        majorId: majors[0].majorId,\n        catalogId: majors[0].catalogId,\n      });\n    if (majors && majors.length > 1)\n      setSecondMajor({\n        secondMajorId: majors[1].majorId,\n        secondCatalogId: majors[1].catalogId,\n        isDoubleMajoring: \"true\",\n      });\n  };\n  const getStudentMinorsIds = async (userId) => {\n    const minors = await getStudentMinors(userId);\n    const minorIds = minors.map((m) => m.minorId);\n    const isMinoring = minorIds.length ? \"true\" : \"false\";\n    setMinors({ minorIds, isMinoring });\n  };\n\n  const user = useAuth();\n  useEffect(() => {\n    if (user) {\n      getStudentMajorsInfo(user.userId);\n      getStudentMinorsIds(user.userId);\n    }\n  }, [user]);\n\n  return {\n    ...firstMajor,\n    ...secondMajor,\n    ...minors,\n  };\n};\n\nexport default useUserMajorInfo;\n","import { userService, advisingService } from \"../services\";\n\n//if no old major or old major is different from currently chosen major\n// add new major.\n//delete old major only if two majors(old and new) are different\n\nexport const updateUserMajor = (\n  userId,\n  newMajorId,\n  catalogId,\n  oldCatalogId,\n  oldMajorId = null\n) => {\n  console.log(\"HERE\", userId, newMajorId, oldMajorId);\n  if (!oldMajorId && newMajorId)\n    userService.addStudentMajor(userId, newMajorId, catalogId);\n  else if (\n    oldMajorId &&\n    (newMajorId !== oldMajorId || oldCatalogId !== catalogId)\n  ) {\n    userService.deleteStudentMajor(userId, oldMajorId);\n    userService.addStudentMajor(userId, newMajorId, catalogId);\n  }\n};\n\nexport const updateUserMinors = (\n  userId,\n  selectedMinorIds,\n  oldMinorIds = []\n) => {\n  const newMinorIds = selectedMinorIds.filter(\n    (id) => oldMinorIds.indexOf(id) === -1\n  );\n  const deleteMinorIds = oldMinorIds.filter(\n    (id) => selectedMinorIds.indexOf(id) === -1\n  );\n  newMinorIds.forEach((id) => userService.addStudentMinor(userId, id));\n  deleteMinorIds.forEach((id) => userService.deleteStudentMinor(userId, id));\n};\n\nexport const updateStudentCourses = (\n  userId,\n  selectedIds,\n  initialCoursesIds = []\n) => {\n  const newIds = selectedIds.filter(\n    (id) => initialCoursesIds.indexOf(id) === -1\n  );\n  const deletedIds = initialCoursesIds.filter(\n    (id) => selectedIds.indexOf(id) === -1\n  );\n  newIds.forEach((id) => userService.addStudentCourse(userId, id));\n  deletedIds.forEach((id) => userService.deleteStudentCourse(userId, id));\n};\n\nexport const updateAdvisingInfo = async (userId, values) => {\n  const advisingSession = await advisingService.getAdvisingSession(userId);\n\n  if (!advisingSession.length)\n    advisingService.addAdvisingSession({ ...values, userId });\n  else {\n    const { advisingSessionId } = advisingSession[0];\n    const updateAdvisingData = { advisingSessionId, ...values, userId };\n    advisingService.updateAdvisingSessions(updateAdvisingData);\n  }\n};\n\nconst userMajorUtils = {\n  updateUserMajor,\n  updateUserMinors,\n  updateStudentCourses,\n  updateAdvisingInfo,\n};\nexport default userMajorUtils;\n","import * as Yup from \"yup\";\nimport {\n  MAJOR_ID,\n  CATALOG_ID,\n  SECOND_MAJOR_ID,\n  SECOND_CATALOG_ID,\n  MINOR_IDS,\n  IS_DOUBLE_MAJORING,\n  IS_MINORING,\n  STANDING_ID,\n  SEMESTER_NUMBER,\n} from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\nconst SAME_MAJOR_SELECTED = \"You can't select the same major\";\n\nexport default Yup.object({\n  [MAJOR_ID]: Yup.string().required(REQUIRED_MESSAGE),\n\n  [CATALOG_ID]: Yup.string().required(REQUIRED_MESSAGE),\n  [IS_MINORING]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [MINOR_IDS]: Yup.array().required(),\n  [IS_DOUBLE_MAJORING]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [SECOND_MAJOR_ID]: Yup.string()\n    .notRequired()\n    .when(IS_DOUBLE_MAJORING, {\n      is: true,\n      then: Yup.string()\n        .required(REQUIRED_MESSAGE)\n        .notOneOf([Yup.ref(MAJOR_ID), null], SAME_MAJOR_SELECTED),\n    }),\n  [SECOND_CATALOG_ID]: Yup.string()\n    .notRequired()\n    .when(IS_DOUBLE_MAJORING, {\n      is: true,\n      then: Yup.string().required(REQUIRED_MESSAGE),\n    }),\n  [STANDING_ID]: Yup.string().required(REQUIRED_MESSAGE),\n  [SEMESTER_NUMBER]: Yup.string().required(REQUIRED_MESSAGE),\n});\n","import * as Yup from \"yup\";\nimport {\n  OVERLOADING,\n  OVERLOADING_CREDITS,\n  PACE_ID,\n  SEMESTERS_TO_PLAN,\n  SUMMER_CREDITS,\n  TAKING_SUMMER,\n  TAKING_WINTER,\n  WINTER_CREDITS,\n} from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\nconst OVERLOADING_CREDITS_LABEL = \"Overloading credits\";\nconst SUMMER_CREDITS_LABEL = \"Credits in summer\";\nconst WINTER_CREDITS_LABEL = \"Credits in winter\";\n\nexport default Yup.object({\n  [OVERLOADING]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [OVERLOADING_CREDITS]: Yup.number().when(OVERLOADING, {\n    is: true,\n    then: Yup.number()\n      .min(1)\n      .required(REQUIRED_MESSAGE)\n      .label(OVERLOADING_CREDITS_LABEL),\n  }),\n  [TAKING_SUMMER]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [WINTER_CREDITS]: Yup.number().when(TAKING_WINTER, {\n    is: true,\n    then: Yup.number()\n      .required(REQUIRED_MESSAGE)\n      .min(1)\n      .max(4)\n      .label(WINTER_CREDITS_LABEL),\n  }),\n  [TAKING_WINTER]: Yup.boolean().required(REQUIRED_MESSAGE),\n  [SUMMER_CREDITS]: Yup.number()\n    .min(0)\n    .max(7)\n    .when(TAKING_SUMMER, {\n      is: true,\n      then: Yup.number()\n        .required(REQUIRED_MESSAGE)\n        .min(1)\n        .max(7)\n        .label(SUMMER_CREDITS_LABEL),\n    }),\n  [PACE_ID]: Yup.string().required(REQUIRED_MESSAGE),\n  [SEMESTERS_TO_PLAN]: Yup.number().required(REQUIRED_MESSAGE).min(1),\n});\n","import * as Yup from \"yup\";\nimport {\n  COURSES_IDS,\n  GENERAL_ELECTIVE_CREDITS,\n  EXEMPTED_CREDITS,\n} from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\nconst GENERAL_ELECTIVE_LABEL = \"Number of general electives\";\n// const EXMPTED_CREDITS_LABEL=\n\nexport default Yup.object({\n  [COURSES_IDS]: Yup.array().required(REQUIRED_MESSAGE),\n\n  [GENERAL_ELECTIVE_CREDITS]: Yup.number()\n    .integer()\n    .min(0)\n    .required(REQUIRED_MESSAGE)\n    .label(GENERAL_ELECTIVE_LABEL),\n\n  [EXEMPTED_CREDITS]: Yup.number().integer().min(0).label(\"This field\"),\n});\n","import * as Yup from \"yup\";\n\nimport majorValidationSchema from \"../../subforms/majorSubForm/validationSchema\";\nimport preferencesValidationSchema from \"../../subforms/preferncesSubForm/validationSchema\";\nimport coursesCalidationSchema from \"../../subforms/coursesSubForm/validationSchema\";\n\nexport default Yup.object({})\n  .concat(majorValidationSchema)\n  .concat(preferencesValidationSchema)\n  .concat(coursesCalidationSchema);\n","import {\n  MAJOR_ID,\n  CATALOG_ID,\n  SECOND_MAJOR_ID,\n  SECOND_CATALOG_ID,\n  MINOR_IDS,\n  IS_DOUBLE_MAJORING,\n  IS_MINORING,\n  STANDING_ID,\n  SEMESTER_NUMBER,\n} from \"./fieldNames\";\n\nconst majorDefaultValues = {\n  [MAJOR_ID]: \"\",\n  [CATALOG_ID]: \"\",\n  [IS_DOUBLE_MAJORING]: \"\",\n  [SECOND_MAJOR_ID]: \"\",\n  [SECOND_CATALOG_ID]: \"\",\n  [IS_MINORING]: \"\",\n  [MINOR_IDS]: [],\n  [STANDING_ID]: \"\",\n  [SEMESTER_NUMBER]: \"\",\n};\n\nexport default majorDefaultValues;\n","import {\n  OVERLOADING,\n  OVERLOADING_CREDITS,\n  PACE_ID,\n  SEMESTERS_TO_PLAN,\n  SUMMER_CREDITS,\n  TAKING_SUMMER,\n  TAKING_WINTER,\n  WINTER_CREDITS,\n} from \"./fieldNames\";\n\nconst preferencesDefaultValues = {\n  [OVERLOADING]: \"false\",\n  [TAKING_SUMMER]: \"false\",\n  [TAKING_WINTER]: \"false\",\n  [OVERLOADING_CREDITS]: 0,\n  [SUMMER_CREDITS]: 0,\n  [WINTER_CREDITS]: 0,\n  [PACE_ID]: \"1\",\n  [SEMESTERS_TO_PLAN]: \"1\",\n};\n\nexport default preferencesDefaultValues;\n","import {\n  COURSES_IDS,\n  GENERAL_ELECTIVE_CREDITS,\n  EXEMPTED_CREDITS,\n} from \"./fieldNames\";\n\nconst coursesDefaultValues = {\n  [COURSES_IDS]: [],\n  [GENERAL_ELECTIVE_CREDITS]: 0,\n  [EXEMPTED_CREDITS]: 0,\n};\n\nexport default coursesDefaultValues;\n","import majorDefaultValues from \"../../subforms/majorSubForm/defaultValues\";\nimport preferencesDefaultValues from \"../../subforms/preferncesSubForm/defaultValues\";\nimport coursesDefaultValues from \"../../subforms/coursesSubForm/defaultValues\";\nconst advisingDefautlValues = {\n  ...majorDefaultValues,\n  ...preferencesDefaultValues,\n  ...coursesDefaultValues,\n};\nexport default advisingDefautlValues;\n","import React from \"react\";\n\nfunction Disclaimer(props) {\n  return (\n    <div className=\"w-100 mx-4 px-4\">\n      <p className=\"h5\">\n        This system is meant to help you with your advising but it is not\n        perfect. You are still <strong>responsible</strong> to check your\n        catalog and courses plan to ensure no issues will happen during\n        registeration.\n      </p>\n      <br />\n    </div>\n  );\n}\n\nexport default Disclaimer;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Form, SubmitButton } from \"../../components/form\";\nimport CoursesSubForm from \"../../subforms/coursesSubForm/coursesSubForm\";\nimport PreferencesInfo from \"../../subforms/preferncesSubForm/PreferencesInfo\";\nimport MajorInfo from \"../../subforms/majorSubForm/MajorInfo\";\n\n//hooks\nimport {\n  useUserMajorInfo,\n  useFormStep,\n  useUserCourses,\n  useAuth,\n} from \"../../hooks\";\n\n//services\nimport { advisingService, userService } from \"../../services\";\n\n//utils\nimport {\n  updateUserMajor,\n  updateUserMinors,\n  updateStudentCourses,\n} from \"../../utils/advisingSubmissionUtils\";\n\nimport validationSchema from \"./validationSchema\";\nimport defaultValues from \"./defaultValues\";\nimport Disclaimer from \"../Disclaimer\";\n\nfunction AdvisingForm(props) {\n  const { step, back, next } = useFormStep(0);\n  const userMajorInfo = useUserMajorInfo();\n\n  const userCoursesInfo = useUserCourses();\n  const { userId, standingId } = useAuth(true);\n  const initialValues = {\n    ...defaultValues,\n    ...userMajorInfo,\n    ...userCoursesInfo,\n    standingId: standingId === null ? \"\" : standingId,\n    semesterNumber: 1,\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    // console.log(\"Submitting: \", values);\n\n    if (window.confirm(\"Are you sure you want to submit?\")) {\n      try {\n        const {\n          minorIds: oldMinorIds,\n          majorId: oldMajorId,\n          secondMajorId: oldSecondMajorId,\n          catalogId: oldCatalogId,\n          secondCatalogId: oldSecondCatalogId,\n        } = userMajorInfo;\n        const { standingId } = values;\n\n        userService.update(userId, { standingId });\n        updateStudentCourses(\n          userId,\n          values.coursesIds,\n          userCoursesInfo.coursesIds\n        );\n        updateUserMajor(\n          userId,\n          values.majorId,\n          values.catalogId,\n          oldCatalogId,\n          oldMajorId\n        );\n        updateUserMajor(\n          userId,\n          values.secondMajorId,\n          values.secondCatalogId,\n          oldSecondCatalogId,\n          oldSecondMajorId\n        );\n\n        updateUserMinors(userId, values.minorIds, oldMinorIds);\n        // updateAdvisingInfo(userId, values);\n        const { advisingSessionId } = await advisingService.addAdvisingSession({\n          ...values,\n          userId,\n        });\n        await advisingService.generatePlan(advisingSessionId);\n        advisingService.saveAdvisingSession(advisingSessionId);\n      } catch (e) {\n        console.log(\"ERROR in submission: \", e);\n      }\n\n      props.history.replace(\"/advising/results\");\n    }\n\n    setSubmitting(false);\n  };\n\n  const getFormChild = () => {\n    switch (step) {\n      case 0:\n        return <Disclaimer />;\n      case 1:\n        return <MajorInfo />;\n      case 2:\n        return <PreferencesInfo />;\n      case 3:\n        return <CoursesSubForm />;\n\n      default:\n        return null;\n    }\n  };\n  const getFormTitle = () => {\n    switch (step) {\n      case 0:\n        return \"DISCLAIMER!\";\n      case 1:\n        return \"Major Info\";\n      case 2:\n        return \"Preferences\";\n      case 3:\n        return \"Finished Courses\";\n      default:\n        return \"Advising\";\n    }\n  };\n  return (\n    <Form\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      title={getFormTitle()}\n      onSubmit={handleSubmit}\n      enableReinitialize={true}\n    >\n      {getFormChild()}\n\n      <div className=\"d-flex justify-content-between \">\n        {step > 0 && (\n          <button className=\"btn my-3\" onClick={back} type=\"button\">\n            Back\n          </button>\n        )}\n        {step < 3 && (\n          <button className=\"btn my-3 ms-auto\" onClick={next} type=\"button\">\n            Next\n          </button>\n        )}\n        {step === 3 && <SubmitButton label=\"Generate Plan\" />}\n      </div>\n    </Form>\n  );\n}\n\nexport default AdvisingForm;\n","import { Route, Switch } from \"react-router-dom\";\n\nimport AdvisingHome from \"./AdvisingHome\";\nimport AdvisingResults from \"./AdvisingResults\";\nimport AdvisingForm from \"./form/AdvisingForm\";\n\nimport {\n  ADVISING_FORM_ROUTE,\n  ADVISING_HOME_ROUTE,\n  ADVISING_RESULTS_ROUTE,\n} from \"./routes\";\n\nconst AdvisingRouter = () => (\n  <Switch>\n    <Route path={ADVISING_HOME_ROUTE} exact component={AdvisingHome} />\n    <Route path={ADVISING_RESULTS_ROUTE} component={AdvisingResults} />\n    <Route path={ADVISING_FORM_ROUTE} component={AdvisingForm} />\n  </Switch>\n);\n\nexport { ADVISING_FORM_ROUTE, ADVISING_HOME_ROUTE, ADVISING_RESULTS_ROUTE };\n\nexport default AdvisingRouter;\n","export const PASSWORD = \"password\";\nexport const REPEAT_PASSWORD = \"repeatPassword\";\n","import { PASSWORD, REPEAT_PASSWORD } from \"./fieldNames\";\n\nconst resetPasswordDefaultValues = {\n  [PASSWORD]: \"\",\n  [REPEAT_PASSWORD]: \"\",\n};\n\nexport default resetPasswordDefaultValues;\n","import * as Yup from \"yup\";\nimport { PASSWORD, REPEAT_PASSWORD } from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst MIN_PASSWORD_LENGTH = 8;\nconst PASSWORD_TOO_SHORT = `The password must be at least ${MIN_PASSWORD_LENGTH} characters long`;\nconst PASSWORD_CONTAIN_NO_LETTER = \"The password must have at least one letter\";\nconst PASSWORD_CONTAIN_NO_NUMBER = \"Password must have at least one number\";\nconst PASSWORD_CONTAINS_SPACE = \"Password can't contain spaces\";\nconst PASSWORD_NO_MATCH = \"Passwords don't match\";\n\nconst resetPasswordSchema = Yup.object({\n  [PASSWORD]: Yup.string()\n    .min(MIN_PASSWORD_LENGTH, PASSWORD_TOO_SHORT)\n    .matches(/^\\S*$/, PASSWORD_CONTAINS_SPACE)\n    .matches(/[a-zA-Z]/, PASSWORD_CONTAIN_NO_LETTER)\n    .matches(/\\d/, PASSWORD_CONTAIN_NO_NUMBER)\n    .required(REQUIRED_MESSAGE),\n  [REPEAT_PASSWORD]: Yup.string()\n    .required(REQUIRED_MESSAGE)\n    .oneOf([Yup.ref(PASSWORD), null], PASSWORD_NO_MATCH),\n});\nexport default resetPasswordSchema;\n","import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\nimport { resetPassword, validateResetToken } from \"../../services/userService\";\n\nimport resetPasswordDefaultValues from \"./defaultValues\";\nimport resetPasswordSchema from \"./validationSchema\";\nimport { PASSWORD, REPEAT_PASSWORD } from \"./fieldNames\";\n\nfunction ResetPassword(props) {\n  const TokenStatus = {\n    invalid: \"Invalid\",\n    valid: \"Valid\",\n    validating: \"Validating\",\n  };\n\n  const [token, setToken] = useState();\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.validating);\n\n  const { location, history } = props;\n  useEffect(() => {\n    const { token: queryToken } = queryString.parse(location.search);\n    history.replace(location.pathname);\n    validateResetToken(queryToken)\n      .then(() => {\n        setToken(queryToken);\n        setTokenStatus(TokenStatus.valid);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setTokenStatus(TokenStatus.invalid);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = async ({ password }) => {\n    try {\n      const res = await resetPassword(token, password);\n      console.log(res.data);\n      alert(\"Password reset successfuly. You can login with the new password.\");\n      window.location(\"/login\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getForm = () => (\n    <Form\n      initialValues={resetPasswordDefaultValues}\n      title=\"Reset Password\"\n      validationSchema={resetPasswordSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormInput name={PASSWORD} type=\"password\" label=\"New password\" />\n      <FormInput\n        name={REPEAT_PASSWORD}\n        type=\"password\"\n        label=\"Repeat password\"\n      />\n      <SubmitButton />\n    </Form>\n  );\n\n  const getBody = () => {\n    switch (tokenStatus) {\n      case TokenStatus.valid:\n        return getForm();\n      case TokenStatus.invalid:\n        return <Redirect to={{ pathname: \"/\" }} />;\n      default:\n        return <div>Validating your request...</div>;\n    }\n  };\n\n  return getBody();\n}\n\nexport default ResetPassword;\n","import React from \"react\";\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\nimport * as Yup from \"yup\";\nimport { forgotPassword } from \"../../services/userService\";\n\nfunction ForgotPassword(props) {\n  const initalValues = {\n    email: \"\",\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n\n  const handleSubmit = async ({ email }, { setStatus }) => {\n    try {\n      const res = await forgotPassword(email);\n      // console.log(res.data.message);\n      alert(res.data.message);\n    } catch (ex) {\n      const { response } = ex;\n      if (response && response.data && response.data.error)\n        setStatus({ error: response.data.error });\n      else setStatus({ error: \"Unexpected error happened!\" });\n    }\n  };\n\n  return (\n    <Form\n      initialValues={initalValues}\n      validationSchema={validationSchema}\n      title=\"Reset Password\"\n      onSubmit={handleSubmit}\n    >\n      <FormInput type=\"email\" name=\"email\" label=\"AUC Email\" />\n      <SubmitButton />\n    </Form>\n  );\n}\n\nexport default ForgotPassword;\n","export const EMAIL = \"email\";\nexport const PASSWORD = \"password\";\n","import { PASSWORD, EMAIL } from \"./fieldNames\";\n\nconst loginDefaultValues = {\n  [EMAIL]: \"\",\n  [PASSWORD]: \"\",\n};\n\nexport default loginDefaultValues;\n","import * as Yup from \"yup\";\nimport { PASSWORD, EMAIL } from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst INVALID_EMAIL_FORMAT = \"Invalid email format\";\nconst EMAIL_FORMAT = /^.+@aucegypt.edu$/;\nconst AUC_EMAIL_ONLY = \"You can use AUC email only\";\n\nconst loginSchema = Yup.object({\n  [EMAIL]: Yup.string()\n    .email(INVALID_EMAIL_FORMAT)\n    .required(REQUIRED_MESSAGE)\n    .matches(EMAIL_FORMAT, AUC_EMAIL_ONLY),\n  [PASSWORD]: Yup.string().required(REQUIRED_MESSAGE),\n});\nexport default loginSchema;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\n// import GoogleLoginButton from \"../../components/GoogleLoginButton\";\nimport auth from \"../../services/authService\";\n\nimport {\n  FORGOT_PASSWORD_ROUTE,\n  SIGN_UP_ROUTE,\n  VERIFY_EMAIL_ROUTE,\n} from \"../routes\";\n\nimport defaultValues from \"./defaultValues\";\nimport validationSchema from \"./validationSchema\";\nimport { PASSWORD, EMAIL } from \"./fieldNames\";\nfunction LoginForm(props) {\n  const onSubmit = async (values, { setErrors, setStatus, ...rest }) => {\n    // console.log(\"API URL: \", process.env);\n    // console.log(\"Values: \", values);\n    try {\n      await auth.login(values);\n      window.location = \"/\";\n    } catch (ex) {\n      const { response } = ex;\n      const { status } = response;\n      if (response && (status === 400 || status === 401)) {\n        // console.log(response.data);\n      }\n      // console.log(response);\n      setStatus({ error: response.data.error });\n    }\n  };\n  return (\n    <div className=\"m-auto\">\n      <Form\n        title=\"Login\"\n        initialValues={defaultValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <FormInput\n          label=\"AUC email\"\n          name={EMAIL}\n          type=\"email\"\n          aria-required=\"true\"\n        />\n\n        <FormInput\n          label=\"Password\"\n          name={PASSWORD}\n          type=\"password\"\n          aria-required=\"true\"\n        />\n        <div className=\"d-flex justify-content-between \">\n          <Link to={FORGOT_PASSWORD_ROUTE}>Forgot password?</Link>\n          <p>\n            New user?\n            <Link to={SIGN_UP_ROUTE}> Sign up</Link>\n          </p>\n        </div>\n        <div>\n          <p>\n            <Link to={VERIFY_EMAIL_ROUTE}> Resend email verification?</Link>\n          </p>\n        </div>\n        <SubmitButton label=\"Login\" />\n      </Form>\n      {/* <div className=\"d-flex justify-content-center\">\n        <strong className=\"text-center\">\n          Or login in using\n          <GoogleLoginButton />\n        </strong>\n      </div> */}\n    </div>\n  );\n}\n\nexport default LoginForm;\n","export const FIRST_NAME = \"firstName\";\nexport const LAST_NAME = \"lastName\";\nexport const EMAIL = \"email\";\nexport const USER_ID = \"userId\";\nexport const PASSWORD = \"password\";\nexport const REPEAT_PASSWORD = \"repeatPassword\";\n","import React from \"react\";\nimport { FormInput } from \"../../components/form\";\nimport {\n  FIRST_NAME,\n  LAST_NAME,\n  EMAIL,\n  USER_ID,\n  PASSWORD,\n  REPEAT_PASSWORD,\n} from \"./fieldNames\";\n\nconst UserSubForm = () => {\n  return (\n    <>\n      <div className=\"d-flex\">\n        <div>\n          <FormInput\n            label=\"First Name\"\n            name={FIRST_NAME}\n            aria-required=\"true\"\n          />\n        </div>\n        <div className=\"mx-3\">\n          <FormInput label=\"Last Name\" name={LAST_NAME} aria-required=\"true\" />\n        </div>\n      </div>\n      <FormInput\n        label=\"AUC Email\"\n        name={EMAIL}\n        type=\"email\"\n        aria-required=\"true\"\n      />\n      <FormInput\n        label=\"AUC ID\"\n        name={USER_ID}\n        type=\"number\"\n        aria-required=\"true\"\n      />\n      <FormInput\n        label=\"Password\"\n        name={PASSWORD}\n        type=\"password\"\n        aria-required=\"true\"\n      />\n      <FormInput\n        label=\"Confirm Password\"\n        name={REPEAT_PASSWORD}\n        type=\"password\"\n      />\n    </>\n  );\n};\n\nexport default UserSubForm;\n","import * as Yup from \"yup\";\nimport {\n  FIRST_NAME,\n  LAST_NAME,\n  EMAIL,\n  USER_ID,\n  PASSWORD,\n  REPEAT_PASSWORD,\n} from \"./fieldNames\";\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst MAX_NAME_LENGTH = 15;\nconst NAME_FORMAT = /^[A-Za-z1-9]+$/;\nconst NAME_TOO_LONG = `The name can't exceed ${MAX_NAME_LENGTH} characters long.`;\nconst INVALID_NAME_FORMAT =\n  \"Invalid name format. Name can contain letters and numbers only.\";\n\nconst MIN_ID_VALUE = 100000000;\nconst MAX_ID_VALUE = 999999999;\nconst ID_VALUE_TOO_SMALL =\n  \"Studnet ID must be positive and consist of 9 digits\";\nconst ID_VALUE_TOO_LARGE = \"Studnet ID must consist of no more than 9 digits\";\n\nconst INVALID_EMAIL_FORMAT = \"Invalid email format\";\nconst EMAIL_FORMAT = /^.+@aucegypt.edu$/i;\nconst AUC_EMAIL_ONLY = \"You can use AUC email only\";\n\nconst MIN_PASSWORD_LENGTH = 8;\nconst PASSWORD_TOO_SHORT = `The password must be at least ${MIN_PASSWORD_LENGTH} characters long`;\nconst PASSWORD_CONTAIN_NO_LETTER = \"The password must have at least one letter\";\nconst PASSWORD_CONTAIN_NO_NUMBER = \"Password must have at least one number\";\nconst PASSWORD_CONTAINS_SPACE = \"Password can't contain spaces\";\nconst PASSWORD_NO_MATCH = \"Passwords don't match\";\n\nexport default Yup.object({\n  [FIRST_NAME]: Yup.string()\n    .matches(NAME_FORMAT, INVALID_NAME_FORMAT)\n    .max(MAX_NAME_LENGTH, NAME_TOO_LONG)\n    .required(REQUIRED_MESSAGE),\n  [LAST_NAME]: Yup.string()\n    .matches(NAME_FORMAT, INVALID_NAME_FORMAT)\n    .max(MAX_NAME_LENGTH, NAME_TOO_LONG)\n    .required(REQUIRED_MESSAGE),\n  [EMAIL]: Yup.string()\n    .email(INVALID_EMAIL_FORMAT)\n    .required(REQUIRED_MESSAGE)\n    .matches(EMAIL_FORMAT, AUC_EMAIL_ONLY),\n\n  [USER_ID]: Yup.number()\n    .integer()\n    .positive()\n    // .min(MIN_ID_VALUE, ID_VALUE_TOO_SMALL)\n    // .max(MAX_ID_VALUE, ID_VALUE_TOO_LARGE)\n    .required(REQUIRED_MESSAGE),\n\n  [PASSWORD]: Yup.string()\n    .min(MIN_PASSWORD_LENGTH, PASSWORD_TOO_SHORT)\n    .matches(/^\\S*$/, PASSWORD_CONTAINS_SPACE)\n    .matches(/[a-zA-Z]/, PASSWORD_CONTAIN_NO_LETTER)\n    .matches(/\\d/, PASSWORD_CONTAIN_NO_NUMBER)\n    .required(REQUIRED_MESSAGE),\n  [REPEAT_PASSWORD]: Yup.string()\n    .required(REQUIRED_MESSAGE)\n    .oneOf([Yup.ref(PASSWORD), null], PASSWORD_NO_MATCH),\n});\n","import * as Yup from \"yup\";\nimport userValidationSchema from \"../../subforms/userSubForm/validationSchema\";\n\nexport default Yup.object({}).concat(userValidationSchema);\n","import {\n  FIRST_NAME,\n  LAST_NAME,\n  EMAIL,\n  USER_ID,\n  PASSWORD,\n  REPEAT_PASSWORD,\n} from \"./fieldNames\";\n\nconst userDefaultValues = {\n  [FIRST_NAME]: \"\",\n  [LAST_NAME]: \"\",\n  [EMAIL]: \"\",\n  [USER_ID]: \"\",\n  [PASSWORD]: \"\",\n  [REPEAT_PASSWORD]: \"\",\n};\n\nexport default userDefaultValues;\n","import userDefaultValues from \"../../subforms/userSubForm/defaultValues\";\n\nconst signUpDefaultValues = {\n  ...userDefaultValues,\n};\nexport default signUpDefaultValues;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Form, SubmitButton } from \"../../components/form\";\n// import GoogleLoginButton from \"../../components/GoogleLoginButton\";\n\nimport UserSubForm from \"../../subforms/userSubForm/UserSubForm\";\n\n//services\nimport { userService } from \"../../services\";\n\n//routes\nimport { LOGIN_ROUTE, VERIFY_EMAIL_ROUTE } from \"../routes\";\n\n//form\nimport validationSchema from \"./validationSchema\";\nimport defaultValues from \"./defaultValues\";\n\nconst SignUpForm = (props) => {\n  const onSubmit = async (values, { setStatus }) => {\n    try {\n      console.log(`Subimtting Values:`, values);\n      await userService.register(values);\n      alert(\n        \"Account registered successfuly. Please verify your email to login.\"\n      );\n      props.history.push({\n        pathname: VERIFY_EMAIL_ROUTE,\n        state: {\n          email: values.email,\n        },\n      });\n    } catch (ex) {\n      const { response } = ex;\n      if (response) {\n        const { status, data } = response;\n\n        if (status && status >= 400 && status < 500) {\n          setStatus({ error: data.error });\n        }\n\n        console.log(response.data);\n      }\n      console.log(response);\n    }\n  };\n\n  return (\n    <>\n      <Form\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        initialValues={defaultValues}\n        title={\"Sign Up\"}\n      >\n        <UserSubForm />\n        <SubmitButton label=\"Sign Up\" />\n\n        {/* Already a user */}\n        <div className=\"d-flex align-items-center\">\n          <p className=\"ms-auto \">\n            Already a user? <Link to={LOGIN_ROUTE}>Login</Link>\n          </p>\n        </div>\n      </Form>\n      {/* <div className=\"d-flex justify-content-center\">\n        <strong className=\"text-center\">\n          Or login in using\n          <GoogleLoginButton />\n        </strong>\n      </div> */}\n    </>\n  );\n};\n\nexport default SignUpForm;\n","export const EMAIL = \"email\";\n","import { EMAIL } from \"./fieldNames\";\n\nconst verifyEmailDefaultValues = {\n  [EMAIL]: \"\",\n};\n\nexport default verifyEmailDefaultValues;\n","import * as Yup from \"yup\";\nimport { EMAIL } from \"./fieldNames\";\n\nconst REQUIRED_MESSAGE = \"This field is required\";\n\nconst INVALID_EMAIL_FORMAT = \"Invalid email format\";\nconst EMAIL_FORMAT = /^.+@aucegypt.edu$/;\nconst AUC_EMAIL_ONLY = \"You can use AUC email only\";\n\nconst verifyEmailSchema = Yup.object({\n  [EMAIL]: Yup.string()\n    .email(INVALID_EMAIL_FORMAT)\n    .required(REQUIRED_MESSAGE)\n    .matches(EMAIL_FORMAT, AUC_EMAIL_ONLY),\n});\nexport default verifyEmailSchema;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Form, FormInput, SubmitButton } from \"../../components/form\";\n\nimport { LOGIN_ROUTE } from \"../routes\";\nimport { HOME_ROUTE } from \"../../common/routes\";\n\nimport auth from \"../../services/authService\";\nimport { resendVerification } from \"../../services/userService\";\n\nimport { EMAIL } from \"./fieldNames\";\nimport verifyEmailDefaultValues from \"./defaultValues\";\nimport verifyEmailSchema from \"./validationSchema\";\n\nconst TITLE = \"Email Verification\";\n\nfunction VerifyEmail(props) {\n  const [showForm, setShowForm] = useState(false);\n\n  const user = auth.getCurrentUser();\n  if (user) return <Redirect to={{ pathname: HOME_ROUTE }} />;\n\n  const { state } = props.history.location; //get email from previous route, if given.\n  if (state && state.email) verifyEmailDefaultValues.email = state.email;\n\n  const handleSubmit = async ({ email }, { setStatus }) => {\n    try {\n      const res = await resendVerification(email);\n      // console.log(res);\n      alert(\"Email sent successfully\");\n    } catch (error) {\n      const { response } = error;\n      const { data, status } = response;\n      if (response && status && status >= 400 && status < 500)\n        setStatus({ error: data.error });\n    }\n  };\n\n  const getMessage = () => (\n    <>\n      <p>Please check your email inbox to verify your email.</p>\n      <p className=\"my-2\">\n        If you already confirmed your email,{\" \"}\n        <a href={LOGIN_ROUTE}>login here</a>.\n      </p>\n    </>\n  );\n\n  const getForm = () => {\n    if (!showForm) return null;\n    return (\n      <Form\n        title={TITLE}\n        initialValues={verifyEmailDefaultValues}\n        validationSchema={verifyEmailSchema}\n        onSubmit={handleSubmit}\n      >\n        {getMessage()}\n        <FormInput\n          label=\"Email\"\n          name={EMAIL}\n          placeholder=\"email@aucegypt.edu\"\n        />\n        <SubmitButton />\n      </Form>\n    );\n  };\n\n  return (\n    <>\n      {!showForm && (\n        <div className=\"text-center my-4\">\n          <h1 className=\"text-center mb-4 \">{TITLE}</h1>\n          {getMessage()}\n          <p>\n            Recieved nothing?\n            <button\n              type=\"button\"\n              className=\"btn btn-sm mx-2\"\n              onClick={() => setShowForm(true)}\n            >\n              Resend\n            </button>\n          </p>\n        </div>\n      )}\n      {getForm()}\n    </>\n  );\n}\n\nexport default VerifyEmail;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport ResetPassword from \"./resetPassword/ResetPassword\";\nimport ForgotPassword from \"./forgotPassword/ForgotPassword\";\nimport LoginForm from \"./loginForm/LoginForm\";\nimport SignUpForm from \"./signUpForm/SignupForm\";\nimport VerifyEmail from \"./verifyEmail/VerifyEmail\";\n\nimport {\n  ACCOUNT_ROUTE,\n  FORGOT_PASSWORD_ROUTE,\n  LOGIN_ROUTE,\n  RESET_PASSWORD_ROUTE,\n  SIGN_UP_ROUTE,\n  VERIFY_EMAIL_ROUTE,\n} from \"./routes\";\nimport { NOT_FOUND_ROUTE } from \"../common\";\nimport auth from \"../services/authService\";\n\nfunction AccountRouter({ history }) {\n  useEffect(() => {\n    if (auth.getCurrentUser()) history.push(\"/\");\n  }, [history]);\n\n  return (\n    <Switch>\n      <Route path={FORGOT_PASSWORD_ROUTE} component={ForgotPassword} />\n      <Route path={RESET_PASSWORD_ROUTE} component={ResetPassword} />\n      <Route path={VERIFY_EMAIL_ROUTE} component={VerifyEmail} />\n      <Route path={LOGIN_ROUTE} component={LoginForm} />\n      <Route path={SIGN_UP_ROUTE} component={SignUpForm} />\n      <Redirect to={{ pathname: { NOT_FOUND_ROUTE } }} />\n    </Switch>\n  );\n}\nexport {\n  ACCOUNT_ROUTE,\n  FORGOT_PASSWORD_ROUTE,\n  LOGIN_ROUTE,\n  RESET_PASSWORD_ROUTE,\n  SIGN_UP_ROUTE,\n  VERIFY_EMAIL_ROUTE,\n};\nexport default AccountRouter;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\nfunction ProtectedRoute({ component: Component, render, ...rest }) {\n  const user = auth.getCurrentUser();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!user) return <Redirect to={{ pathname: \"/login\" }} />;\n\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import \"./App.css\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n  HashRouter,\n} from \"react-router-dom\";\n\nimport { AboutUs, ContactUs, Footer, Header, Home, NotFound } from \"./common\";\nimport {\n  ABOUT_US_ROUTE,\n  CONTACT_US_ROUTE,\n  HOME_ROUTE,\n  NOT_FOUND_ROUTE,\n} from \"./common\";\n\nimport { Profile, Logout, LOGOUT_ROUTE, PROFILE_ROUTE } from \"./profile\";\n\nimport AdvisingRouter, { ADVISING_HOME_ROUTE } from \"./advising\";\nimport AccountRouter, { ACCOUNT_ROUTE } from \"./account\";\n\nimport useAuth from \"./hooks/useAuth\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\nfunction App() {\n  const user = useAuth();\n\n  return (\n    <HashRouter>\n      <div className=\"page-container\">\n        <Header user={user} />\n\n        <Switch>\n          <Route\n            path={HOME_ROUTE}\n            exact\n            render={(props) => <Home {...props} user={user} />}\n          />\n          <Route>\n            <main className=\"container content-wrapper\">\n              <Switch>\n                <ProtectedRoute\n                  path={ADVISING_HOME_ROUTE}\n                  component={AdvisingRouter}\n                />\n                <Route path={ACCOUNT_ROUTE} component={AccountRouter} />\n\n                <ProtectedRoute path={PROFILE_ROUTE} component={Profile} />\n                <Route path={LOGOUT_ROUTE} component={Logout} />\n\n                <Route path={CONTACT_US_ROUTE} component={ContactUs} />\n                <Route path={ABOUT_US_ROUTE} component={AboutUs} />\n\n                <Route exact path={NOT_FOUND_ROUTE} component={NotFound} />\n                <Redirect to={{ pathname: { NOT_FOUND_ROUTE } }} />\n              </Switch>\n            </main>\n          </Route>\n          <Route path={NOT_FOUND_ROUTE} component={NotFound} />\n        </Switch>\n\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}